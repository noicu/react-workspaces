(self.webpackChunk_projectstorm_react_workspaces_demos=self.webpackChunk_projectstorm_react_workspaces_demos||[]).push([[902],{"../node_modules/.pnpm/@storybook+blocks@7.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/blocks/dist/Color-3YIJY6X7.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColorControl:()=>ColorControl,default:()=>Color_default});var chunk_GWAJ4KRU=__webpack_require__("../node_modules/.pnpm/@storybook+blocks@7.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/blocks/dist/chunk-GWAJ4KRU.mjs"),react=__webpack_require__("../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");function u(){return(u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function c(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r.indexOf(t=a[n])>=0||(o[t]=e[t]);return o}function i(e){var t=(0,react.useRef)(e),n=(0,react.useRef)((function(e){t.current&&t.current(e)}));return t.current=e,n.current}var s=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=1),e>t?t:e<r?r:e},f=function(e){return"touches"in e},v=function(e){return e&&e.ownerDocument.defaultView||self},d=function(e,r,t){var n=e.getBoundingClientRect(),o=f(r)?function(e,r){for(var t=0;t<e.length;t++)if(e[t].identifier===r)return e[t];return e[0]}(r.touches,t):r;return{left:s((o.pageX-(n.left+v(e).pageXOffset))/n.width),top:s((o.pageY-(n.top+v(e).pageYOffset))/n.height)}},h=function(e){!f(e)&&e.preventDefault()},m=react.memo((function(o){var a=o.onMove,l=o.onKey,s=c(o,["onMove","onKey"]),m=(0,react.useRef)(null),g=i(a),p=i(l),b=(0,react.useRef)(null),_=(0,react.useRef)(!1),x=(0,react.useMemo)((function(){var e=function(e){h(e),(f(e)?e.touches.length>0:e.buttons>0)&&m.current?g(d(m.current,e,b.current)):t(!1)},r=function(){return t(!1)};function t(t){var n=_.current,o=v(m.current),a=t?o.addEventListener:o.removeEventListener;a(n?"touchmove":"mousemove",e),a(n?"touchend":"mouseup",r)}return[function(e){var r=e.nativeEvent,n=m.current;if(n&&(h(r),!function(e,r){return r&&!f(e)}(r,_.current)&&n)){if(f(r)){_.current=!0;var o=r.changedTouches||[];o.length&&(b.current=o[0].identifier)}n.focus(),g(d(n,r,b.current)),t(!0)}},function(e){var r=e.which||e.keyCode;r<37||r>40||(e.preventDefault(),p({left:39===r?.05:37===r?-.05:0,top:40===r?.05:38===r?-.05:0}))},t]}),[p,g]),C=x[0],E=x[1],H=x[2];return(0,react.useEffect)((function(){return H}),[H]),react.createElement("div",u({},s,{onTouchStart:C,onMouseDown:C,className:"react-colorful__interactive",ref:m,onKeyDown:E,tabIndex:0,role:"slider"}))})),g=function(e){return e.filter(Boolean).join(" ")},p=function(r){var t=r.color,n=r.left,o=r.top,a=void 0===o?.5:o,l=g(["react-colorful__pointer",r.className]);return react.createElement("div",{className:l,style:{top:100*a+"%",left:100*n+"%"}},react.createElement("div",{className:"react-colorful__pointer-fill",style:{backgroundColor:t}}))},b=function(e,r,t){return void 0===r&&(r=0),void 0===t&&(t=Math.pow(10,r)),Math.round(t*e)/t},_={grad:.9,turn:360,rad:360/(2*Math.PI)},x=function(e){return L(C(e))},C=function(e){return"#"===e[0]&&(e=e.substring(1)),e.length<6?{r:parseInt(e[0]+e[0],16),g:parseInt(e[1]+e[1],16),b:parseInt(e[2]+e[2],16),a:4===e.length?b(parseInt(e[3]+e[3],16)/255,2):1}:{r:parseInt(e.substring(0,2),16),g:parseInt(e.substring(2,4),16),b:parseInt(e.substring(4,6),16),a:8===e.length?b(parseInt(e.substring(6,8),16)/255,2):1}},E=function(e,r){return void 0===r&&(r="deg"),Number(e)*(_[r]||1)},H=function(e){var r=/hsla?\(?\s*(-?\d*\.?\d+)(deg|rad|grad|turn)?[,\s]+(-?\d*\.?\d+)%?[,\s]+(-?\d*\.?\d+)%?,?\s*[/\s]*(-?\d*\.?\d+)?(%)?\s*\)?/i.exec(e);return r?N({h:E(r[1],r[2]),s:Number(r[3]),l:Number(r[4]),a:void 0===r[5]?1:Number(r[5])/(r[6]?100:1)}):{h:0,s:0,v:0,a:1}},N=function(e){var r=e.s,t=e.l;return{h:e.h,s:(r*=(t<50?t:100-t)/100)>0?2*r/(t+r)*100:0,v:t+r,a:e.a}},w=function(e){return K(I(e))},y=function(e){var r=e.s,t=e.v,n=e.a,o=(200-r)*t/100;return{h:b(e.h),s:b(o>0&&o<200?r*t/100/(o<=100?o:200-o)*100:0),l:b(o/2),a:b(n,2)}},q=function(e){var r=y(e);return"hsl("+r.h+", "+r.s+"%, "+r.l+"%)"},k=function(e){var r=y(e);return"hsla("+r.h+", "+r.s+"%, "+r.l+"%, "+r.a+")"},I=function(e){var r=e.h,t=e.s,n=e.v,o=e.a;r=r/360*6,t/=100,n/=100;var a=Math.floor(r),l=n*(1-t),u=n*(1-(r-a)*t),c=n*(1-(1-r+a)*t),i=a%6;return{r:b(255*[n,u,l,l,c,n][i]),g:b(255*[c,n,n,u,l,l][i]),b:b(255*[l,l,c,n,n,u][i]),a:b(o,2)}},z=function(e){var r=/rgba?\(?\s*(-?\d*\.?\d+)(%)?[,\s]+(-?\d*\.?\d+)(%)?[,\s]+(-?\d*\.?\d+)(%)?,?\s*[/\s]*(-?\d*\.?\d+)?(%)?\s*\)?/i.exec(e);return r?L({r:Number(r[1])/(r[2]?100/255:1),g:Number(r[3])/(r[4]?100/255:1),b:Number(r[5])/(r[6]?100/255:1),a:void 0===r[7]?1:Number(r[7])/(r[8]?100:1)}):{h:0,s:0,v:0,a:1}},D=function(e){var r=e.toString(16);return r.length<2?"0"+r:r},K=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=o<1?D(b(255*o)):"";return"#"+D(r)+D(t)+D(n)+a},L=function(e){var r=e.r,t=e.g,n=e.b,o=e.a,a=Math.max(r,t,n),l=a-Math.min(r,t,n),u=l?a===r?(t-n)/l:a===t?2+(n-r)/l:4+(r-t)/l:0;return{h:b(60*(u<0?u+6:u)),s:b(a?l/a*100:0),v:b(a/255*100),a:o}},S=react.memo((function(r){var t=r.hue,n=r.onChange,o=g(["react-colorful__hue",r.className]);return react.createElement("div",{className:o},react.createElement(m,{onMove:function(e){n({h:360*e.left})},onKey:function(e){n({h:s(t+360*e.left,0,360)})},"aria-label":"Hue","aria-valuenow":b(t),"aria-valuemax":"360","aria-valuemin":"0"},react.createElement(p,{className:"react-colorful__hue-pointer",left:t/360,color:q({h:t,s:100,v:100,a:1})})))})),T=react.memo((function(r){var t=r.hsva,n=r.onChange,o={backgroundColor:q({h:t.h,s:100,v:100,a:1})};return react.createElement("div",{className:"react-colorful__saturation",style:o},react.createElement(m,{onMove:function(e){n({s:100*e.left,v:100-100*e.top})},onKey:function(e){n({s:s(t.s+100*e.left,0,100),v:s(t.v-100*e.top,0,100)})},"aria-label":"Color","aria-valuetext":"Saturation "+b(t.s)+"%, Brightness "+b(t.v)+"%"},react.createElement(p,{className:"react-colorful__saturation-pointer",top:1-t.v/100,left:t.s/100,color:q(t)})))})),F=function(e,r){if(e===r)return!0;for(var t in e)if(e[t]!==r[t])return!1;return!0},P=function(e,r){return e.replace(/\s/g,"")===r.replace(/\s/g,"")},X=function(e,r){return e.toLowerCase()===r.toLowerCase()||F(C(e),C(r))};function Y(e,t,l){var u=i(l),c=(0,react.useState)((function(){return e.toHsva(t)})),s=c[0],f=c[1],v=(0,react.useRef)({color:t,hsva:s});(0,react.useEffect)((function(){if(!e.equal(t,v.current.color)){var r=e.toHsva(t);v.current={hsva:r,color:t},f(r)}}),[t,e]),(0,react.useEffect)((function(){var r;F(s,v.current.hsva)||e.equal(r=e.fromHsva(s),v.current.color)||(v.current={hsva:s,color:r},u(r))}),[s,e,u]);var d=(0,react.useCallback)((function(e){f((function(r){return Object.assign({},r,e)}))}),[]);return[s,d]}var R,ColorSpace2,V="undefined"!=typeof window?react.useLayoutEffect:react.useEffect,J=new Map,Q=function(e){V((function(){var r=e.current?e.current.ownerDocument:document;if(void 0!==r&&!J.has(r)){var t=r.createElement("style");t.innerHTML='.react-colorful{position:relative;display:flex;flex-direction:column;width:200px;height:200px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.react-colorful__saturation{position:relative;flex-grow:1;border-color:transparent;border-bottom:12px solid #000;border-radius:8px 8px 0 0;background-image:linear-gradient(0deg,#000,transparent),linear-gradient(90deg,#fff,hsla(0,0%,100%,0))}.react-colorful__alpha-gradient,.react-colorful__pointer-fill{content:"";position:absolute;left:0;top:0;right:0;bottom:0;pointer-events:none;border-radius:inherit}.react-colorful__alpha-gradient,.react-colorful__saturation{box-shadow:inset 0 0 0 1px rgba(0,0,0,.05)}.react-colorful__alpha,.react-colorful__hue{position:relative;height:24px}.react-colorful__hue{background:linear-gradient(90deg,red 0,#ff0 17%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red)}.react-colorful__last-control{border-radius:0 0 8px 8px}.react-colorful__interactive{position:absolute;left:0;top:0;right:0;bottom:0;border-radius:inherit;outline:none;touch-action:none}.react-colorful__pointer{position:absolute;z-index:1;box-sizing:border-box;width:28px;height:28px;transform:translate(-50%,-50%);background-color:#fff;border:2px solid #fff;border-radius:50%;box-shadow:0 2px 4px rgba(0,0,0,.2)}.react-colorful__interactive:focus .react-colorful__pointer{transform:translate(-50%,-50%) scale(1.1)}.react-colorful__alpha,.react-colorful__alpha-pointer{background-color:#fff;background-image:url(\'data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>\')}.react-colorful__saturation-pointer{z-index:3}.react-colorful__hue-pointer{z-index:2}',J.set(r,t);var n=R||__webpack_require__.nc;n&&t.setAttribute("nonce",n),r.head.appendChild(t)}}),[])},U=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,["className","colorModel","color","onChange"]),f=(0,react.useRef)(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g(["react-colorful",n]);return react.createElement("div",u({},s,{ref:f,className:m}),react.createElement(T,{hsva:d,onChange:h}),react.createElement(S,{hue:d.h,onChange:h,className:"react-colorful__last-control"}))},W={defaultColor:"000",toHsva:x,fromHsva:function(e){return w({h:e.h,s:e.s,v:e.v,a:1})},equal:X},ee=function(r){var t=r.className,n=r.hsva,o=r.onChange,a={backgroundImage:"linear-gradient(90deg, "+k(Object.assign({},n,{a:0}))+", "+k(Object.assign({},n,{a:1}))+")"},l=g(["react-colorful__alpha",t]),u=b(100*n.a);return react.createElement("div",{className:l},react.createElement("div",{className:"react-colorful__alpha-gradient",style:a}),react.createElement(m,{onMove:function(e){o({a:e.left})},onKey:function(e){o({a:s(n.a+e.left)})},"aria-label":"Alpha","aria-valuetext":u+"%","aria-valuenow":u,"aria-valuemin":"0","aria-valuemax":"100"},react.createElement(p,{className:"react-colorful__alpha-pointer",left:n.a,color:k(n)})))},re=function(t){var n=t.className,o=t.colorModel,a=t.color,l=void 0===a?o.defaultColor:a,i=t.onChange,s=c(t,["className","colorModel","color","onChange"]),f=(0,react.useRef)(null);Q(f);var v=Y(o,l,i),d=v[0],h=v[1],m=g(["react-colorful",n]);return react.createElement("div",u({},s,{ref:f,className:m}),react.createElement(T,{hsva:d,onChange:h}),react.createElement(S,{hue:d.h,onChange:h}),react.createElement(ee,{hsva:d,onChange:h,className:"react-colorful__last-control"}))},le={defaultColor:"hsla(0, 0%, 0%, 1)",toHsva:H,fromHsva:k,equal:P},Ee={defaultColor:"rgba(0, 0, 0, 1)",toHsva:z,fromHsva:function(e){var r=I(e);return"rgba("+r.r+", "+r.g+", "+r.b+", "+r.a+")"},equal:P},color_convert=__webpack_require__("../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js"),color_convert_default=__webpack_require__.n(color_convert),throttle=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/throttle.js"),throttle_default=__webpack_require__.n(throttle),dist=__webpack_require__("../node_modules/.pnpm/@storybook+theming@7.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/theming/dist/index.mjs"),components_dist=__webpack_require__("../node_modules/.pnpm/@storybook+components@7.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/components/dist/index.mjs"),Wrapper=dist.zo.div({position:"relative",maxWidth:250}),PickerTooltip=(0,dist.zo)(components_dist.Rl)({position:"absolute",zIndex:1,top:4,left:4}),TooltipContent=dist.zo.div({width:200,margin:5,".react-colorful__saturation":{borderRadius:"4px 4px 0 0"},".react-colorful__hue":{boxShadow:"inset 0 0 0 1px rgb(0 0 0 / 5%)"},".react-colorful__last-control":{borderRadius:"0 0 4px 4px"}}),Note=(0,dist.zo)(components_dist.gu)((({theme})=>({fontFamily:theme.typography.fonts.base}))),Swatches=dist.zo.div({display:"grid",gridTemplateColumns:"repeat(9, 16px)",gap:6,padding:3,marginTop:5,width:200}),SwatchColor=dist.zo.div((({theme,active})=>({width:16,height:16,boxShadow:active?`${theme.appBorderColor} 0 0 0 1px inset, ${theme.textMutedColor}50 0 0 0 4px`:`${theme.appBorderColor} 0 0 0 1px inset`,borderRadius:theme.appBorderRadius}))),Swatch=({value,active,onClick,style,...props})=>{let backgroundImage=`linear-gradient(${value}, ${value}), url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill-opacity=".05"><path d="M8 0h8v8H8zM0 8h8v8H0z"/></svg>'), linear-gradient(#fff, #fff)`;return react.createElement(SwatchColor,{...props,active,onClick,style:{...style,backgroundImage}})},Input=(0,dist.zo)(components_dist.l0.Input)((({theme})=>({width:"100%",paddingLeft:30,paddingRight:30,boxSizing:"border-box",fontFamily:theme.typography.fonts.base}))),ToggleIcon=(0,dist.zo)(components_dist.PJ)((({theme})=>({position:"absolute",zIndex:1,top:6,right:7,width:20,height:20,padding:4,boxSizing:"border-box",cursor:"pointer",color:theme.input.color}))),ColorSpace=((ColorSpace2=ColorSpace||{}).RGB="rgb",ColorSpace2.HSL="hsl",ColorSpace2.HEX="hex",ColorSpace2),COLOR_SPACES=Object.values(ColorSpace),COLOR_REGEXP=/\(([0-9]+),\s*([0-9]+)%?,\s*([0-9]+)%?,?\s*([0-9.]+)?\)/,RGB_REGEXP=/^\s*rgba?\(([0-9]+),\s*([0-9]+),\s*([0-9]+),?\s*([0-9.]+)?\)\s*$/i,HSL_REGEXP=/^\s*hsla?\(([0-9]+),\s*([0-9]+)%,\s*([0-9]+)%,?\s*([0-9.]+)?\)\s*$/i,HEX_REGEXP=/^\s*#?([0-9a-f]{3}|[0-9a-f]{6})\s*$/i,SHORTHEX_REGEXP=/^\s*#?([0-9a-f]{3})\s*$/i,ColorPicker={hex:function(r){return react.createElement(U,u({},r,{colorModel:W}))},rgb:function(r){return react.createElement(re,u({},r,{colorModel:Ee}))},hsl:function(r){return react.createElement(re,u({},r,{colorModel:le}))}},fallbackColor={hex:"transparent",rgb:"rgba(0, 0, 0, 0)",hsl:"hsla(0, 0%, 0%, 0)"},stringToArgs=value=>{let match=value?.match(COLOR_REGEXP);if(!match)return[0,0,0,1];let[,x,y,z,a=1]=match;return[x,y,z,a].map(Number)},parseValue=value=>{if(!value)return;let valid=!0;if(RGB_REGEXP.test(value)){let[r,g,b,a]=stringToArgs(value),[h,s,l]=color_convert_default().rgb.hsl([r,g,b])||[0,0,0];return{valid,value,keyword:color_convert_default().rgb.keyword([r,g,b]),colorSpace:"rgb",rgb:value,hsl:`hsla(${h}, ${s}%, ${l}%, ${a})`,hex:`#${color_convert_default().rgb.hex([r,g,b]).toLowerCase()}`}}if(HSL_REGEXP.test(value)){let[h,s,l,a]=stringToArgs(value),[r,g,b]=color_convert_default().hsl.rgb([h,s,l])||[0,0,0];return{valid,value,keyword:color_convert_default().hsl.keyword([h,s,l]),colorSpace:"hsl",rgb:`rgba(${r}, ${g}, ${b}, ${a})`,hsl:value,hex:`#${color_convert_default().hsl.hex([h,s,l]).toLowerCase()}`}}let plain=value.replace("#",""),rgb=color_convert_default().keyword.rgb(plain)||color_convert_default().hex.rgb(plain),hsl=color_convert_default().rgb.hsl(rgb),mapped=value;if(/[^#a-f0-9]/i.test(value)?mapped=plain:HEX_REGEXP.test(value)&&(mapped=`#${plain}`),mapped.startsWith("#"))valid=HEX_REGEXP.test(mapped);else try{color_convert_default().keyword.hex(mapped)}catch{valid=!1}return{valid,value:mapped,keyword:color_convert_default().rgb.keyword(rgb),colorSpace:"hex",rgb:`rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 1)`,hsl:`hsla(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%, 1)`,hex:mapped}},useColorInput=(initialValue,onChange)=>{let[value,setValue]=(0,react.useState)(initialValue||""),[color,setColor]=(0,react.useState)((()=>parseValue(value))),[colorSpace,setColorSpace]=(0,react.useState)(color?.colorSpace||"hex");(0,react.useEffect)((()=>{let nextValue=initialValue||"",nextColor=parseValue(nextValue);setValue(nextValue),setColor(nextColor),setColorSpace(nextColor?.colorSpace||"hex")}),[initialValue]);let realValue=(0,react.useMemo)((()=>((value,color,colorSpace)=>{if(!value||!color?.valid)return fallbackColor[colorSpace];if("hex"!==colorSpace)return color?.[colorSpace]||fallbackColor[colorSpace];if(!color.hex.startsWith("#"))try{return`#${color_convert_default().keyword.hex(color.hex)}`}catch{return fallbackColor.hex}let short=color.hex.match(SHORTHEX_REGEXP);if(!short)return HEX_REGEXP.test(color.hex)?color.hex:fallbackColor.hex;let[r,g,b]=short[1].split("");return`#${r}${r}${g}${g}${b}${b}`})(value,color,colorSpace).toLowerCase()),[value,color,colorSpace]),updateValue=(0,react.useCallback)((update=>{let parsed=parseValue(update),v=parsed?.value||update||"";setValue(v),""===v&&(setColor(void 0),onChange(void 0)),parsed&&(setColor(parsed),setColorSpace(parsed.colorSpace),onChange(parsed.value))}),[onChange]),cycleColorSpace=(0,react.useCallback)((()=>{let next=COLOR_SPACES.indexOf(colorSpace)+1;next>=COLOR_SPACES.length&&(next=0),setColorSpace(COLOR_SPACES[next]);let update=color?.[COLOR_SPACES[next]]||"";setValue(update),onChange(update)}),[color,colorSpace,onChange]);return{value,realValue,updateValue,color,colorSpace,cycleColorSpace}},id=value=>value.replace(/\s*/,"").toLowerCase(),ColorControl=({name,value:initialValue,onChange,onFocus,onBlur,presetColors,startOpen=!1})=>{let throttledOnChange=(0,react.useCallback)(throttle_default()(onChange,200),[onChange]),{value,realValue,updateValue,color,colorSpace,cycleColorSpace}=useColorInput(initialValue,throttledOnChange),{presets,addPreset}=((presetColors,currentColor,colorSpace)=>{let[selectedColors,setSelectedColors]=(0,react.useState)(currentColor?.valid?[currentColor]:[]);(0,react.useEffect)((()=>{void 0===currentColor&&setSelectedColors([])}),[currentColor]);let presets=(0,react.useMemo)((()=>(presetColors||[]).map((preset=>"string"==typeof preset?parseValue(preset):preset.title?{...parseValue(preset.color),keyword:preset.title}:parseValue(preset.color))).concat(selectedColors).filter(Boolean).slice(-27)),[presetColors,selectedColors]),addPreset=(0,react.useCallback)((color=>{color?.valid&&(presets.some((preset=>id(preset[colorSpace])===id(color[colorSpace])))||setSelectedColors((arr=>arr.concat(color))))}),[colorSpace,presets]);return{presets,addPreset}})(presetColors,color,colorSpace),Picker=ColorPicker[colorSpace];return react.createElement(Wrapper,null,react.createElement(PickerTooltip,{startOpen,closeOnOutsideClick:!0,onVisibleChange:()=>addPreset(color),tooltip:react.createElement(TooltipContent,null,react.createElement(Picker,{color:"transparent"===realValue?"#000000":realValue,onChange:updateValue,onFocus,onBlur}),presets.length>0&&react.createElement(Swatches,null,presets.map(((preset,index)=>react.createElement(components_dist.Rl,{key:`${preset.value}-${index}`,hasChrome:!1,tooltip:react.createElement(Note,{note:preset.keyword||preset.value})},react.createElement(Swatch,{value:preset[colorSpace],active:color&&id(preset[colorSpace])===id(color[colorSpace]),onClick:()=>updateValue(preset.value)}))))))},react.createElement(Swatch,{value:realValue,style:{margin:4}})),react.createElement(Input,{id:(0,chunk_GWAJ4KRU.d)(name),value,onChange:e=>updateValue(e.target.value),onFocus:e=>e.target.select(),placeholder:"Choose color..."}),value?react.createElement(ToggleIcon,{icon:"markup",onClick:cycleColorSpace}):null)},Color_default=ColorControl},"../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js":(module,__unused_webpack_exports,__webpack_require__)=>{const cssKeywords=__webpack_require__("../node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js"),reverseKeywords={};for(const key of Object.keys(cssKeywords))reverseKeywords[cssKeywords[key]]=key;const convert={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};module.exports=convert;for(const model of Object.keys(convert)){if(!("channels"in convert[model]))throw new Error("missing channels property: "+model);if(!("labels"in convert[model]))throw new Error("missing channel labels property: "+model);if(convert[model].labels.length!==convert[model].channels)throw new Error("channel and label counts mismatch: "+model);const{channels,labels}=convert[model];delete convert[model].channels,delete convert[model].labels,Object.defineProperty(convert[model],"channels",{value:channels}),Object.defineProperty(convert[model],"labels",{value:labels})}convert.rgb.hsl=function(rgb){const r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,min=Math.min(r,g,b),max=Math.max(r,g,b),delta=max-min;let h,s;max===min?h=0:r===max?h=(g-b)/delta:g===max?h=2+(b-r)/delta:b===max&&(h=4+(r-g)/delta),h=Math.min(60*h,360),h<0&&(h+=360);const l=(min+max)/2;return s=max===min?0:l<=.5?delta/(max+min):delta/(2-max-min),[h,100*s,100*l]},convert.rgb.hsv=function(rgb){let rdif,gdif,bdif,h,s;const r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,v=Math.max(r,g,b),diff=v-Math.min(r,g,b),diffc=function(c){return(v-c)/6/diff+.5};return 0===diff?(h=0,s=0):(s=diff/v,rdif=diffc(r),gdif=diffc(g),bdif=diffc(b),r===v?h=bdif-gdif:g===v?h=1/3+rdif-bdif:b===v&&(h=2/3+gdif-rdif),h<0?h+=1:h>1&&(h-=1)),[360*h,100*s,100*v]},convert.rgb.hwb=function(rgb){const r=rgb[0],g=rgb[1];let b=rgb[2];const h=convert.rgb.hsl(rgb)[0],w=1/255*Math.min(r,Math.min(g,b));return b=1-1/255*Math.max(r,Math.max(g,b)),[h,100*w,100*b]},convert.rgb.cmyk=function(rgb){const r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,k=Math.min(1-r,1-g,1-b);return[100*((1-r-k)/(1-k)||0),100*((1-g-k)/(1-k)||0),100*((1-b-k)/(1-k)||0),100*k]},convert.rgb.keyword=function(rgb){const reversed=reverseKeywords[rgb];if(reversed)return reversed;let currentClosestKeyword,currentClosestDistance=1/0;for(const keyword of Object.keys(cssKeywords)){const value=cssKeywords[keyword],distance=(y=value,((x=rgb)[0]-y[0])**2+(x[1]-y[1])**2+(x[2]-y[2])**2);distance<currentClosestDistance&&(currentClosestDistance=distance,currentClosestKeyword=keyword)}var x,y;return currentClosestKeyword},convert.keyword.rgb=function(keyword){return cssKeywords[keyword]},convert.rgb.xyz=function(rgb){let r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255;r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,g=g>.04045?((g+.055)/1.055)**2.4:g/12.92,b=b>.04045?((b+.055)/1.055)**2.4:b/12.92;return[100*(.4124*r+.3576*g+.1805*b),100*(.2126*r+.7152*g+.0722*b),100*(.0193*r+.1192*g+.9505*b)]},convert.rgb.lab=function(rgb){const xyz=convert.rgb.xyz(rgb);let x=xyz[0],y=xyz[1],z=xyz[2];x/=95.047,y/=100,z/=108.883,x=x>.008856?x**(1/3):7.787*x+16/116,y=y>.008856?y**(1/3):7.787*y+16/116,z=z>.008856?z**(1/3):7.787*z+16/116;return[116*y-16,500*(x-y),200*(y-z)]},convert.hsl.rgb=function(hsl){const h=hsl[0]/360,s=hsl[1]/100,l=hsl[2]/100;let t2,t3,val;if(0===s)return val=255*l,[val,val,val];t2=l<.5?l*(1+s):l+s-l*s;const t1=2*l-t2,rgb=[0,0,0];for(let i=0;i<3;i++)t3=h+1/3*-(i-1),t3<0&&t3++,t3>1&&t3--,val=6*t3<1?t1+6*(t2-t1)*t3:2*t3<1?t2:3*t3<2?t1+(t2-t1)*(2/3-t3)*6:t1,rgb[i]=255*val;return rgb},convert.hsl.hsv=function(hsl){const h=hsl[0];let s=hsl[1]/100,l=hsl[2]/100,smin=s;const lmin=Math.max(l,.01);l*=2,s*=l<=1?l:2-l,smin*=lmin<=1?lmin:2-lmin;return[h,100*(0===l?2*smin/(lmin+smin):2*s/(l+s)),100*((l+s)/2)]},convert.hsv.rgb=function(hsv){const h=hsv[0]/60,s=hsv[1]/100;let v=hsv[2]/100;const hi=Math.floor(h)%6,f=h-Math.floor(h),p=255*v*(1-s),q=255*v*(1-s*f),t=255*v*(1-s*(1-f));switch(v*=255,hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q]}},convert.hsv.hsl=function(hsv){const h=hsv[0],s=hsv[1]/100,v=hsv[2]/100,vmin=Math.max(v,.01);let sl,l;l=(2-s)*v;const lmin=(2-s)*vmin;return sl=s*vmin,sl/=lmin<=1?lmin:2-lmin,sl=sl||0,l/=2,[h,100*sl,100*l]},convert.hwb.rgb=function(hwb){const h=hwb[0]/360;let wh=hwb[1]/100,bl=hwb[2]/100;const ratio=wh+bl;let f;ratio>1&&(wh/=ratio,bl/=ratio);const i=Math.floor(6*h),v=1-bl;f=6*h-i,0!=(1&i)&&(f=1-f);const n=wh+f*(v-wh);let r,g,b;switch(i){default:case 6:case 0:r=v,g=n,b=wh;break;case 1:r=n,g=v,b=wh;break;case 2:r=wh,g=v,b=n;break;case 3:r=wh,g=n,b=v;break;case 4:r=n,g=wh,b=v;break;case 5:r=v,g=wh,b=n}return[255*r,255*g,255*b]},convert.cmyk.rgb=function(cmyk){const c=cmyk[0]/100,m=cmyk[1]/100,y=cmyk[2]/100,k=cmyk[3]/100;return[255*(1-Math.min(1,c*(1-k)+k)),255*(1-Math.min(1,m*(1-k)+k)),255*(1-Math.min(1,y*(1-k)+k))]},convert.xyz.rgb=function(xyz){const x=xyz[0]/100,y=xyz[1]/100,z=xyz[2]/100;let r,g,b;return r=3.2406*x+-1.5372*y+-.4986*z,g=-.9689*x+1.8758*y+.0415*z,b=.0557*x+-.204*y+1.057*z,r=r>.0031308?1.055*r**(1/2.4)-.055:12.92*r,g=g>.0031308?1.055*g**(1/2.4)-.055:12.92*g,b=b>.0031308?1.055*b**(1/2.4)-.055:12.92*b,r=Math.min(Math.max(0,r),1),g=Math.min(Math.max(0,g),1),b=Math.min(Math.max(0,b),1),[255*r,255*g,255*b]},convert.xyz.lab=function(xyz){let x=xyz[0],y=xyz[1],z=xyz[2];x/=95.047,y/=100,z/=108.883,x=x>.008856?x**(1/3):7.787*x+16/116,y=y>.008856?y**(1/3):7.787*y+16/116,z=z>.008856?z**(1/3):7.787*z+16/116;return[116*y-16,500*(x-y),200*(y-z)]},convert.lab.xyz=function(lab){let x,y,z;y=(lab[0]+16)/116,x=lab[1]/500+y,z=y-lab[2]/200;const y2=y**3,x2=x**3,z2=z**3;return y=y2>.008856?y2:(y-16/116)/7.787,x=x2>.008856?x2:(x-16/116)/7.787,z=z2>.008856?z2:(z-16/116)/7.787,x*=95.047,y*=100,z*=108.883,[x,y,z]},convert.lab.lch=function(lab){const l=lab[0],a=lab[1],b=lab[2];let h;h=360*Math.atan2(b,a)/2/Math.PI,h<0&&(h+=360);return[l,Math.sqrt(a*a+b*b),h]},convert.lch.lab=function(lch){const l=lch[0],c=lch[1],hr=lch[2]/360*2*Math.PI;return[l,c*Math.cos(hr),c*Math.sin(hr)]},convert.rgb.ansi16=function(args,saturation=null){const[r,g,b]=args;let value=null===saturation?convert.rgb.hsv(args)[2]:saturation;if(value=Math.round(value/50),0===value)return 30;let ansi=30+(Math.round(b/255)<<2|Math.round(g/255)<<1|Math.round(r/255));return 2===value&&(ansi+=60),ansi},convert.hsv.ansi16=function(args){return convert.rgb.ansi16(convert.hsv.rgb(args),args[2])},convert.rgb.ansi256=function(args){const r=args[0],g=args[1],b=args[2];if(r===g&&g===b)return r<8?16:r>248?231:Math.round((r-8)/247*24)+232;return 16+36*Math.round(r/255*5)+6*Math.round(g/255*5)+Math.round(b/255*5)},convert.ansi16.rgb=function(args){let color=args%10;if(0===color||7===color)return args>50&&(color+=3.5),color=color/10.5*255,[color,color,color];const mult=.5*(1+~~(args>50));return[(1&color)*mult*255,(color>>1&1)*mult*255,(color>>2&1)*mult*255]},convert.ansi256.rgb=function(args){if(args>=232){const c=10*(args-232)+8;return[c,c,c]}let rem;args-=16;return[Math.floor(args/36)/5*255,Math.floor((rem=args%36)/6)/5*255,rem%6/5*255]},convert.rgb.hex=function(args){const string=(((255&Math.round(args[0]))<<16)+((255&Math.round(args[1]))<<8)+(255&Math.round(args[2]))).toString(16).toUpperCase();return"000000".substring(string.length)+string},convert.hex.rgb=function(args){const match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match)return[0,0,0];let colorString=match[0];3===match[0].length&&(colorString=colorString.split("").map((char=>char+char)).join(""));const integer=parseInt(colorString,16);return[integer>>16&255,integer>>8&255,255&integer]},convert.rgb.hcg=function(rgb){const r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,max=Math.max(Math.max(r,g),b),min=Math.min(Math.min(r,g),b),chroma=max-min;let grayscale,hue;return grayscale=chroma<1?min/(1-chroma):0,hue=chroma<=0?0:max===r?(g-b)/chroma%6:max===g?2+(b-r)/chroma:4+(r-g)/chroma,hue/=6,hue%=1,[360*hue,100*chroma,100*grayscale]},convert.hsl.hcg=function(hsl){const s=hsl[1]/100,l=hsl[2]/100,c=l<.5?2*s*l:2*s*(1-l);let f=0;return c<1&&(f=(l-.5*c)/(1-c)),[hsl[0],100*c,100*f]},convert.hsv.hcg=function(hsv){const s=hsv[1]/100,v=hsv[2]/100,c=s*v;let f=0;return c<1&&(f=(v-c)/(1-c)),[hsv[0],100*c,100*f]},convert.hcg.rgb=function(hcg){const h=hcg[0]/360,c=hcg[1]/100,g=hcg[2]/100;if(0===c)return[255*g,255*g,255*g];const pure=[0,0,0],hi=h%1*6,v=hi%1,w=1-v;let mg=0;switch(Math.floor(hi)){case 0:pure[0]=1,pure[1]=v,pure[2]=0;break;case 1:pure[0]=w,pure[1]=1,pure[2]=0;break;case 2:pure[0]=0,pure[1]=1,pure[2]=v;break;case 3:pure[0]=0,pure[1]=w,pure[2]=1;break;case 4:pure[0]=v,pure[1]=0,pure[2]=1;break;default:pure[0]=1,pure[1]=0,pure[2]=w}return mg=(1-c)*g,[255*(c*pure[0]+mg),255*(c*pure[1]+mg),255*(c*pure[2]+mg)]},convert.hcg.hsv=function(hcg){const c=hcg[1]/100,v=c+hcg[2]/100*(1-c);let f=0;return v>0&&(f=c/v),[hcg[0],100*f,100*v]},convert.hcg.hsl=function(hcg){const c=hcg[1]/100,l=hcg[2]/100*(1-c)+.5*c;let s=0;return l>0&&l<.5?s=c/(2*l):l>=.5&&l<1&&(s=c/(2*(1-l))),[hcg[0],100*s,100*l]},convert.hcg.hwb=function(hcg){const c=hcg[1]/100,v=c+hcg[2]/100*(1-c);return[hcg[0],100*(v-c),100*(1-v)]},convert.hwb.hcg=function(hwb){const w=hwb[1]/100,v=1-hwb[2]/100,c=v-w;let g=0;return c<1&&(g=(v-c)/(1-c)),[hwb[0],100*c,100*g]},convert.apple.rgb=function(apple){return[apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255]},convert.rgb.apple=function(rgb){return[rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535]},convert.gray.rgb=function(args){return[args[0]/100*255,args[0]/100*255,args[0]/100*255]},convert.gray.hsl=function(args){return[0,0,args[0]]},convert.gray.hsv=convert.gray.hsl,convert.gray.hwb=function(gray){return[0,100,gray[0]]},convert.gray.cmyk=function(gray){return[0,0,0,gray[0]]},convert.gray.lab=function(gray){return[gray[0],0,0]},convert.gray.hex=function(gray){const val=255&Math.round(gray[0]/100*255),string=((val<<16)+(val<<8)+val).toString(16).toUpperCase();return"000000".substring(string.length)+string},convert.rgb.gray=function(rgb){return[(rgb[0]+rgb[1]+rgb[2])/3/255*100]}},"../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{const conversions=__webpack_require__("../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js"),route=__webpack_require__("../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js"),convert={};Object.keys(conversions).forEach((fromModel=>{convert[fromModel]={},Object.defineProperty(convert[fromModel],"channels",{value:conversions[fromModel].channels}),Object.defineProperty(convert[fromModel],"labels",{value:conversions[fromModel].labels});const routes=route(fromModel);Object.keys(routes).forEach((toModel=>{const fn=routes[toModel];convert[fromModel][toModel]=function wrapRounded(fn){const wrappedFn=function(...args){const arg0=args[0];if(null==arg0)return arg0;arg0.length>1&&(args=arg0);const result=fn(args);if("object"==typeof result)for(let len=result.length,i=0;i<len;i++)result[i]=Math.round(result[i]);return result};return"conversion"in fn&&(wrappedFn.conversion=fn.conversion),wrappedFn}(fn),convert[fromModel][toModel].raw=function wrapRaw(fn){const wrappedFn=function(...args){const arg0=args[0];return null==arg0?arg0:(arg0.length>1&&(args=arg0),fn(args))};return"conversion"in fn&&(wrappedFn.conversion=fn.conversion),wrappedFn}(fn)}))})),module.exports=convert},"../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js":(module,__unused_webpack_exports,__webpack_require__)=>{const conversions=__webpack_require__("../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js");function deriveBFS(fromModel){const graph=function buildGraph(){const graph={},models=Object.keys(conversions);for(let len=models.length,i=0;i<len;i++)graph[models[i]]={distance:-1,parent:null};return graph}(),queue=[fromModel];for(graph[fromModel].distance=0;queue.length;){const current=queue.pop(),adjacents=Object.keys(conversions[current]);for(let len=adjacents.length,i=0;i<len;i++){const adjacent=adjacents[i],node=graph[adjacent];-1===node.distance&&(node.distance=graph[current].distance+1,node.parent=current,queue.unshift(adjacent))}}return graph}function link(from,to){return function(args){return to(from(args))}}function wrapConversion(toModel,graph){const path=[graph[toModel].parent,toModel];let fn=conversions[graph[toModel].parent][toModel],cur=graph[toModel].parent;for(;graph[cur].parent;)path.unshift(graph[cur].parent),fn=link(conversions[graph[cur].parent][cur],fn),cur=graph[cur].parent;return fn.conversion=path,fn}module.exports=function(fromModel){const graph=deriveBFS(fromModel),conversion={},models=Object.keys(graph);for(let len=models.length,i=0;i<len;i++){const toModel=models[i];null!==graph[toModel].parent&&(conversion[toModel]=wrapConversion(toModel,graph))}return conversion}},"../node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js":module=>{"use strict";module.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},"../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseTrim.js":(module,__unused_webpack_exports,__webpack_require__)=>{var trimmedEndIndex=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_trimmedEndIndex.js"),reTrimStart=/^\s+/;module.exports=function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,""):string}},"../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_trimmedEndIndex.js":module=>{var reWhitespace=/\s/;module.exports=function trimmedEndIndex(string){for(var index=string.length;index--&&reWhitespace.test(string.charAt(index)););return index}},"../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/debounce.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isObject=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js"),now=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/now.js"),toNumber=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toNumber.js"),nativeMax=Math.max,nativeMin=Math.min;module.exports=function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=!1,maxing=!1,trailing=!0;if("function"!=typeof func)throw new TypeError("Expected a function");function invokeFunc(time){var args=lastArgs,thisArg=lastThis;return lastArgs=lastThis=void 0,lastInvokeTime=time,result=func.apply(thisArg,args)}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime;return void 0===lastCallTime||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&time-lastInvokeTime>=maxWait}function timerExpired(){var time=now();if(shouldInvoke(time))return trailingEdge(time);timerId=setTimeout(timerExpired,function remainingWait(time){var timeWaiting=wait-(time-lastCallTime);return maxing?nativeMin(timeWaiting,maxWait-(time-lastInvokeTime)):timeWaiting}(time))}function trailingEdge(time){return timerId=void 0,trailing&&lastArgs?invokeFunc(time):(lastArgs=lastThis=void 0,result)}function debounced(){var time=now(),isInvoking=shouldInvoke(time);if(lastArgs=arguments,lastThis=this,lastCallTime=time,isInvoking){if(void 0===timerId)return function leadingEdge(time){return lastInvokeTime=time,timerId=setTimeout(timerExpired,wait),leading?invokeFunc(time):result}(lastCallTime);if(maxing)return clearTimeout(timerId),timerId=setTimeout(timerExpired,wait),invokeFunc(lastCallTime)}return void 0===timerId&&(timerId=setTimeout(timerExpired,wait)),result}return wait=toNumber(wait)||0,isObject(options)&&(leading=!!options.leading,maxWait=(maxing="maxWait"in options)?nativeMax(toNumber(options.maxWait)||0,wait):maxWait,trailing="trailing"in options?!!options.trailing:trailing),debounced.cancel=function cancel(){void 0!==timerId&&clearTimeout(timerId),lastInvokeTime=0,lastArgs=lastCallTime=lastThis=timerId=void 0},debounced.flush=function flush(){return void 0===timerId?result:trailingEdge(now())},debounced}},"../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/now.js":(module,__unused_webpack_exports,__webpack_require__)=>{var root=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js");module.exports=function(){return root.Date.now()}},"../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/throttle.js":(module,__unused_webpack_exports,__webpack_require__)=>{var debounce=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/debounce.js"),isObject=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js");module.exports=function throttle(func,wait,options){var leading=!0,trailing=!0;if("function"!=typeof func)throw new TypeError("Expected a function");return isObject(options)&&(leading="leading"in options?!!options.leading:leading,trailing="trailing"in options?!!options.trailing:trailing),debounce(func,wait,{leading,maxWait:wait,trailing})}},"../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toNumber.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseTrim=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseTrim.js"),isObject=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js"),isSymbol=__webpack_require__("../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isSymbol.js"),reIsBadHex=/^[-+]0x[0-9a-f]+$/i,reIsBinary=/^0b[01]+$/i,reIsOctal=/^0o[0-7]+$/i,freeParseInt=parseInt;module.exports=function toNumber(value){if("number"==typeof value)return value;if(isSymbol(value))return NaN;if(isObject(value)){var other="function"==typeof value.valueOf?value.valueOf():value;value=isObject(other)?other+"":other}if("string"!=typeof value)return 0===value?value:+value;value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NaN:+value}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WS9PLE1BQ25FQSxNQUFRa00sU0FBUzRDLE9BQVVBLE1BQVEsR0FBTUEsS0FDM0MsQ0FDQSxHQUFvQixpQkFBVDlPLE1BQ1QsT0FBaUIsSUFBVkEsTUFBY0EsT0FBU0EsTUFFaENBLE1BQVErTCxTQUFTL0wsT0FDakIsSUFBSWdQLFNBQVdMLFdBQVc5TSxLQUFLN0IsT0FDL0IsT0FBUWdQLFVBQVlKLFVBQVUvTSxLQUFLN0IsT0FDL0I2TyxhQUFhN08sTUFBTXlFLE1BQU0sR0FBSXVLLFNBQVcsRUFBSSxHQUMzQ04sV0FBVzdNLEtBQUs3QixPQXZEYixLQXVENkJBLEtBQ3ZDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AcHJvamVjdHN0b3JtL3JlYWN0LXdvcmtzcGFjZXMtZGVtb3MvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlYWN0LWNvbG9yZnVsQDUuNi4xX3JlYWN0LWRvbUAxOC4yLjBfcmVhY3RAMTguMi4wL25vZGVfbW9kdWxlcy9yZWFjdC1jb2xvcmZ1bC9kaXN0L2luZGV4Lm1qcyIsIndlYnBhY2s6Ly9AcHJvamVjdHN0b3JtL3JlYWN0LXdvcmtzcGFjZXMtZGVtb3MvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYmxvY2tzQDcuMC4yNl9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9ibG9ja3MvZGlzdC9Db2xvci0zWUlKWTZYNy5tanMiLCJ3ZWJwYWNrOi8vQHByb2plY3RzdG9ybS9yZWFjdC13b3Jrc3BhY2VzLWRlbW9zLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9jb2xvci1jb252ZXJ0QDIuMC4xL25vZGVfbW9kdWxlcy9jb2xvci1jb252ZXJ0L2NvbnZlcnNpb25zLmpzIiwid2VicGFjazovL0Bwcm9qZWN0c3Rvcm0vcmVhY3Qtd29ya3NwYWNlcy1kZW1vcy8uLi9ub2RlX21vZHVsZXMvLnBucG0vY29sb3ItY29udmVydEAyLjAuMS9ub2RlX21vZHVsZXMvY29sb3ItY29udmVydC9pbmRleC5qcyIsIndlYnBhY2s6Ly9AcHJvamVjdHN0b3JtL3JlYWN0LXdvcmtzcGFjZXMtZGVtb3MvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL2NvbG9yLWNvbnZlcnRAMi4wLjEvbm9kZV9tb2R1bGVzL2NvbG9yLWNvbnZlcnQvcm91dGUuanMiLCJ3ZWJwYWNrOi8vQHByb2plY3RzdG9ybS9yZWFjdC13b3Jrc3BhY2VzLWRlbW9zLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9jb2xvci1uYW1lQDEuMS40L25vZGVfbW9kdWxlcy9jb2xvci1uYW1lL2luZGV4LmpzIiwid2VicGFjazovL0Bwcm9qZWN0c3Rvcm0vcmVhY3Qtd29ya3NwYWNlcy1kZW1vcy8uLi9ub2RlX21vZHVsZXMvLnBucG0vbG9kYXNoQDQuMTcuMjEvbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVRyaW0uanMiLCJ3ZWJwYWNrOi8vQHByb2plY3RzdG9ybS9yZWFjdC13b3Jrc3BhY2VzLWRlbW9zLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9sb2Rhc2hANC4xNy4yMS9ub2RlX21vZHVsZXMvbG9kYXNoL190cmltbWVkRW5kSW5kZXguanMiLCJ3ZWJwYWNrOi8vQHByb2plY3RzdG9ybS9yZWFjdC13b3Jrc3BhY2VzLWRlbW9zLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9sb2Rhc2hANC4xNy4yMS9ub2RlX21vZHVsZXMvbG9kYXNoL2RlYm91bmNlLmpzIiwid2VicGFjazovL0Bwcm9qZWN0c3Rvcm0vcmVhY3Qtd29ya3NwYWNlcy1kZW1vcy8uLi9ub2RlX21vZHVsZXMvLnBucG0vbG9kYXNoQDQuMTcuMjEvbm9kZV9tb2R1bGVzL2xvZGFzaC9ub3cuanMiLCJ3ZWJwYWNrOi8vQHByb2plY3RzdG9ybS9yZWFjdC13b3Jrc3BhY2VzLWRlbW9zLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9sb2Rhc2hANC4xNy4yMS9ub2RlX21vZHVsZXMvbG9kYXNoL3Rocm90dGxlLmpzIiwid2VicGFjazovL0Bwcm9qZWN0c3Rvcm0vcmVhY3Qtd29ya3NwYWNlcy1kZW1vcy8uLi9ub2RlX21vZHVsZXMvLnBucG0vbG9kYXNoQDQuMTcuMjEvbm9kZV9tb2R1bGVzL2xvZGFzaC90b051bWJlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZSx7dXNlUmVmIGFzIHIsdXNlTWVtbyBhcyB0LHVzZUVmZmVjdCBhcyBuLHVzZVN0YXRlIGFzIG8sdXNlQ2FsbGJhY2sgYXMgYSx1c2VMYXlvdXRFZmZlY3QgYXMgbH1mcm9tXCJyZWFjdFwiO2Z1bmN0aW9uIHUoKXtyZXR1cm4odT1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt2YXIgdD1hcmd1bWVudHNbcl07Zm9yKHZhciBuIGluIHQpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbikmJihlW25dPXRbbl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIGMoZSxyKXtpZihudWxsPT1lKXJldHVybnt9O3ZhciB0LG4sbz17fSxhPU9iamVjdC5rZXlzKGUpO2ZvcihuPTA7bjxhLmxlbmd0aDtuKyspci5pbmRleE9mKHQ9YVtuXSk+PTB8fChvW3RdPWVbdF0pO3JldHVybiBvfWZ1bmN0aW9uIGkoZSl7dmFyIHQ9cihlKSxuPXIoZnVuY3Rpb24oZSl7dC5jdXJyZW50JiZ0LmN1cnJlbnQoZSl9KTtyZXR1cm4gdC5jdXJyZW50PWUsbi5jdXJyZW50fXZhciBzPWZ1bmN0aW9uKGUscix0KXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9MCksdm9pZCAwPT09dCYmKHQ9MSksZT50P3Q6ZTxyP3I6ZX0sZj1mdW5jdGlvbihlKXtyZXR1cm5cInRvdWNoZXNcImluIGV9LHY9ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8c2VsZn0sZD1mdW5jdGlvbihlLHIsdCl7dmFyIG49ZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxvPWYocik/ZnVuY3Rpb24oZSxyKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKylpZihlW3RdLmlkZW50aWZpZXI9PT1yKXJldHVybiBlW3RdO3JldHVybiBlWzBdfShyLnRvdWNoZXMsdCk6cjtyZXR1cm57bGVmdDpzKChvLnBhZ2VYLShuLmxlZnQrdihlKS5wYWdlWE9mZnNldCkpL24ud2lkdGgpLHRvcDpzKChvLnBhZ2VZLShuLnRvcCt2KGUpLnBhZ2VZT2Zmc2V0KSkvbi5oZWlnaHQpfX0saD1mdW5jdGlvbihlKXshZihlKSYmZS5wcmV2ZW50RGVmYXVsdCgpfSxtPWUubWVtbyhmdW5jdGlvbihvKXt2YXIgYT1vLm9uTW92ZSxsPW8ub25LZXkscz1jKG8sW1wib25Nb3ZlXCIsXCJvbktleVwiXSksbT1yKG51bGwpLGc9aShhKSxwPWkobCksYj1yKG51bGwpLF89cighMSkseD10KGZ1bmN0aW9uKCl7dmFyIGU9ZnVuY3Rpb24oZSl7aChlKSwoZihlKT9lLnRvdWNoZXMubGVuZ3RoPjA6ZS5idXR0b25zPjApJiZtLmN1cnJlbnQ/ZyhkKG0uY3VycmVudCxlLGIuY3VycmVudCkpOnQoITEpfSxyPWZ1bmN0aW9uKCl7cmV0dXJuIHQoITEpfTtmdW5jdGlvbiB0KHQpe3ZhciBuPV8uY3VycmVudCxvPXYobS5jdXJyZW50KSxhPXQ/by5hZGRFdmVudExpc3RlbmVyOm8ucmVtb3ZlRXZlbnRMaXN0ZW5lcjthKG4/XCJ0b3VjaG1vdmVcIjpcIm1vdXNlbW92ZVwiLGUpLGEobj9cInRvdWNoZW5kXCI6XCJtb3VzZXVwXCIscil9cmV0dXJuW2Z1bmN0aW9uKGUpe3ZhciByPWUubmF0aXZlRXZlbnQsbj1tLmN1cnJlbnQ7aWYobiYmKGgociksIWZ1bmN0aW9uKGUscil7cmV0dXJuIHImJiFmKGUpfShyLF8uY3VycmVudCkmJm4pKXtpZihmKHIpKXtfLmN1cnJlbnQ9ITA7dmFyIG89ci5jaGFuZ2VkVG91Y2hlc3x8W107by5sZW5ndGgmJihiLmN1cnJlbnQ9b1swXS5pZGVudGlmaWVyKX1uLmZvY3VzKCksZyhkKG4scixiLmN1cnJlbnQpKSx0KCEwKX19LGZ1bmN0aW9uKGUpe3ZhciByPWUud2hpY2h8fGUua2V5Q29kZTtyPDM3fHxyPjQwfHwoZS5wcmV2ZW50RGVmYXVsdCgpLHAoe2xlZnQ6Mzk9PT1yPy4wNTozNz09PXI/LS4wNTowLHRvcDo0MD09PXI/LjA1OjM4PT09cj8tLjA1OjB9KSl9LHRdfSxbcCxnXSksQz14WzBdLEU9eFsxXSxIPXhbMl07cmV0dXJuIG4oZnVuY3Rpb24oKXtyZXR1cm4gSH0sW0hdKSxlLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix1KHt9LHMse29uVG91Y2hTdGFydDpDLG9uTW91c2VEb3duOkMsY2xhc3NOYW1lOlwicmVhY3QtY29sb3JmdWxfX2ludGVyYWN0aXZlXCIscmVmOm0sb25LZXlEb3duOkUsdGFiSW5kZXg6MCxyb2xlOlwic2xpZGVyXCJ9KSl9KSxnPWZ1bmN0aW9uKGUpe3JldHVybiBlLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKX0scD1mdW5jdGlvbihyKXt2YXIgdD1yLmNvbG9yLG49ci5sZWZ0LG89ci50b3AsYT12b2lkIDA9PT1vPy41Om8sbD1nKFtcInJlYWN0LWNvbG9yZnVsX19wb2ludGVyXCIsci5jbGFzc05hbWVdKTtyZXR1cm4gZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpsLHN0eWxlOnt0b3A6MTAwKmErXCIlXCIsbGVmdDoxMDAqbitcIiVcIn19LGUuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJyZWFjdC1jb2xvcmZ1bF9fcG9pbnRlci1maWxsXCIsc3R5bGU6e2JhY2tncm91bmRDb2xvcjp0fX0pKX0sYj1mdW5jdGlvbihlLHIsdCl7cmV0dXJuIHZvaWQgMD09PXImJihyPTApLHZvaWQgMD09PXQmJih0PU1hdGgucG93KDEwLHIpKSxNYXRoLnJvdW5kKHQqZSkvdH0sXz17Z3JhZDouOSx0dXJuOjM2MCxyYWQ6MzYwLygyKk1hdGguUEkpfSx4PWZ1bmN0aW9uKGUpe3JldHVybiBMKEMoZSkpfSxDPWZ1bmN0aW9uKGUpe3JldHVyblwiI1wiPT09ZVswXSYmKGU9ZS5zdWJzdHJpbmcoMSkpLGUubGVuZ3RoPDY/e3I6cGFyc2VJbnQoZVswXStlWzBdLDE2KSxnOnBhcnNlSW50KGVbMV0rZVsxXSwxNiksYjpwYXJzZUludChlWzJdK2VbMl0sMTYpLGE6ND09PWUubGVuZ3RoP2IocGFyc2VJbnQoZVszXStlWzNdLDE2KS8yNTUsMik6MX06e3I6cGFyc2VJbnQoZS5zdWJzdHJpbmcoMCwyKSwxNiksZzpwYXJzZUludChlLnN1YnN0cmluZygyLDQpLDE2KSxiOnBhcnNlSW50KGUuc3Vic3RyaW5nKDQsNiksMTYpLGE6OD09PWUubGVuZ3RoP2IocGFyc2VJbnQoZS5zdWJzdHJpbmcoNiw4KSwxNikvMjU1LDIpOjF9fSxFPWZ1bmN0aW9uKGUscil7cmV0dXJuIHZvaWQgMD09PXImJihyPVwiZGVnXCIpLE51bWJlcihlKSooX1tyXXx8MSl9LEg9ZnVuY3Rpb24oZSl7dmFyIHI9L2hzbGE/XFwoP1xccyooLT9cXGQqXFwuP1xcZCspKGRlZ3xyYWR8Z3JhZHx0dXJuKT9bLFxcc10rKC0/XFxkKlxcLj9cXGQrKSU/WyxcXHNdKygtP1xcZCpcXC4/XFxkKyklPyw/XFxzKlsvXFxzXSooLT9cXGQqXFwuP1xcZCspPyglKT9cXHMqXFwpPy9pLmV4ZWMoZSk7cmV0dXJuIHI/Tih7aDpFKHJbMV0sclsyXSksczpOdW1iZXIoclszXSksbDpOdW1iZXIocls0XSksYTp2b2lkIDA9PT1yWzVdPzE6TnVtYmVyKHJbNV0pLyhyWzZdPzEwMDoxKX0pOntoOjAsczowLHY6MCxhOjF9fSxNPUgsTj1mdW5jdGlvbihlKXt2YXIgcj1lLnMsdD1lLmw7cmV0dXJue2g6ZS5oLHM6KHIqPSh0PDUwP3Q6MTAwLXQpLzEwMCk+MD8yKnIvKHQrcikqMTAwOjAsdjp0K3IsYTplLmF9fSx3PWZ1bmN0aW9uKGUpe3JldHVybiBLKEkoZSkpfSx5PWZ1bmN0aW9uKGUpe3ZhciByPWUucyx0PWUudixuPWUuYSxvPSgyMDAtcikqdC8xMDA7cmV0dXJue2g6YihlLmgpLHM6YihvPjAmJm88MjAwP3IqdC8xMDAvKG88PTEwMD9vOjIwMC1vKSoxMDA6MCksbDpiKG8vMiksYTpiKG4sMil9fSxxPWZ1bmN0aW9uKGUpe3ZhciByPXkoZSk7cmV0dXJuXCJoc2woXCIrci5oK1wiLCBcIityLnMrXCIlLCBcIityLmwrXCIlKVwifSxrPWZ1bmN0aW9uKGUpe3ZhciByPXkoZSk7cmV0dXJuXCJoc2xhKFwiK3IuaCtcIiwgXCIrci5zK1wiJSwgXCIrci5sK1wiJSwgXCIrci5hK1wiKVwifSxJPWZ1bmN0aW9uKGUpe3ZhciByPWUuaCx0PWUucyxuPWUudixvPWUuYTtyPXIvMzYwKjYsdC89MTAwLG4vPTEwMDt2YXIgYT1NYXRoLmZsb29yKHIpLGw9biooMS10KSx1PW4qKDEtKHItYSkqdCksYz1uKigxLSgxLXIrYSkqdCksaT1hJTY7cmV0dXJue3I6YigyNTUqW24sdSxsLGwsYyxuXVtpXSksZzpiKDI1NSpbYyxuLG4sdSxsLGxdW2ldKSxiOmIoMjU1KltsLGwsYyxuLG4sdV1baV0pLGE6YihvLDIpfX0sTz1mdW5jdGlvbihlKXt2YXIgcj0vaHN2YT9cXCg/XFxzKigtP1xcZCpcXC4/XFxkKykoZGVnfHJhZHxncmFkfHR1cm4pP1ssXFxzXSsoLT9cXGQqXFwuP1xcZCspJT9bLFxcc10rKC0/XFxkKlxcLj9cXGQrKSU/LD9cXHMqWy9cXHNdKigtP1xcZCpcXC4/XFxkKyk/KCUpP1xccypcXCk/L2kuZXhlYyhlKTtyZXR1cm4gcj9BKHtoOkUoclsxXSxyWzJdKSxzOk51bWJlcihyWzNdKSx2Ok51bWJlcihyWzRdKSxhOnZvaWQgMD09PXJbNV0/MTpOdW1iZXIocls1XSkvKHJbNl0/MTAwOjEpfSk6e2g6MCxzOjAsdjowLGE6MX19LGo9Tyx6PWZ1bmN0aW9uKGUpe3ZhciByPS9yZ2JhP1xcKD9cXHMqKC0/XFxkKlxcLj9cXGQrKSglKT9bLFxcc10rKC0/XFxkKlxcLj9cXGQrKSglKT9bLFxcc10rKC0/XFxkKlxcLj9cXGQrKSglKT8sP1xccypbL1xcc10qKC0/XFxkKlxcLj9cXGQrKT8oJSk/XFxzKlxcKT8vaS5leGVjKGUpO3JldHVybiByP0woe3I6TnVtYmVyKHJbMV0pLyhyWzJdPzEwMC8yNTU6MSksZzpOdW1iZXIoclszXSkvKHJbNF0/MTAwLzI1NToxKSxiOk51bWJlcihyWzVdKS8ocls2XT8xMDAvMjU1OjEpLGE6dm9pZCAwPT09cls3XT8xOk51bWJlcihyWzddKS8ocls4XT8xMDA6MSl9KTp7aDowLHM6MCx2OjAsYToxfX0sQj16LEQ9ZnVuY3Rpb24oZSl7dmFyIHI9ZS50b1N0cmluZygxNik7cmV0dXJuIHIubGVuZ3RoPDI/XCIwXCIrcjpyfSxLPWZ1bmN0aW9uKGUpe3ZhciByPWUucix0PWUuZyxuPWUuYixvPWUuYSxhPW88MT9EKGIoMjU1Km8pKTpcIlwiO3JldHVyblwiI1wiK0QocikrRCh0KStEKG4pK2F9LEw9ZnVuY3Rpb24oZSl7dmFyIHI9ZS5yLHQ9ZS5nLG49ZS5iLG89ZS5hLGE9TWF0aC5tYXgocix0LG4pLGw9YS1NYXRoLm1pbihyLHQsbiksdT1sP2E9PT1yPyh0LW4pL2w6YT09PXQ/Misobi1yKS9sOjQrKHItdCkvbDowO3JldHVybntoOmIoNjAqKHU8MD91KzY6dSkpLHM6YihhP2wvYSoxMDA6MCksdjpiKGEvMjU1KjEwMCksYTpvfX0sQT1mdW5jdGlvbihlKXtyZXR1cm57aDpiKGUuaCksczpiKGUucyksdjpiKGUudiksYTpiKGUuYSwyKX19LFM9ZS5tZW1vKGZ1bmN0aW9uKHIpe3ZhciB0PXIuaHVlLG49ci5vbkNoYW5nZSxvPWcoW1wicmVhY3QtY29sb3JmdWxfX2h1ZVwiLHIuY2xhc3NOYW1lXSk7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6b30sZS5jcmVhdGVFbGVtZW50KG0se29uTW92ZTpmdW5jdGlvbihlKXtuKHtoOjM2MCplLmxlZnR9KX0sb25LZXk6ZnVuY3Rpb24oZSl7bih7aDpzKHQrMzYwKmUubGVmdCwwLDM2MCl9KX0sXCJhcmlhLWxhYmVsXCI6XCJIdWVcIixcImFyaWEtdmFsdWVub3dcIjpiKHQpLFwiYXJpYS12YWx1ZW1heFwiOlwiMzYwXCIsXCJhcmlhLXZhbHVlbWluXCI6XCIwXCJ9LGUuY3JlYXRlRWxlbWVudChwLHtjbGFzc05hbWU6XCJyZWFjdC1jb2xvcmZ1bF9faHVlLXBvaW50ZXJcIixsZWZ0OnQvMzYwLGNvbG9yOnEoe2g6dCxzOjEwMCx2OjEwMCxhOjF9KX0pKSl9KSxUPWUubWVtbyhmdW5jdGlvbihyKXt2YXIgdD1yLmhzdmEsbj1yLm9uQ2hhbmdlLG89e2JhY2tncm91bmRDb2xvcjpxKHtoOnQuaCxzOjEwMCx2OjEwMCxhOjF9KX07cmV0dXJuIGUuY3JlYXRlRWxlbWVudChcImRpdlwiLHtjbGFzc05hbWU6XCJyZWFjdC1jb2xvcmZ1bF9fc2F0dXJhdGlvblwiLHN0eWxlOm99LGUuY3JlYXRlRWxlbWVudChtLHtvbk1vdmU6ZnVuY3Rpb24oZSl7bih7czoxMDAqZS5sZWZ0LHY6MTAwLTEwMCplLnRvcH0pfSxvbktleTpmdW5jdGlvbihlKXtuKHtzOnModC5zKzEwMCplLmxlZnQsMCwxMDApLHY6cyh0LnYtMTAwKmUudG9wLDAsMTAwKX0pfSxcImFyaWEtbGFiZWxcIjpcIkNvbG9yXCIsXCJhcmlhLXZhbHVldGV4dFwiOlwiU2F0dXJhdGlvbiBcIitiKHQucykrXCIlLCBCcmlnaHRuZXNzIFwiK2IodC52KStcIiVcIn0sZS5jcmVhdGVFbGVtZW50KHAse2NsYXNzTmFtZTpcInJlYWN0LWNvbG9yZnVsX19zYXR1cmF0aW9uLXBvaW50ZXJcIix0b3A6MS10LnYvMTAwLGxlZnQ6dC5zLzEwMCxjb2xvcjpxKHQpfSkpKX0pLEY9ZnVuY3Rpb24oZSxyKXtpZihlPT09cilyZXR1cm4hMDtmb3IodmFyIHQgaW4gZSlpZihlW3RdIT09clt0XSlyZXR1cm4hMTtyZXR1cm4hMH0sUD1mdW5jdGlvbihlLHIpe3JldHVybiBlLnJlcGxhY2UoL1xccy9nLFwiXCIpPT09ci5yZXBsYWNlKC9cXHMvZyxcIlwiKX0sWD1mdW5jdGlvbihlLHIpe3JldHVybiBlLnRvTG93ZXJDYXNlKCk9PT1yLnRvTG93ZXJDYXNlKCl8fEYoQyhlKSxDKHIpKX07ZnVuY3Rpb24gWShlLHQsbCl7dmFyIHU9aShsKSxjPW8oZnVuY3Rpb24oKXtyZXR1cm4gZS50b0hzdmEodCl9KSxzPWNbMF0sZj1jWzFdLHY9cih7Y29sb3I6dCxoc3ZhOnN9KTtuKGZ1bmN0aW9uKCl7aWYoIWUuZXF1YWwodCx2LmN1cnJlbnQuY29sb3IpKXt2YXIgcj1lLnRvSHN2YSh0KTt2LmN1cnJlbnQ9e2hzdmE6cixjb2xvcjp0fSxmKHIpfX0sW3QsZV0pLG4oZnVuY3Rpb24oKXt2YXIgcjtGKHMsdi5jdXJyZW50LmhzdmEpfHxlLmVxdWFsKHI9ZS5mcm9tSHN2YShzKSx2LmN1cnJlbnQuY29sb3IpfHwodi5jdXJyZW50PXtoc3ZhOnMsY29sb3I6cn0sdShyKSl9LFtzLGUsdV0pO3ZhciBkPWEoZnVuY3Rpb24oZSl7ZihmdW5jdGlvbihyKXtyZXR1cm4gT2JqZWN0LmFzc2lnbih7fSxyLGUpfSl9LFtdKTtyZXR1cm5bcyxkXX12YXIgUixWPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3c/bDpuLCQ9ZnVuY3Rpb24oKXtyZXR1cm4gUnx8KFwidW5kZWZpbmVkXCIhPXR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXz9fX3dlYnBhY2tfbm9uY2VfXzp2b2lkIDApfSxHPWZ1bmN0aW9uKGUpe1I9ZX0sSj1uZXcgTWFwLFE9ZnVuY3Rpb24oZSl7VihmdW5jdGlvbigpe3ZhciByPWUuY3VycmVudD9lLmN1cnJlbnQub3duZXJEb2N1bWVudDpkb2N1bWVudDtpZih2b2lkIDAhPT1yJiYhSi5oYXMocikpe3ZhciB0PXIuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO3QuaW5uZXJIVE1MPScucmVhY3QtY29sb3JmdWx7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjt3aWR0aDoyMDBweDtoZWlnaHQ6MjAwcHg7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2N1cnNvcjpkZWZhdWx0fS5yZWFjdC1jb2xvcmZ1bF9fc2F0dXJhdGlvbntwb3NpdGlvbjpyZWxhdGl2ZTtmbGV4LWdyb3c6MTtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbToxMnB4IHNvbGlkICMwMDA7Ym9yZGVyLXJhZGl1czo4cHggOHB4IDAgMDtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCgwZGVnLCMwMDAsdHJhbnNwYXJlbnQpLGxpbmVhci1ncmFkaWVudCg5MGRlZywjZmZmLGhzbGEoMCwwJSwxMDAlLDApKX0ucmVhY3QtY29sb3JmdWxfX2FscGhhLWdyYWRpZW50LC5yZWFjdC1jb2xvcmZ1bF9fcG9pbnRlci1maWxse2NvbnRlbnQ6XCJcIjtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtwb2ludGVyLWV2ZW50czpub25lO2JvcmRlci1yYWRpdXM6aW5oZXJpdH0ucmVhY3QtY29sb3JmdWxfX2FscGhhLWdyYWRpZW50LC5yZWFjdC1jb2xvcmZ1bF9fc2F0dXJhdGlvbntib3gtc2hhZG93Omluc2V0IDAgMCAwIDFweCByZ2JhKDAsMCwwLC4wNSl9LnJlYWN0LWNvbG9yZnVsX19hbHBoYSwucmVhY3QtY29sb3JmdWxfX2h1ZXtwb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6MjRweH0ucmVhY3QtY29sb3JmdWxfX2h1ZXtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCg5MGRlZyxyZWQgMCwjZmYwIDE3JSwjMGYwIDMzJSwjMGZmIDUwJSwjMDBmIDY3JSwjZjBmIDgzJSxyZWQpfS5yZWFjdC1jb2xvcmZ1bF9fbGFzdC1jb250cm9se2JvcmRlci1yYWRpdXM6MCAwIDhweCA4cHh9LnJlYWN0LWNvbG9yZnVsX19pbnRlcmFjdGl2ZXtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtib3JkZXItcmFkaXVzOmluaGVyaXQ7b3V0bGluZTpub25lO3RvdWNoLWFjdGlvbjpub25lfS5yZWFjdC1jb2xvcmZ1bF9fcG9pbnRlcntwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjE7Ym94LXNpemluZzpib3JkZXItYm94O3dpZHRoOjI4cHg7aGVpZ2h0OjI4cHg7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MnB4IHNvbGlkICNmZmY7Ym9yZGVyLXJhZGl1czo1MCU7Ym94LXNoYWRvdzowIDJweCA0cHggcmdiYSgwLDAsMCwuMil9LnJlYWN0LWNvbG9yZnVsX19pbnRlcmFjdGl2ZTpmb2N1cyAucmVhY3QtY29sb3JmdWxfX3BvaW50ZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpIHNjYWxlKDEuMSl9LnJlYWN0LWNvbG9yZnVsX19hbHBoYSwucmVhY3QtY29sb3JmdWxfX2FscGhhLXBvaW50ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JhY2tncm91bmQtaW1hZ2U6dXJsKFxcJ2RhdGE6aW1hZ2Uvc3ZnK3htbDtjaGFyc2V0PXV0Zi04LDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIGZpbGwtb3BhY2l0eT1cIi4wNVwiPjxwYXRoIGQ9XCJNOCAwaDh2OEg4ek0wIDhoOHY4SDB6XCIvPjwvc3ZnPlxcJyl9LnJlYWN0LWNvbG9yZnVsX19zYXR1cmF0aW9uLXBvaW50ZXJ7ei1pbmRleDozfS5yZWFjdC1jb2xvcmZ1bF9faHVlLXBvaW50ZXJ7ei1pbmRleDoyfScsSi5zZXQocix0KTt2YXIgbj0kKCk7biYmdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLG4pLHIuaGVhZC5hcHBlbmRDaGlsZCh0KX19LFtdKX0sVT1mdW5jdGlvbih0KXt2YXIgbj10LmNsYXNzTmFtZSxvPXQuY29sb3JNb2RlbCxhPXQuY29sb3IsbD12b2lkIDA9PT1hP28uZGVmYXVsdENvbG9yOmEsaT10Lm9uQ2hhbmdlLHM9Yyh0LFtcImNsYXNzTmFtZVwiLFwiY29sb3JNb2RlbFwiLFwiY29sb3JcIixcIm9uQ2hhbmdlXCJdKSxmPXIobnVsbCk7UShmKTt2YXIgdj1ZKG8sbCxpKSxkPXZbMF0saD12WzFdLG09ZyhbXCJyZWFjdC1jb2xvcmZ1bFwiLG5dKTtyZXR1cm4gZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7fSxzLHtyZWY6ZixjbGFzc05hbWU6bX0pLGUuY3JlYXRlRWxlbWVudChULHtoc3ZhOmQsb25DaGFuZ2U6aH0pLGUuY3JlYXRlRWxlbWVudChTLHtodWU6ZC5oLG9uQ2hhbmdlOmgsY2xhc3NOYW1lOlwicmVhY3QtY29sb3JmdWxfX2xhc3QtY29udHJvbFwifSkpfSxXPXtkZWZhdWx0Q29sb3I6XCIwMDBcIix0b0hzdmE6eCxmcm9tSHN2YTpmdW5jdGlvbihlKXtyZXR1cm4gdyh7aDplLmgsczplLnMsdjplLnYsYToxfSl9LGVxdWFsOlh9LFo9ZnVuY3Rpb24ocil7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChVLHUoe30scix7Y29sb3JNb2RlbDpXfSkpfSxlZT1mdW5jdGlvbihyKXt2YXIgdD1yLmNsYXNzTmFtZSxuPXIuaHN2YSxvPXIub25DaGFuZ2UsYT17YmFja2dyb3VuZEltYWdlOlwibGluZWFyLWdyYWRpZW50KDkwZGVnLCBcIitrKE9iamVjdC5hc3NpZ24oe30sbix7YTowfSkpK1wiLCBcIitrKE9iamVjdC5hc3NpZ24oe30sbix7YToxfSkpK1wiKVwifSxsPWcoW1wicmVhY3QtY29sb3JmdWxfX2FscGhhXCIsdF0pLHU9YigxMDAqbi5hKTtyZXR1cm4gZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIse2NsYXNzTmFtZTpsfSxlLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIix7Y2xhc3NOYW1lOlwicmVhY3QtY29sb3JmdWxfX2FscGhhLWdyYWRpZW50XCIsc3R5bGU6YX0pLGUuY3JlYXRlRWxlbWVudChtLHtvbk1vdmU6ZnVuY3Rpb24oZSl7byh7YTplLmxlZnR9KX0sb25LZXk6ZnVuY3Rpb24oZSl7byh7YTpzKG4uYStlLmxlZnQpfSl9LFwiYXJpYS1sYWJlbFwiOlwiQWxwaGFcIixcImFyaWEtdmFsdWV0ZXh0XCI6dStcIiVcIixcImFyaWEtdmFsdWVub3dcIjp1LFwiYXJpYS12YWx1ZW1pblwiOlwiMFwiLFwiYXJpYS12YWx1ZW1heFwiOlwiMTAwXCJ9LGUuY3JlYXRlRWxlbWVudChwLHtjbGFzc05hbWU6XCJyZWFjdC1jb2xvcmZ1bF9fYWxwaGEtcG9pbnRlclwiLGxlZnQ6bi5hLGNvbG9yOmsobil9KSkpfSxyZT1mdW5jdGlvbih0KXt2YXIgbj10LmNsYXNzTmFtZSxvPXQuY29sb3JNb2RlbCxhPXQuY29sb3IsbD12b2lkIDA9PT1hP28uZGVmYXVsdENvbG9yOmEsaT10Lm9uQ2hhbmdlLHM9Yyh0LFtcImNsYXNzTmFtZVwiLFwiY29sb3JNb2RlbFwiLFwiY29sb3JcIixcIm9uQ2hhbmdlXCJdKSxmPXIobnVsbCk7UShmKTt2YXIgdj1ZKG8sbCxpKSxkPXZbMF0saD12WzFdLG09ZyhbXCJyZWFjdC1jb2xvcmZ1bFwiLG5dKTtyZXR1cm4gZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsdSh7fSxzLHtyZWY6ZixjbGFzc05hbWU6bX0pLGUuY3JlYXRlRWxlbWVudChULHtoc3ZhOmQsb25DaGFuZ2U6aH0pLGUuY3JlYXRlRWxlbWVudChTLHtodWU6ZC5oLG9uQ2hhbmdlOmh9KSxlLmNyZWF0ZUVsZW1lbnQoZWUse2hzdmE6ZCxvbkNoYW5nZTpoLGNsYXNzTmFtZTpcInJlYWN0LWNvbG9yZnVsX19sYXN0LWNvbnRyb2xcIn0pKX0sdGU9e2RlZmF1bHRDb2xvcjpcIjAwMDFcIix0b0hzdmE6eCxmcm9tSHN2YTp3LGVxdWFsOlh9LG5lPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQocmUsdSh7fSxyLHtjb2xvck1vZGVsOnRlfSkpfSxvZT17ZGVmYXVsdENvbG9yOntoOjAsczowLGw6MCxhOjF9LHRvSHN2YTpOLGZyb21Ic3ZhOnksZXF1YWw6Rn0sYWU9ZnVuY3Rpb24ocil7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChyZSx1KHt9LHIse2NvbG9yTW9kZWw6b2V9KSl9LGxlPXtkZWZhdWx0Q29sb3I6XCJoc2xhKDAsIDAlLCAwJSwgMSlcIix0b0hzdmE6SCxmcm9tSHN2YTprLGVxdWFsOlB9LHVlPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQocmUsdSh7fSxyLHtjb2xvck1vZGVsOmxlfSkpfSxjZT17ZGVmYXVsdENvbG9yOntoOjAsczowLGw6MH0sdG9Ic3ZhOmZ1bmN0aW9uKGUpe3JldHVybiBOKHtoOmUuaCxzOmUucyxsOmUubCxhOjF9KX0sZnJvbUhzdmE6ZnVuY3Rpb24oZSl7cmV0dXJue2g6KHI9eShlKSkuaCxzOnIucyxsOnIubH07dmFyIHJ9LGVxdWFsOkZ9LGllPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQoVSx1KHt9LHIse2NvbG9yTW9kZWw6Y2V9KSl9LHNlPXtkZWZhdWx0Q29sb3I6XCJoc2woMCwgMCUsIDAlKVwiLHRvSHN2YTpNLGZyb21Ic3ZhOnEsZXF1YWw6UH0sZmU9ZnVuY3Rpb24ocil7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChVLHUoe30scix7Y29sb3JNb2RlbDpzZX0pKX0sdmU9e2RlZmF1bHRDb2xvcjp7aDowLHM6MCx2OjAsYToxfSx0b0hzdmE6ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGZyb21Ic3ZhOkEsZXF1YWw6Rn0sZGU9ZnVuY3Rpb24ocil7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChyZSx1KHt9LHIse2NvbG9yTW9kZWw6dmV9KSl9LGhlPXtkZWZhdWx0Q29sb3I6XCJoc3ZhKDAsIDAlLCAwJSwgMSlcIix0b0hzdmE6Tyxmcm9tSHN2YTpmdW5jdGlvbihlKXt2YXIgcj1BKGUpO3JldHVyblwiaHN2YShcIityLmgrXCIsIFwiK3IucytcIiUsIFwiK3IuditcIiUsIFwiK3IuYStcIilcIn0sZXF1YWw6UH0sbWU9ZnVuY3Rpb24ocil7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChyZSx1KHt9LHIse2NvbG9yTW9kZWw6aGV9KSl9LGdlPXtkZWZhdWx0Q29sb3I6e2g6MCxzOjAsdjowfSx0b0hzdmE6ZnVuY3Rpb24oZSl7cmV0dXJue2g6ZS5oLHM6ZS5zLHY6ZS52LGE6MX19LGZyb21Ic3ZhOmZ1bmN0aW9uKGUpe3ZhciByPUEoZSk7cmV0dXJue2g6ci5oLHM6ci5zLHY6ci52fX0sZXF1YWw6Rn0scGU9ZnVuY3Rpb24ocil7cmV0dXJuIGUuY3JlYXRlRWxlbWVudChVLHUoe30scix7Y29sb3JNb2RlbDpnZX0pKX0sYmU9e2RlZmF1bHRDb2xvcjpcImhzdigwLCAwJSwgMCUpXCIsdG9Ic3ZhOmosZnJvbUhzdmE6ZnVuY3Rpb24oZSl7dmFyIHI9QShlKTtyZXR1cm5cImhzdihcIityLmgrXCIsIFwiK3IucytcIiUsIFwiK3IuditcIiUpXCJ9LGVxdWFsOlB9LF9lPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQoVSx1KHt9LHIse2NvbG9yTW9kZWw6YmV9KSl9LHhlPXtkZWZhdWx0Q29sb3I6e3I6MCxnOjAsYjowLGE6MX0sdG9Ic3ZhOkwsZnJvbUhzdmE6SSxlcXVhbDpGfSxDZT1mdW5jdGlvbihyKXtyZXR1cm4gZS5jcmVhdGVFbGVtZW50KHJlLHUoe30scix7Y29sb3JNb2RlbDp4ZX0pKX0sRWU9e2RlZmF1bHRDb2xvcjpcInJnYmEoMCwgMCwgMCwgMSlcIix0b0hzdmE6eixmcm9tSHN2YTpmdW5jdGlvbihlKXt2YXIgcj1JKGUpO3JldHVyblwicmdiYShcIityLnIrXCIsIFwiK3IuZytcIiwgXCIrci5iK1wiLCBcIityLmErXCIpXCJ9LGVxdWFsOlB9LEhlPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQocmUsdSh7fSxyLHtjb2xvck1vZGVsOkVlfSkpfSxNZT17ZGVmYXVsdENvbG9yOntyOjAsZzowLGI6MH0sdG9Ic3ZhOmZ1bmN0aW9uKGUpe3JldHVybiBMKHtyOmUucixnOmUuZyxiOmUuYixhOjF9KX0sZnJvbUhzdmE6ZnVuY3Rpb24oZSl7cmV0dXJue3I6KHI9SShlKSkucixnOnIuZyxiOnIuYn07dmFyIHJ9LGVxdWFsOkZ9LE5lPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQoVSx1KHt9LHIse2NvbG9yTW9kZWw6TWV9KSl9LHdlPXtkZWZhdWx0Q29sb3I6XCJyZ2IoMCwgMCwgMClcIix0b0hzdmE6Qixmcm9tSHN2YTpmdW5jdGlvbihlKXt2YXIgcj1JKGUpO3JldHVyblwicmdiKFwiK3IucitcIiwgXCIrci5nK1wiLCBcIityLmIrXCIpXCJ9LGVxdWFsOlB9LHllPWZ1bmN0aW9uKHIpe3JldHVybiBlLmNyZWF0ZUVsZW1lbnQoVSx1KHt9LHIse2NvbG9yTW9kZWw6d2V9KSl9LHFlPS9eIz8oWzAtOUEtRl17Myw4fSkkL2ksa2U9ZnVuY3Rpb24ocil7dmFyIHQ9ci5jb2xvcixsPXZvaWQgMD09PXQ/XCJcIjp0LHM9ci5vbkNoYW5nZSxmPXIub25CbHVyLHY9ci5lc2NhcGUsZD1yLnZhbGlkYXRlLGg9ci5mb3JtYXQsbT1yLnByb2Nlc3MsZz1jKHIsW1wiY29sb3JcIixcIm9uQ2hhbmdlXCIsXCJvbkJsdXJcIixcImVzY2FwZVwiLFwidmFsaWRhdGVcIixcImZvcm1hdFwiLFwicHJvY2Vzc1wiXSkscD1vKGZ1bmN0aW9uKCl7cmV0dXJuIHYobCl9KSxiPXBbMF0sXz1wWzFdLHg9aShzKSxDPWkoZiksRT1hKGZ1bmN0aW9uKGUpe3ZhciByPXYoZS50YXJnZXQudmFsdWUpO18ociksZChyKSYmeChtP20ocik6cil9LFt2LG0sZCx4XSksSD1hKGZ1bmN0aW9uKGUpe2QoZS50YXJnZXQudmFsdWUpfHxfKHYobCkpLEMoZSl9LFtsLHYsZCxDXSk7cmV0dXJuIG4oZnVuY3Rpb24oKXtfKHYobCkpfSxbbCx2XSksZS5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIix1KHt9LGcse3ZhbHVlOmg/aChiKTpiLHNwZWxsQ2hlY2s6XCJmYWxzZVwiLG9uQ2hhbmdlOkUsb25CbHVyOkh9KSl9LEllPWZ1bmN0aW9uKGUpe3JldHVyblwiI1wiK2V9LE9lPWZ1bmN0aW9uKHIpe3ZhciB0PXIucHJlZml4ZWQsbj1yLmFscGhhLG89YyhyLFtcInByZWZpeGVkXCIsXCJhbHBoYVwiXSksbD1hKGZ1bmN0aW9uKGUpe3JldHVybiBlLnJlcGxhY2UoLyhbXjAtOUEtRl0rKS9naSxcIlwiKS5zdWJzdHJpbmcoMCxuPzg6Nil9LFtuXSksaT1hKGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihlLHIpe3ZhciB0PXFlLmV4ZWMoZSksbj10P3RbMV0ubGVuZ3RoOjA7cmV0dXJuIDM9PT1ufHw2PT09bnx8ISFyJiY0PT09bnx8ISFyJiY4PT09bn0oZSxuKX0sW25dKTtyZXR1cm4gZS5jcmVhdGVFbGVtZW50KGtlLHUoe30sbyx7ZXNjYXBlOmwsZm9ybWF0OnQ/SWU6dm9pZCAwLHByb2Nlc3M6SWUsdmFsaWRhdGU6aX0pKX07ZXhwb3J0e25lIGFzIEhleEFscGhhQ29sb3JQaWNrZXIsT2UgYXMgSGV4Q29sb3JJbnB1dCxaIGFzIEhleENvbG9yUGlja2VyLGllIGFzIEhzbENvbG9yUGlja2VyLGZlIGFzIEhzbFN0cmluZ0NvbG9yUGlja2VyLGFlIGFzIEhzbGFDb2xvclBpY2tlcix1ZSBhcyBIc2xhU3RyaW5nQ29sb3JQaWNrZXIscGUgYXMgSHN2Q29sb3JQaWNrZXIsX2UgYXMgSHN2U3RyaW5nQ29sb3JQaWNrZXIsZGUgYXMgSHN2YUNvbG9yUGlja2VyLG1lIGFzIEhzdmFTdHJpbmdDb2xvclBpY2tlcixOZSBhcyBSZ2JDb2xvclBpY2tlcix5ZSBhcyBSZ2JTdHJpbmdDb2xvclBpY2tlcixDZSBhcyBSZ2JhQ29sb3JQaWNrZXIsSGUgYXMgUmdiYVN0cmluZ0NvbG9yUGlja2VyLEcgYXMgc2V0Tm9uY2V9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubW9kdWxlLmpzLm1hcFxuIiwiaW1wb3J0IHsgZ2V0Q29udHJvbElkIH0gZnJvbSAnLi9jaHVuay1HV0FKNEtSVS5tanMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSGV4Q29sb3JQaWNrZXIsIFJnYmFTdHJpbmdDb2xvclBpY2tlciwgSHNsYVN0cmluZ0NvbG9yUGlja2VyIH0gZnJvbSAncmVhY3QtY29sb3JmdWwnO1xuaW1wb3J0IGNvbnZlcnQgZnJvbSAnY29sb3ItY29udmVydCc7XG5pbXBvcnQgdGhyb3R0bGUgZnJvbSAnbG9kYXNoL3Rocm90dGxlLmpzJztcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gJ0BzdG9yeWJvb2svdGhlbWluZyc7XG5pbXBvcnQgeyBXaXRoVG9vbHRpcCwgVG9vbHRpcE5vdGUsIEZvcm0sIEljb25zIH0gZnJvbSAnQHN0b3J5Ym9vay9jb21wb25lbnRzJztcblxudmFyIFdyYXBwZXI9c3R5bGVkLmRpdih7cG9zaXRpb246XCJyZWxhdGl2ZVwiLG1heFdpZHRoOjI1MH0pLFBpY2tlclRvb2x0aXA9c3R5bGVkKFdpdGhUb29sdGlwKSh7cG9zaXRpb246XCJhYnNvbHV0ZVwiLHpJbmRleDoxLHRvcDo0LGxlZnQ6NH0pLFRvb2x0aXBDb250ZW50PXN0eWxlZC5kaXYoe3dpZHRoOjIwMCxtYXJnaW46NSxcIi5yZWFjdC1jb2xvcmZ1bF9fc2F0dXJhdGlvblwiOntib3JkZXJSYWRpdXM6XCI0cHggNHB4IDAgMFwifSxcIi5yZWFjdC1jb2xvcmZ1bF9faHVlXCI6e2JveFNoYWRvdzpcImluc2V0IDAgMCAwIDFweCByZ2IoMCAwIDAgLyA1JSlcIn0sXCIucmVhY3QtY29sb3JmdWxfX2xhc3QtY29udHJvbFwiOntib3JkZXJSYWRpdXM6XCIwIDAgNHB4IDRweFwifX0pLE5vdGU9c3R5bGVkKFRvb2x0aXBOb3RlKSgoe3RoZW1lfSk9Pih7Zm9udEZhbWlseTp0aGVtZS50eXBvZ3JhcGh5LmZvbnRzLmJhc2V9KSksU3dhdGNoZXM9c3R5bGVkLmRpdih7ZGlzcGxheTpcImdyaWRcIixncmlkVGVtcGxhdGVDb2x1bW5zOlwicmVwZWF0KDksIDE2cHgpXCIsZ2FwOjYscGFkZGluZzozLG1hcmdpblRvcDo1LHdpZHRoOjIwMH0pLFN3YXRjaENvbG9yPXN0eWxlZC5kaXYoKHt0aGVtZSxhY3RpdmV9KT0+KHt3aWR0aDoxNixoZWlnaHQ6MTYsYm94U2hhZG93OmFjdGl2ZT9gJHt0aGVtZS5hcHBCb3JkZXJDb2xvcn0gMCAwIDAgMXB4IGluc2V0LCAke3RoZW1lLnRleHRNdXRlZENvbG9yfTUwIDAgMCAwIDRweGA6YCR7dGhlbWUuYXBwQm9yZGVyQ29sb3J9IDAgMCAwIDFweCBpbnNldGAsYm9yZGVyUmFkaXVzOnRoZW1lLmFwcEJvcmRlclJhZGl1c30pKSxzd2F0Y2hCYWNrZ3JvdW5kPWB1cmwoJ2RhdGE6aW1hZ2Uvc3ZnK3htbDtjaGFyc2V0PXV0Zi04LDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPVwiMTZcIiBoZWlnaHQ9XCIxNlwiIGZpbGwtb3BhY2l0eT1cIi4wNVwiPjxwYXRoIGQ9XCJNOCAwaDh2OEg4ek0wIDhoOHY4SDB6XCIvPjwvc3ZnPicpYCxTd2F0Y2g9KHt2YWx1ZSxhY3RpdmUsb25DbGljayxzdHlsZSwuLi5wcm9wc30pPT57bGV0IGJhY2tncm91bmRJbWFnZT1gbGluZWFyLWdyYWRpZW50KCR7dmFsdWV9LCAke3ZhbHVlfSksICR7c3dhdGNoQmFja2dyb3VuZH0sIGxpbmVhci1ncmFkaWVudCgjZmZmLCAjZmZmKWA7cmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3dhdGNoQ29sb3Isey4uLnByb3BzLGFjdGl2ZSxvbkNsaWNrLHN0eWxlOnsuLi5zdHlsZSxiYWNrZ3JvdW5kSW1hZ2V9fSl9LElucHV0PXN0eWxlZChGb3JtLklucHV0KSgoe3RoZW1lfSk9Pih7d2lkdGg6XCIxMDAlXCIscGFkZGluZ0xlZnQ6MzAscGFkZGluZ1JpZ2h0OjMwLGJveFNpemluZzpcImJvcmRlci1ib3hcIixmb250RmFtaWx5OnRoZW1lLnR5cG9ncmFwaHkuZm9udHMuYmFzZX0pKSxUb2dnbGVJY29uPXN0eWxlZChJY29ucykoKHt0aGVtZX0pPT4oe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIix6SW5kZXg6MSx0b3A6NixyaWdodDo3LHdpZHRoOjIwLGhlaWdodDoyMCxwYWRkaW5nOjQsYm94U2l6aW5nOlwiYm9yZGVyLWJveFwiLGN1cnNvcjpcInBvaW50ZXJcIixjb2xvcjp0aGVtZS5pbnB1dC5jb2xvcn0pKSxDb2xvclNwYWNlPShDb2xvclNwYWNlMj0+KENvbG9yU3BhY2UyLlJHQj1cInJnYlwiLENvbG9yU3BhY2UyLkhTTD1cImhzbFwiLENvbG9yU3BhY2UyLkhFWD1cImhleFwiLENvbG9yU3BhY2UyKSkoQ29sb3JTcGFjZXx8e30pLENPTE9SX1NQQUNFUz1PYmplY3QudmFsdWVzKENvbG9yU3BhY2UpLENPTE9SX1JFR0VYUD0vXFwoKFswLTldKyksXFxzKihbMC05XSspJT8sXFxzKihbMC05XSspJT8sP1xccyooWzAtOS5dKyk/XFwpLyxSR0JfUkVHRVhQPS9eXFxzKnJnYmE/XFwoKFswLTldKyksXFxzKihbMC05XSspLFxccyooWzAtOV0rKSw/XFxzKihbMC05Ll0rKT9cXClcXHMqJC9pLEhTTF9SRUdFWFA9L15cXHMqaHNsYT9cXCgoWzAtOV0rKSxcXHMqKFswLTldKyklLFxccyooWzAtOV0rKSUsP1xccyooWzAtOS5dKyk/XFwpXFxzKiQvaSxIRVhfUkVHRVhQPS9eXFxzKiM/KFswLTlhLWZdezN9fFswLTlhLWZdezZ9KVxccyokL2ksU0hPUlRIRVhfUkVHRVhQPS9eXFxzKiM/KFswLTlhLWZdezN9KVxccyokL2ksQ29sb3JQaWNrZXI9e1tcImhleFwiXTpIZXhDb2xvclBpY2tlcixbXCJyZ2JcIl06UmdiYVN0cmluZ0NvbG9yUGlja2VyLFtcImhzbFwiXTpIc2xhU3RyaW5nQ29sb3JQaWNrZXJ9LGZhbGxiYWNrQ29sb3I9e1tcImhleFwiXTpcInRyYW5zcGFyZW50XCIsW1wicmdiXCJdOlwicmdiYSgwLCAwLCAwLCAwKVwiLFtcImhzbFwiXTpcImhzbGEoMCwgMCUsIDAlLCAwKVwifSxzdHJpbmdUb0FyZ3M9dmFsdWU9PntsZXQgbWF0Y2g9dmFsdWU/Lm1hdGNoKENPTE9SX1JFR0VYUCk7aWYoIW1hdGNoKXJldHVybiBbMCwwLDAsMV07bGV0Wyx4LHkseixhPTFdPW1hdGNoO3JldHVybiBbeCx5LHosYV0ubWFwKE51bWJlcil9LHBhcnNlVmFsdWU9dmFsdWU9PntpZighdmFsdWUpcmV0dXJuO2xldCB2YWxpZD0hMDtpZihSR0JfUkVHRVhQLnRlc3QodmFsdWUpKXtsZXRbcixnLGIsYV09c3RyaW5nVG9BcmdzKHZhbHVlKSxbaCxzLGxdPWNvbnZlcnQucmdiLmhzbChbcixnLGJdKXx8WzAsMCwwXTtyZXR1cm4ge3ZhbGlkLHZhbHVlLGtleXdvcmQ6Y29udmVydC5yZ2Iua2V5d29yZChbcixnLGJdKSxjb2xvclNwYWNlOlwicmdiXCIsW1wicmdiXCJdOnZhbHVlLFtcImhzbFwiXTpgaHNsYSgke2h9LCAke3N9JSwgJHtsfSUsICR7YX0pYCxbXCJoZXhcIl06YCMke2NvbnZlcnQucmdiLmhleChbcixnLGJdKS50b0xvd2VyQ2FzZSgpfWB9fWlmKEhTTF9SRUdFWFAudGVzdCh2YWx1ZSkpe2xldFtoLHMsbCxhXT1zdHJpbmdUb0FyZ3ModmFsdWUpLFtyLGcsYl09Y29udmVydC5oc2wucmdiKFtoLHMsbF0pfHxbMCwwLDBdO3JldHVybiB7dmFsaWQsdmFsdWUsa2V5d29yZDpjb252ZXJ0LmhzbC5rZXl3b3JkKFtoLHMsbF0pLGNvbG9yU3BhY2U6XCJoc2xcIixbXCJyZ2JcIl06YHJnYmEoJHtyfSwgJHtnfSwgJHtifSwgJHthfSlgLFtcImhzbFwiXTp2YWx1ZSxbXCJoZXhcIl06YCMke2NvbnZlcnQuaHNsLmhleChbaCxzLGxdKS50b0xvd2VyQ2FzZSgpfWB9fWxldCBwbGFpbj12YWx1ZS5yZXBsYWNlKFwiI1wiLFwiXCIpLHJnYj1jb252ZXJ0LmtleXdvcmQucmdiKHBsYWluKXx8Y29udmVydC5oZXgucmdiKHBsYWluKSxoc2w9Y29udmVydC5yZ2IuaHNsKHJnYiksbWFwcGVkPXZhbHVlO2lmKC9bXiNhLWYwLTldL2kudGVzdCh2YWx1ZSk/bWFwcGVkPXBsYWluOkhFWF9SRUdFWFAudGVzdCh2YWx1ZSkmJihtYXBwZWQ9YCMke3BsYWlufWApLG1hcHBlZC5zdGFydHNXaXRoKFwiI1wiKSl2YWxpZD1IRVhfUkVHRVhQLnRlc3QobWFwcGVkKTtlbHNlIHRyeXtjb252ZXJ0LmtleXdvcmQuaGV4KG1hcHBlZCk7fWNhdGNoe3ZhbGlkPSExO31yZXR1cm4ge3ZhbGlkLHZhbHVlOm1hcHBlZCxrZXl3b3JkOmNvbnZlcnQucmdiLmtleXdvcmQocmdiKSxjb2xvclNwYWNlOlwiaGV4XCIsW1wicmdiXCJdOmByZ2JhKCR7cmdiWzBdfSwgJHtyZ2JbMV19LCAke3JnYlsyXX0sIDEpYCxbXCJoc2xcIl06YGhzbGEoJHtoc2xbMF19LCAke2hzbFsxXX0lLCAke2hzbFsyXX0lLCAxKWAsW1wiaGV4XCJdOm1hcHBlZH19LGdldFJlYWxWYWx1ZT0odmFsdWUsY29sb3IsY29sb3JTcGFjZSk9PntpZighdmFsdWV8fCFjb2xvcj8udmFsaWQpcmV0dXJuIGZhbGxiYWNrQ29sb3JbY29sb3JTcGFjZV07aWYoY29sb3JTcGFjZSE9PVwiaGV4XCIpcmV0dXJuIGNvbG9yPy5bY29sb3JTcGFjZV18fGZhbGxiYWNrQ29sb3JbY29sb3JTcGFjZV07aWYoIWNvbG9yLmhleC5zdGFydHNXaXRoKFwiI1wiKSl0cnl7cmV0dXJuIGAjJHtjb252ZXJ0LmtleXdvcmQuaGV4KGNvbG9yLmhleCl9YH1jYXRjaHtyZXR1cm4gZmFsbGJhY2tDb2xvci5oZXh9bGV0IHNob3J0PWNvbG9yLmhleC5tYXRjaChTSE9SVEhFWF9SRUdFWFApO2lmKCFzaG9ydClyZXR1cm4gSEVYX1JFR0VYUC50ZXN0KGNvbG9yLmhleCk/Y29sb3IuaGV4OmZhbGxiYWNrQ29sb3IuaGV4O2xldFtyLGcsYl09c2hvcnRbMV0uc3BsaXQoXCJcIik7cmV0dXJuIGAjJHtyfSR7cn0ke2d9JHtnfSR7Yn0ke2J9YH0sdXNlQ29sb3JJbnB1dD0oaW5pdGlhbFZhbHVlLG9uQ2hhbmdlKT0+e2xldFt2YWx1ZSxzZXRWYWx1ZV09dXNlU3RhdGUoaW5pdGlhbFZhbHVlfHxcIlwiKSxbY29sb3Isc2V0Q29sb3JdPXVzZVN0YXRlKCgpPT5wYXJzZVZhbHVlKHZhbHVlKSksW2NvbG9yU3BhY2Usc2V0Q29sb3JTcGFjZV09dXNlU3RhdGUoY29sb3I/LmNvbG9yU3BhY2V8fFwiaGV4XCIpO3VzZUVmZmVjdCgoKT0+e2xldCBuZXh0VmFsdWU9aW5pdGlhbFZhbHVlfHxcIlwiLG5leHRDb2xvcj1wYXJzZVZhbHVlKG5leHRWYWx1ZSk7c2V0VmFsdWUobmV4dFZhbHVlKSxzZXRDb2xvcihuZXh0Q29sb3IpLHNldENvbG9yU3BhY2UobmV4dENvbG9yPy5jb2xvclNwYWNlfHxcImhleFwiKTt9LFtpbml0aWFsVmFsdWVdKTtsZXQgcmVhbFZhbHVlPXVzZU1lbW8oKCk9PmdldFJlYWxWYWx1ZSh2YWx1ZSxjb2xvcixjb2xvclNwYWNlKS50b0xvd2VyQ2FzZSgpLFt2YWx1ZSxjb2xvcixjb2xvclNwYWNlXSksdXBkYXRlVmFsdWU9dXNlQ2FsbGJhY2sodXBkYXRlPT57bGV0IHBhcnNlZD1wYXJzZVZhbHVlKHVwZGF0ZSksdj1wYXJzZWQ/LnZhbHVlfHx1cGRhdGV8fFwiXCI7c2V0VmFsdWUodiksdj09PVwiXCImJihzZXRDb2xvcih2b2lkIDApLG9uQ2hhbmdlKHZvaWQgMCkpLHBhcnNlZCYmKHNldENvbG9yKHBhcnNlZCksc2V0Q29sb3JTcGFjZShwYXJzZWQuY29sb3JTcGFjZSksb25DaGFuZ2UocGFyc2VkLnZhbHVlKSk7fSxbb25DaGFuZ2VdKSxjeWNsZUNvbG9yU3BhY2U9dXNlQ2FsbGJhY2soKCk9PntsZXQgbmV4dD1DT0xPUl9TUEFDRVMuaW5kZXhPZihjb2xvclNwYWNlKSsxO25leHQ+PUNPTE9SX1NQQUNFUy5sZW5ndGgmJihuZXh0PTApLHNldENvbG9yU3BhY2UoQ09MT1JfU1BBQ0VTW25leHRdKTtsZXQgdXBkYXRlPWNvbG9yPy5bQ09MT1JfU1BBQ0VTW25leHRdXXx8XCJcIjtzZXRWYWx1ZSh1cGRhdGUpLG9uQ2hhbmdlKHVwZGF0ZSk7fSxbY29sb3IsY29sb3JTcGFjZSxvbkNoYW5nZV0pO3JldHVybiB7dmFsdWUscmVhbFZhbHVlLHVwZGF0ZVZhbHVlLGNvbG9yLGNvbG9yU3BhY2UsY3ljbGVDb2xvclNwYWNlfX0saWQ9dmFsdWU9PnZhbHVlLnJlcGxhY2UoL1xccyovLFwiXCIpLnRvTG93ZXJDYXNlKCksdXNlUHJlc2V0cz0ocHJlc2V0Q29sb3JzLGN1cnJlbnRDb2xvcixjb2xvclNwYWNlKT0+e2xldFtzZWxlY3RlZENvbG9ycyxzZXRTZWxlY3RlZENvbG9yc109dXNlU3RhdGUoY3VycmVudENvbG9yPy52YWxpZD9bY3VycmVudENvbG9yXTpbXSk7dXNlRWZmZWN0KCgpPT57Y3VycmVudENvbG9yPT09dm9pZCAwJiZzZXRTZWxlY3RlZENvbG9ycyhbXSk7fSxbY3VycmVudENvbG9yXSk7bGV0IHByZXNldHM9dXNlTWVtbygoKT0+KHByZXNldENvbG9yc3x8W10pLm1hcChwcmVzZXQ9PnR5cGVvZiBwcmVzZXQ9PVwic3RyaW5nXCI/cGFyc2VWYWx1ZShwcmVzZXQpOnByZXNldC50aXRsZT97Li4ucGFyc2VWYWx1ZShwcmVzZXQuY29sb3IpLGtleXdvcmQ6cHJlc2V0LnRpdGxlfTpwYXJzZVZhbHVlKHByZXNldC5jb2xvcikpLmNvbmNhdChzZWxlY3RlZENvbG9ycykuZmlsdGVyKEJvb2xlYW4pLnNsaWNlKC0yNyksW3ByZXNldENvbG9ycyxzZWxlY3RlZENvbG9yc10pLGFkZFByZXNldD11c2VDYWxsYmFjayhjb2xvcj0+e2NvbG9yPy52YWxpZCYmKHByZXNldHMuc29tZShwcmVzZXQ9PmlkKHByZXNldFtjb2xvclNwYWNlXSk9PT1pZChjb2xvcltjb2xvclNwYWNlXSkpfHxzZXRTZWxlY3RlZENvbG9ycyhhcnI9PmFyci5jb25jYXQoY29sb3IpKSk7fSxbY29sb3JTcGFjZSxwcmVzZXRzXSk7cmV0dXJuIHtwcmVzZXRzLGFkZFByZXNldH19LENvbG9yQ29udHJvbD0oe25hbWUsdmFsdWU6aW5pdGlhbFZhbHVlLG9uQ2hhbmdlLG9uRm9jdXMsb25CbHVyLHByZXNldENvbG9ycyxzdGFydE9wZW49ITF9KT0+e2xldCB0aHJvdHRsZWRPbkNoYW5nZT11c2VDYWxsYmFjayh0aHJvdHRsZShvbkNoYW5nZSwyMDApLFtvbkNoYW5nZV0pLHt2YWx1ZSxyZWFsVmFsdWUsdXBkYXRlVmFsdWUsY29sb3IsY29sb3JTcGFjZSxjeWNsZUNvbG9yU3BhY2V9PXVzZUNvbG9ySW5wdXQoaW5pdGlhbFZhbHVlLHRocm90dGxlZE9uQ2hhbmdlKSx7cHJlc2V0cyxhZGRQcmVzZXR9PXVzZVByZXNldHMocHJlc2V0Q29sb3JzLGNvbG9yLGNvbG9yU3BhY2UpLFBpY2tlcj1Db2xvclBpY2tlcltjb2xvclNwYWNlXTtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChXcmFwcGVyLG51bGwsUmVhY3QuY3JlYXRlRWxlbWVudChQaWNrZXJUb29sdGlwLHtzdGFydE9wZW4sY2xvc2VPbk91dHNpZGVDbGljazohMCxvblZpc2libGVDaGFuZ2U6KCk9PmFkZFByZXNldChjb2xvciksdG9vbHRpcDpSZWFjdC5jcmVhdGVFbGVtZW50KFRvb2x0aXBDb250ZW50LG51bGwsUmVhY3QuY3JlYXRlRWxlbWVudChQaWNrZXIse2NvbG9yOnJlYWxWYWx1ZT09PVwidHJhbnNwYXJlbnRcIj9cIiMwMDAwMDBcIjpyZWFsVmFsdWUsb25DaGFuZ2U6dXBkYXRlVmFsdWUsb25Gb2N1cyxvbkJsdXJ9KSxwcmVzZXRzLmxlbmd0aD4wJiZSZWFjdC5jcmVhdGVFbGVtZW50KFN3YXRjaGVzLG51bGwscHJlc2V0cy5tYXAoKHByZXNldCxpbmRleCk9PlJlYWN0LmNyZWF0ZUVsZW1lbnQoV2l0aFRvb2x0aXAse2tleTpgJHtwcmVzZXQudmFsdWV9LSR7aW5kZXh9YCxoYXNDaHJvbWU6ITEsdG9vbHRpcDpSZWFjdC5jcmVhdGVFbGVtZW50KE5vdGUse25vdGU6cHJlc2V0LmtleXdvcmR8fHByZXNldC52YWx1ZX0pfSxSZWFjdC5jcmVhdGVFbGVtZW50KFN3YXRjaCx7dmFsdWU6cHJlc2V0W2NvbG9yU3BhY2VdLGFjdGl2ZTpjb2xvciYmaWQocHJlc2V0W2NvbG9yU3BhY2VdKT09PWlkKGNvbG9yW2NvbG9yU3BhY2VdKSxvbkNsaWNrOigpPT51cGRhdGVWYWx1ZShwcmVzZXQudmFsdWUpfSkpKSkpfSxSZWFjdC5jcmVhdGVFbGVtZW50KFN3YXRjaCx7dmFsdWU6cmVhbFZhbHVlLHN0eWxlOnttYXJnaW46NH19KSksUmVhY3QuY3JlYXRlRWxlbWVudChJbnB1dCx7aWQ6Z2V0Q29udHJvbElkKG5hbWUpLHZhbHVlLG9uQ2hhbmdlOmU9PnVwZGF0ZVZhbHVlKGUudGFyZ2V0LnZhbHVlKSxvbkZvY3VzOmU9PmUudGFyZ2V0LnNlbGVjdCgpLHBsYWNlaG9sZGVyOlwiQ2hvb3NlIGNvbG9yLi4uXCJ9KSx2YWx1ZT9SZWFjdC5jcmVhdGVFbGVtZW50KFRvZ2dsZUljb24se2ljb246XCJtYXJrdXBcIixvbkNsaWNrOmN5Y2xlQ29sb3JTcGFjZX0pOm51bGwpfSxDb2xvcl9kZWZhdWx0PUNvbG9yQ29udHJvbDtcblxuZXhwb3J0IHsgQ29sb3JDb250cm9sLCBDb2xvcl9kZWZhdWx0IGFzIGRlZmF1bHQgfTtcbiIsIi8qIE1JVCBsaWNlbnNlICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1taXhlZC1vcGVyYXRvcnMgKi9cbmNvbnN0IGNzc0tleXdvcmRzID0gcmVxdWlyZSgnY29sb3ItbmFtZScpO1xuXG4vLyBOT1RFOiBjb252ZXJzaW9ucyBzaG91bGQgb25seSByZXR1cm4gcHJpbWl0aXZlIHZhbHVlcyAoaS5lLiBhcnJheXMsIG9yXG4vLyAgICAgICB2YWx1ZXMgdGhhdCBnaXZlIGNvcnJlY3QgYHR5cGVvZmAgcmVzdWx0cykuXG4vLyAgICAgICBkbyBub3QgdXNlIGJveCB2YWx1ZXMgdHlwZXMgKGkuZS4gTnVtYmVyKCksIFN0cmluZygpLCBldGMuKVxuXG5jb25zdCByZXZlcnNlS2V5d29yZHMgPSB7fTtcbmZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKGNzc0tleXdvcmRzKSkge1xuXHRyZXZlcnNlS2V5d29yZHNbY3NzS2V5d29yZHNba2V5XV0gPSBrZXk7XG59XG5cbmNvbnN0IGNvbnZlcnQgPSB7XG5cdHJnYjoge2NoYW5uZWxzOiAzLCBsYWJlbHM6ICdyZ2InfSxcblx0aHNsOiB7Y2hhbm5lbHM6IDMsIGxhYmVsczogJ2hzbCd9LFxuXHRoc3Y6IHtjaGFubmVsczogMywgbGFiZWxzOiAnaHN2J30sXG5cdGh3Yjoge2NoYW5uZWxzOiAzLCBsYWJlbHM6ICdod2InfSxcblx0Y215azoge2NoYW5uZWxzOiA0LCBsYWJlbHM6ICdjbXlrJ30sXG5cdHh5ejoge2NoYW5uZWxzOiAzLCBsYWJlbHM6ICd4eXonfSxcblx0bGFiOiB7Y2hhbm5lbHM6IDMsIGxhYmVsczogJ2xhYid9LFxuXHRsY2g6IHtjaGFubmVsczogMywgbGFiZWxzOiAnbGNoJ30sXG5cdGhleDoge2NoYW5uZWxzOiAxLCBsYWJlbHM6IFsnaGV4J119LFxuXHRrZXl3b3JkOiB7Y2hhbm5lbHM6IDEsIGxhYmVsczogWydrZXl3b3JkJ119LFxuXHRhbnNpMTY6IHtjaGFubmVsczogMSwgbGFiZWxzOiBbJ2Fuc2kxNiddfSxcblx0YW5zaTI1Njoge2NoYW5uZWxzOiAxLCBsYWJlbHM6IFsnYW5zaTI1NiddfSxcblx0aGNnOiB7Y2hhbm5lbHM6IDMsIGxhYmVsczogWydoJywgJ2MnLCAnZyddfSxcblx0YXBwbGU6IHtjaGFubmVsczogMywgbGFiZWxzOiBbJ3IxNicsICdnMTYnLCAnYjE2J119LFxuXHRncmF5OiB7Y2hhbm5lbHM6IDEsIGxhYmVsczogWydncmF5J119XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnZlcnQ7XG5cbi8vIEhpZGUgLmNoYW5uZWxzIGFuZCAubGFiZWxzIHByb3BlcnRpZXNcbmZvciAoY29uc3QgbW9kZWwgb2YgT2JqZWN0LmtleXMoY29udmVydCkpIHtcblx0aWYgKCEoJ2NoYW5uZWxzJyBpbiBjb252ZXJ0W21vZGVsXSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ21pc3NpbmcgY2hhbm5lbHMgcHJvcGVydHk6ICcgKyBtb2RlbCk7XG5cdH1cblxuXHRpZiAoISgnbGFiZWxzJyBpbiBjb252ZXJ0W21vZGVsXSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ21pc3NpbmcgY2hhbm5lbCBsYWJlbHMgcHJvcGVydHk6ICcgKyBtb2RlbCk7XG5cdH1cblxuXHRpZiAoY29udmVydFttb2RlbF0ubGFiZWxzLmxlbmd0aCAhPT0gY29udmVydFttb2RlbF0uY2hhbm5lbHMpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ2NoYW5uZWwgYW5kIGxhYmVsIGNvdW50cyBtaXNtYXRjaDogJyArIG1vZGVsKTtcblx0fVxuXG5cdGNvbnN0IHtjaGFubmVscywgbGFiZWxzfSA9IGNvbnZlcnRbbW9kZWxdO1xuXHRkZWxldGUgY29udmVydFttb2RlbF0uY2hhbm5lbHM7XG5cdGRlbGV0ZSBjb252ZXJ0W21vZGVsXS5sYWJlbHM7XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb252ZXJ0W21vZGVsXSwgJ2NoYW5uZWxzJywge3ZhbHVlOiBjaGFubmVsc30pO1xuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udmVydFttb2RlbF0sICdsYWJlbHMnLCB7dmFsdWU6IGxhYmVsc30pO1xufVxuXG5jb252ZXJ0LnJnYi5oc2wgPSBmdW5jdGlvbiAocmdiKSB7XG5cdGNvbnN0IHIgPSByZ2JbMF0gLyAyNTU7XG5cdGNvbnN0IGcgPSByZ2JbMV0gLyAyNTU7XG5cdGNvbnN0IGIgPSByZ2JbMl0gLyAyNTU7XG5cdGNvbnN0IG1pbiA9IE1hdGgubWluKHIsIGcsIGIpO1xuXHRjb25zdCBtYXggPSBNYXRoLm1heChyLCBnLCBiKTtcblx0Y29uc3QgZGVsdGEgPSBtYXggLSBtaW47XG5cdGxldCBoO1xuXHRsZXQgcztcblxuXHRpZiAobWF4ID09PSBtaW4pIHtcblx0XHRoID0gMDtcblx0fSBlbHNlIGlmIChyID09PSBtYXgpIHtcblx0XHRoID0gKGcgLSBiKSAvIGRlbHRhO1xuXHR9IGVsc2UgaWYgKGcgPT09IG1heCkge1xuXHRcdGggPSAyICsgKGIgLSByKSAvIGRlbHRhO1xuXHR9IGVsc2UgaWYgKGIgPT09IG1heCkge1xuXHRcdGggPSA0ICsgKHIgLSBnKSAvIGRlbHRhO1xuXHR9XG5cblx0aCA9IE1hdGgubWluKGggKiA2MCwgMzYwKTtcblxuXHRpZiAoaCA8IDApIHtcblx0XHRoICs9IDM2MDtcblx0fVxuXG5cdGNvbnN0IGwgPSAobWluICsgbWF4KSAvIDI7XG5cblx0aWYgKG1heCA9PT0gbWluKSB7XG5cdFx0cyA9IDA7XG5cdH0gZWxzZSBpZiAobCA8PSAwLjUpIHtcblx0XHRzID0gZGVsdGEgLyAobWF4ICsgbWluKTtcblx0fSBlbHNlIHtcblx0XHRzID0gZGVsdGEgLyAoMiAtIG1heCAtIG1pbik7XG5cdH1cblxuXHRyZXR1cm4gW2gsIHMgKiAxMDAsIGwgKiAxMDBdO1xufTtcblxuY29udmVydC5yZ2IuaHN2ID0gZnVuY3Rpb24gKHJnYikge1xuXHRsZXQgcmRpZjtcblx0bGV0IGdkaWY7XG5cdGxldCBiZGlmO1xuXHRsZXQgaDtcblx0bGV0IHM7XG5cblx0Y29uc3QgciA9IHJnYlswXSAvIDI1NTtcblx0Y29uc3QgZyA9IHJnYlsxXSAvIDI1NTtcblx0Y29uc3QgYiA9IHJnYlsyXSAvIDI1NTtcblx0Y29uc3QgdiA9IE1hdGgubWF4KHIsIGcsIGIpO1xuXHRjb25zdCBkaWZmID0gdiAtIE1hdGgubWluKHIsIGcsIGIpO1xuXHRjb25zdCBkaWZmYyA9IGZ1bmN0aW9uIChjKSB7XG5cdFx0cmV0dXJuICh2IC0gYykgLyA2IC8gZGlmZiArIDEgLyAyO1xuXHR9O1xuXG5cdGlmIChkaWZmID09PSAwKSB7XG5cdFx0aCA9IDA7XG5cdFx0cyA9IDA7XG5cdH0gZWxzZSB7XG5cdFx0cyA9IGRpZmYgLyB2O1xuXHRcdHJkaWYgPSBkaWZmYyhyKTtcblx0XHRnZGlmID0gZGlmZmMoZyk7XG5cdFx0YmRpZiA9IGRpZmZjKGIpO1xuXG5cdFx0aWYgKHIgPT09IHYpIHtcblx0XHRcdGggPSBiZGlmIC0gZ2RpZjtcblx0XHR9IGVsc2UgaWYgKGcgPT09IHYpIHtcblx0XHRcdGggPSAoMSAvIDMpICsgcmRpZiAtIGJkaWY7XG5cdFx0fSBlbHNlIGlmIChiID09PSB2KSB7XG5cdFx0XHRoID0gKDIgLyAzKSArIGdkaWYgLSByZGlmO1xuXHRcdH1cblxuXHRcdGlmIChoIDwgMCkge1xuXHRcdFx0aCArPSAxO1xuXHRcdH0gZWxzZSBpZiAoaCA+IDEpIHtcblx0XHRcdGggLT0gMTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gW1xuXHRcdGggKiAzNjAsXG5cdFx0cyAqIDEwMCxcblx0XHR2ICogMTAwXG5cdF07XG59O1xuXG5jb252ZXJ0LnJnYi5od2IgPSBmdW5jdGlvbiAocmdiKSB7XG5cdGNvbnN0IHIgPSByZ2JbMF07XG5cdGNvbnN0IGcgPSByZ2JbMV07XG5cdGxldCBiID0gcmdiWzJdO1xuXHRjb25zdCBoID0gY29udmVydC5yZ2IuaHNsKHJnYilbMF07XG5cdGNvbnN0IHcgPSAxIC8gMjU1ICogTWF0aC5taW4ociwgTWF0aC5taW4oZywgYikpO1xuXG5cdGIgPSAxIC0gMSAvIDI1NSAqIE1hdGgubWF4KHIsIE1hdGgubWF4KGcsIGIpKTtcblxuXHRyZXR1cm4gW2gsIHcgKiAxMDAsIGIgKiAxMDBdO1xufTtcblxuY29udmVydC5yZ2IuY215ayA9IGZ1bmN0aW9uIChyZ2IpIHtcblx0Y29uc3QgciA9IHJnYlswXSAvIDI1NTtcblx0Y29uc3QgZyA9IHJnYlsxXSAvIDI1NTtcblx0Y29uc3QgYiA9IHJnYlsyXSAvIDI1NTtcblxuXHRjb25zdCBrID0gTWF0aC5taW4oMSAtIHIsIDEgLSBnLCAxIC0gYik7XG5cdGNvbnN0IGMgPSAoMSAtIHIgLSBrKSAvICgxIC0gaykgfHwgMDtcblx0Y29uc3QgbSA9ICgxIC0gZyAtIGspIC8gKDEgLSBrKSB8fCAwO1xuXHRjb25zdCB5ID0gKDEgLSBiIC0gaykgLyAoMSAtIGspIHx8IDA7XG5cblx0cmV0dXJuIFtjICogMTAwLCBtICogMTAwLCB5ICogMTAwLCBrICogMTAwXTtcbn07XG5cbmZ1bmN0aW9uIGNvbXBhcmF0aXZlRGlzdGFuY2UoeCwgeSkge1xuXHQvKlxuXHRcdFNlZSBodHRwczovL2VuLm0ud2lraXBlZGlhLm9yZy93aWtpL0V1Y2xpZGVhbl9kaXN0YW5jZSNTcXVhcmVkX0V1Y2xpZGVhbl9kaXN0YW5jZVxuXHQqL1xuXHRyZXR1cm4gKFxuXHRcdCgoeFswXSAtIHlbMF0pICoqIDIpICtcblx0XHQoKHhbMV0gLSB5WzFdKSAqKiAyKSArXG5cdFx0KCh4WzJdIC0geVsyXSkgKiogMilcblx0KTtcbn1cblxuY29udmVydC5yZ2Iua2V5d29yZCA9IGZ1bmN0aW9uIChyZ2IpIHtcblx0Y29uc3QgcmV2ZXJzZWQgPSByZXZlcnNlS2V5d29yZHNbcmdiXTtcblx0aWYgKHJldmVyc2VkKSB7XG5cdFx0cmV0dXJuIHJldmVyc2VkO1xuXHR9XG5cblx0bGV0IGN1cnJlbnRDbG9zZXN0RGlzdGFuY2UgPSBJbmZpbml0eTtcblx0bGV0IGN1cnJlbnRDbG9zZXN0S2V5d29yZDtcblxuXHRmb3IgKGNvbnN0IGtleXdvcmQgb2YgT2JqZWN0LmtleXMoY3NzS2V5d29yZHMpKSB7XG5cdFx0Y29uc3QgdmFsdWUgPSBjc3NLZXl3b3Jkc1trZXl3b3JkXTtcblxuXHRcdC8vIENvbXB1dGUgY29tcGFyYXRpdmUgZGlzdGFuY2Vcblx0XHRjb25zdCBkaXN0YW5jZSA9IGNvbXBhcmF0aXZlRGlzdGFuY2UocmdiLCB2YWx1ZSk7XG5cblx0XHQvLyBDaGVjayBpZiBpdHMgbGVzcywgaWYgc28gc2V0IGFzIGNsb3Nlc3Rcblx0XHRpZiAoZGlzdGFuY2UgPCBjdXJyZW50Q2xvc2VzdERpc3RhbmNlKSB7XG5cdFx0XHRjdXJyZW50Q2xvc2VzdERpc3RhbmNlID0gZGlzdGFuY2U7XG5cdFx0XHRjdXJyZW50Q2xvc2VzdEtleXdvcmQgPSBrZXl3b3JkO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBjdXJyZW50Q2xvc2VzdEtleXdvcmQ7XG59O1xuXG5jb252ZXJ0LmtleXdvcmQucmdiID0gZnVuY3Rpb24gKGtleXdvcmQpIHtcblx0cmV0dXJuIGNzc0tleXdvcmRzW2tleXdvcmRdO1xufTtcblxuY29udmVydC5yZ2IueHl6ID0gZnVuY3Rpb24gKHJnYikge1xuXHRsZXQgciA9IHJnYlswXSAvIDI1NTtcblx0bGV0IGcgPSByZ2JbMV0gLyAyNTU7XG5cdGxldCBiID0gcmdiWzJdIC8gMjU1O1xuXG5cdC8vIEFzc3VtZSBzUkdCXG5cdHIgPSByID4gMC4wNDA0NSA/ICgoKHIgKyAwLjA1NSkgLyAxLjA1NSkgKiogMi40KSA6IChyIC8gMTIuOTIpO1xuXHRnID0gZyA+IDAuMDQwNDUgPyAoKChnICsgMC4wNTUpIC8gMS4wNTUpICoqIDIuNCkgOiAoZyAvIDEyLjkyKTtcblx0YiA9IGIgPiAwLjA0MDQ1ID8gKCgoYiArIDAuMDU1KSAvIDEuMDU1KSAqKiAyLjQpIDogKGIgLyAxMi45Mik7XG5cblx0Y29uc3QgeCA9IChyICogMC40MTI0KSArIChnICogMC4zNTc2KSArIChiICogMC4xODA1KTtcblx0Y29uc3QgeSA9IChyICogMC4yMTI2KSArIChnICogMC43MTUyKSArIChiICogMC4wNzIyKTtcblx0Y29uc3QgeiA9IChyICogMC4wMTkzKSArIChnICogMC4xMTkyKSArIChiICogMC45NTA1KTtcblxuXHRyZXR1cm4gW3ggKiAxMDAsIHkgKiAxMDAsIHogKiAxMDBdO1xufTtcblxuY29udmVydC5yZ2IubGFiID0gZnVuY3Rpb24gKHJnYikge1xuXHRjb25zdCB4eXogPSBjb252ZXJ0LnJnYi54eXoocmdiKTtcblx0bGV0IHggPSB4eXpbMF07XG5cdGxldCB5ID0geHl6WzFdO1xuXHRsZXQgeiA9IHh5elsyXTtcblxuXHR4IC89IDk1LjA0Nztcblx0eSAvPSAxMDA7XG5cdHogLz0gMTA4Ljg4MztcblxuXHR4ID0geCA+IDAuMDA4ODU2ID8gKHggKiogKDEgLyAzKSkgOiAoNy43ODcgKiB4KSArICgxNiAvIDExNik7XG5cdHkgPSB5ID4gMC4wMDg4NTYgPyAoeSAqKiAoMSAvIDMpKSA6ICg3Ljc4NyAqIHkpICsgKDE2IC8gMTE2KTtcblx0eiA9IHogPiAwLjAwODg1NiA/ICh6ICoqICgxIC8gMykpIDogKDcuNzg3ICogeikgKyAoMTYgLyAxMTYpO1xuXG5cdGNvbnN0IGwgPSAoMTE2ICogeSkgLSAxNjtcblx0Y29uc3QgYSA9IDUwMCAqICh4IC0geSk7XG5cdGNvbnN0IGIgPSAyMDAgKiAoeSAtIHopO1xuXG5cdHJldHVybiBbbCwgYSwgYl07XG59O1xuXG5jb252ZXJ0LmhzbC5yZ2IgPSBmdW5jdGlvbiAoaHNsKSB7XG5cdGNvbnN0IGggPSBoc2xbMF0gLyAzNjA7XG5cdGNvbnN0IHMgPSBoc2xbMV0gLyAxMDA7XG5cdGNvbnN0IGwgPSBoc2xbMl0gLyAxMDA7XG5cdGxldCB0Mjtcblx0bGV0IHQzO1xuXHRsZXQgdmFsO1xuXG5cdGlmIChzID09PSAwKSB7XG5cdFx0dmFsID0gbCAqIDI1NTtcblx0XHRyZXR1cm4gW3ZhbCwgdmFsLCB2YWxdO1xuXHR9XG5cblx0aWYgKGwgPCAwLjUpIHtcblx0XHR0MiA9IGwgKiAoMSArIHMpO1xuXHR9IGVsc2Uge1xuXHRcdHQyID0gbCArIHMgLSBsICogcztcblx0fVxuXG5cdGNvbnN0IHQxID0gMiAqIGwgLSB0MjtcblxuXHRjb25zdCByZ2IgPSBbMCwgMCwgMF07XG5cdGZvciAobGV0IGkgPSAwOyBpIDwgMzsgaSsrKSB7XG5cdFx0dDMgPSBoICsgMSAvIDMgKiAtKGkgLSAxKTtcblx0XHRpZiAodDMgPCAwKSB7XG5cdFx0XHR0MysrO1xuXHRcdH1cblxuXHRcdGlmICh0MyA+IDEpIHtcblx0XHRcdHQzLS07XG5cdFx0fVxuXG5cdFx0aWYgKDYgKiB0MyA8IDEpIHtcblx0XHRcdHZhbCA9IHQxICsgKHQyIC0gdDEpICogNiAqIHQzO1xuXHRcdH0gZWxzZSBpZiAoMiAqIHQzIDwgMSkge1xuXHRcdFx0dmFsID0gdDI7XG5cdFx0fSBlbHNlIGlmICgzICogdDMgPCAyKSB7XG5cdFx0XHR2YWwgPSB0MSArICh0MiAtIHQxKSAqICgyIC8gMyAtIHQzKSAqIDY7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhbCA9IHQxO1xuXHRcdH1cblxuXHRcdHJnYltpXSA9IHZhbCAqIDI1NTtcblx0fVxuXG5cdHJldHVybiByZ2I7XG59O1xuXG5jb252ZXJ0LmhzbC5oc3YgPSBmdW5jdGlvbiAoaHNsKSB7XG5cdGNvbnN0IGggPSBoc2xbMF07XG5cdGxldCBzID0gaHNsWzFdIC8gMTAwO1xuXHRsZXQgbCA9IGhzbFsyXSAvIDEwMDtcblx0bGV0IHNtaW4gPSBzO1xuXHRjb25zdCBsbWluID0gTWF0aC5tYXgobCwgMC4wMSk7XG5cblx0bCAqPSAyO1xuXHRzICo9IChsIDw9IDEpID8gbCA6IDIgLSBsO1xuXHRzbWluICo9IGxtaW4gPD0gMSA/IGxtaW4gOiAyIC0gbG1pbjtcblx0Y29uc3QgdiA9IChsICsgcykgLyAyO1xuXHRjb25zdCBzdiA9IGwgPT09IDAgPyAoMiAqIHNtaW4pIC8gKGxtaW4gKyBzbWluKSA6ICgyICogcykgLyAobCArIHMpO1xuXG5cdHJldHVybiBbaCwgc3YgKiAxMDAsIHYgKiAxMDBdO1xufTtcblxuY29udmVydC5oc3YucmdiID0gZnVuY3Rpb24gKGhzdikge1xuXHRjb25zdCBoID0gaHN2WzBdIC8gNjA7XG5cdGNvbnN0IHMgPSBoc3ZbMV0gLyAxMDA7XG5cdGxldCB2ID0gaHN2WzJdIC8gMTAwO1xuXHRjb25zdCBoaSA9IE1hdGguZmxvb3IoaCkgJSA2O1xuXG5cdGNvbnN0IGYgPSBoIC0gTWF0aC5mbG9vcihoKTtcblx0Y29uc3QgcCA9IDI1NSAqIHYgKiAoMSAtIHMpO1xuXHRjb25zdCBxID0gMjU1ICogdiAqICgxIC0gKHMgKiBmKSk7XG5cdGNvbnN0IHQgPSAyNTUgKiB2ICogKDEgLSAocyAqICgxIC0gZikpKTtcblx0diAqPSAyNTU7XG5cblx0c3dpdGNoIChoaSkge1xuXHRcdGNhc2UgMDpcblx0XHRcdHJldHVybiBbdiwgdCwgcF07XG5cdFx0Y2FzZSAxOlxuXHRcdFx0cmV0dXJuIFtxLCB2LCBwXTtcblx0XHRjYXNlIDI6XG5cdFx0XHRyZXR1cm4gW3AsIHYsIHRdO1xuXHRcdGNhc2UgMzpcblx0XHRcdHJldHVybiBbcCwgcSwgdl07XG5cdFx0Y2FzZSA0OlxuXHRcdFx0cmV0dXJuIFt0LCBwLCB2XTtcblx0XHRjYXNlIDU6XG5cdFx0XHRyZXR1cm4gW3YsIHAsIHFdO1xuXHR9XG59O1xuXG5jb252ZXJ0Lmhzdi5oc2wgPSBmdW5jdGlvbiAoaHN2KSB7XG5cdGNvbnN0IGggPSBoc3ZbMF07XG5cdGNvbnN0IHMgPSBoc3ZbMV0gLyAxMDA7XG5cdGNvbnN0IHYgPSBoc3ZbMl0gLyAxMDA7XG5cdGNvbnN0IHZtaW4gPSBNYXRoLm1heCh2LCAwLjAxKTtcblx0bGV0IHNsO1xuXHRsZXQgbDtcblxuXHRsID0gKDIgLSBzKSAqIHY7XG5cdGNvbnN0IGxtaW4gPSAoMiAtIHMpICogdm1pbjtcblx0c2wgPSBzICogdm1pbjtcblx0c2wgLz0gKGxtaW4gPD0gMSkgPyBsbWluIDogMiAtIGxtaW47XG5cdHNsID0gc2wgfHwgMDtcblx0bCAvPSAyO1xuXG5cdHJldHVybiBbaCwgc2wgKiAxMDAsIGwgKiAxMDBdO1xufTtcblxuLy8gaHR0cDovL2Rldi53My5vcmcvY3Nzd2cvY3NzLWNvbG9yLyNod2ItdG8tcmdiXG5jb252ZXJ0Lmh3Yi5yZ2IgPSBmdW5jdGlvbiAoaHdiKSB7XG5cdGNvbnN0IGggPSBod2JbMF0gLyAzNjA7XG5cdGxldCB3aCA9IGh3YlsxXSAvIDEwMDtcblx0bGV0IGJsID0gaHdiWzJdIC8gMTAwO1xuXHRjb25zdCByYXRpbyA9IHdoICsgYmw7XG5cdGxldCBmO1xuXG5cdC8vIFdoICsgYmwgY2FudCBiZSA+IDFcblx0aWYgKHJhdGlvID4gMSkge1xuXHRcdHdoIC89IHJhdGlvO1xuXHRcdGJsIC89IHJhdGlvO1xuXHR9XG5cblx0Y29uc3QgaSA9IE1hdGguZmxvb3IoNiAqIGgpO1xuXHRjb25zdCB2ID0gMSAtIGJsO1xuXHRmID0gNiAqIGggLSBpO1xuXG5cdGlmICgoaSAmIDB4MDEpICE9PSAwKSB7XG5cdFx0ZiA9IDEgLSBmO1xuXHR9XG5cblx0Y29uc3QgbiA9IHdoICsgZiAqICh2IC0gd2gpOyAvLyBMaW5lYXIgaW50ZXJwb2xhdGlvblxuXG5cdGxldCByO1xuXHRsZXQgZztcblx0bGV0IGI7XG5cdC8qIGVzbGludC1kaXNhYmxlIG1heC1zdGF0ZW1lbnRzLXBlci1saW5lLG5vLW11bHRpLXNwYWNlcyAqL1xuXHRzd2l0Y2ggKGkpIHtcblx0XHRkZWZhdWx0OlxuXHRcdGNhc2UgNjpcblx0XHRjYXNlIDA6IHIgPSB2OyAgZyA9IG47ICBiID0gd2g7IGJyZWFrO1xuXHRcdGNhc2UgMTogciA9IG47ICBnID0gdjsgIGIgPSB3aDsgYnJlYWs7XG5cdFx0Y2FzZSAyOiByID0gd2g7IGcgPSB2OyAgYiA9IG47IGJyZWFrO1xuXHRcdGNhc2UgMzogciA9IHdoOyBnID0gbjsgIGIgPSB2OyBicmVhaztcblx0XHRjYXNlIDQ6IHIgPSBuOyAgZyA9IHdoOyBiID0gdjsgYnJlYWs7XG5cdFx0Y2FzZSA1OiByID0gdjsgIGcgPSB3aDsgYiA9IG47IGJyZWFrO1xuXHR9XG5cdC8qIGVzbGludC1lbmFibGUgbWF4LXN0YXRlbWVudHMtcGVyLWxpbmUsbm8tbXVsdGktc3BhY2VzICovXG5cblx0cmV0dXJuIFtyICogMjU1LCBnICogMjU1LCBiICogMjU1XTtcbn07XG5cbmNvbnZlcnQuY215ay5yZ2IgPSBmdW5jdGlvbiAoY215aykge1xuXHRjb25zdCBjID0gY215a1swXSAvIDEwMDtcblx0Y29uc3QgbSA9IGNteWtbMV0gLyAxMDA7XG5cdGNvbnN0IHkgPSBjbXlrWzJdIC8gMTAwO1xuXHRjb25zdCBrID0gY215a1szXSAvIDEwMDtcblxuXHRjb25zdCByID0gMSAtIE1hdGgubWluKDEsIGMgKiAoMSAtIGspICsgayk7XG5cdGNvbnN0IGcgPSAxIC0gTWF0aC5taW4oMSwgbSAqICgxIC0gaykgKyBrKTtcblx0Y29uc3QgYiA9IDEgLSBNYXRoLm1pbigxLCB5ICogKDEgLSBrKSArIGspO1xuXG5cdHJldHVybiBbciAqIDI1NSwgZyAqIDI1NSwgYiAqIDI1NV07XG59O1xuXG5jb252ZXJ0Lnh5ei5yZ2IgPSBmdW5jdGlvbiAoeHl6KSB7XG5cdGNvbnN0IHggPSB4eXpbMF0gLyAxMDA7XG5cdGNvbnN0IHkgPSB4eXpbMV0gLyAxMDA7XG5cdGNvbnN0IHogPSB4eXpbMl0gLyAxMDA7XG5cdGxldCByO1xuXHRsZXQgZztcblx0bGV0IGI7XG5cblx0ciA9ICh4ICogMy4yNDA2KSArICh5ICogLTEuNTM3MikgKyAoeiAqIC0wLjQ5ODYpO1xuXHRnID0gKHggKiAtMC45Njg5KSArICh5ICogMS44NzU4KSArICh6ICogMC4wNDE1KTtcblx0YiA9ICh4ICogMC4wNTU3KSArICh5ICogLTAuMjA0MCkgKyAoeiAqIDEuMDU3MCk7XG5cblx0Ly8gQXNzdW1lIHNSR0Jcblx0ciA9IHIgPiAwLjAwMzEzMDhcblx0XHQ/ICgoMS4wNTUgKiAociAqKiAoMS4wIC8gMi40KSkpIC0gMC4wNTUpXG5cdFx0OiByICogMTIuOTI7XG5cblx0ZyA9IGcgPiAwLjAwMzEzMDhcblx0XHQ/ICgoMS4wNTUgKiAoZyAqKiAoMS4wIC8gMi40KSkpIC0gMC4wNTUpXG5cdFx0OiBnICogMTIuOTI7XG5cblx0YiA9IGIgPiAwLjAwMzEzMDhcblx0XHQ/ICgoMS4wNTUgKiAoYiAqKiAoMS4wIC8gMi40KSkpIC0gMC4wNTUpXG5cdFx0OiBiICogMTIuOTI7XG5cblx0ciA9IE1hdGgubWluKE1hdGgubWF4KDAsIHIpLCAxKTtcblx0ZyA9IE1hdGgubWluKE1hdGgubWF4KDAsIGcpLCAxKTtcblx0YiA9IE1hdGgubWluKE1hdGgubWF4KDAsIGIpLCAxKTtcblxuXHRyZXR1cm4gW3IgKiAyNTUsIGcgKiAyNTUsIGIgKiAyNTVdO1xufTtcblxuY29udmVydC54eXoubGFiID0gZnVuY3Rpb24gKHh5eikge1xuXHRsZXQgeCA9IHh5elswXTtcblx0bGV0IHkgPSB4eXpbMV07XG5cdGxldCB6ID0geHl6WzJdO1xuXG5cdHggLz0gOTUuMDQ3O1xuXHR5IC89IDEwMDtcblx0eiAvPSAxMDguODgzO1xuXG5cdHggPSB4ID4gMC4wMDg4NTYgPyAoeCAqKiAoMSAvIDMpKSA6ICg3Ljc4NyAqIHgpICsgKDE2IC8gMTE2KTtcblx0eSA9IHkgPiAwLjAwODg1NiA/ICh5ICoqICgxIC8gMykpIDogKDcuNzg3ICogeSkgKyAoMTYgLyAxMTYpO1xuXHR6ID0geiA+IDAuMDA4ODU2ID8gKHogKiogKDEgLyAzKSkgOiAoNy43ODcgKiB6KSArICgxNiAvIDExNik7XG5cblx0Y29uc3QgbCA9ICgxMTYgKiB5KSAtIDE2O1xuXHRjb25zdCBhID0gNTAwICogKHggLSB5KTtcblx0Y29uc3QgYiA9IDIwMCAqICh5IC0geik7XG5cblx0cmV0dXJuIFtsLCBhLCBiXTtcbn07XG5cbmNvbnZlcnQubGFiLnh5eiA9IGZ1bmN0aW9uIChsYWIpIHtcblx0Y29uc3QgbCA9IGxhYlswXTtcblx0Y29uc3QgYSA9IGxhYlsxXTtcblx0Y29uc3QgYiA9IGxhYlsyXTtcblx0bGV0IHg7XG5cdGxldCB5O1xuXHRsZXQgejtcblxuXHR5ID0gKGwgKyAxNikgLyAxMTY7XG5cdHggPSBhIC8gNTAwICsgeTtcblx0eiA9IHkgLSBiIC8gMjAwO1xuXG5cdGNvbnN0IHkyID0geSAqKiAzO1xuXHRjb25zdCB4MiA9IHggKiogMztcblx0Y29uc3QgejIgPSB6ICoqIDM7XG5cdHkgPSB5MiA+IDAuMDA4ODU2ID8geTIgOiAoeSAtIDE2IC8gMTE2KSAvIDcuNzg3O1xuXHR4ID0geDIgPiAwLjAwODg1NiA/IHgyIDogKHggLSAxNiAvIDExNikgLyA3Ljc4Nztcblx0eiA9IHoyID4gMC4wMDg4NTYgPyB6MiA6ICh6IC0gMTYgLyAxMTYpIC8gNy43ODc7XG5cblx0eCAqPSA5NS4wNDc7XG5cdHkgKj0gMTAwO1xuXHR6ICo9IDEwOC44ODM7XG5cblx0cmV0dXJuIFt4LCB5LCB6XTtcbn07XG5cbmNvbnZlcnQubGFiLmxjaCA9IGZ1bmN0aW9uIChsYWIpIHtcblx0Y29uc3QgbCA9IGxhYlswXTtcblx0Y29uc3QgYSA9IGxhYlsxXTtcblx0Y29uc3QgYiA9IGxhYlsyXTtcblx0bGV0IGg7XG5cblx0Y29uc3QgaHIgPSBNYXRoLmF0YW4yKGIsIGEpO1xuXHRoID0gaHIgKiAzNjAgLyAyIC8gTWF0aC5QSTtcblxuXHRpZiAoaCA8IDApIHtcblx0XHRoICs9IDM2MDtcblx0fVxuXG5cdGNvbnN0IGMgPSBNYXRoLnNxcnQoYSAqIGEgKyBiICogYik7XG5cblx0cmV0dXJuIFtsLCBjLCBoXTtcbn07XG5cbmNvbnZlcnQubGNoLmxhYiA9IGZ1bmN0aW9uIChsY2gpIHtcblx0Y29uc3QgbCA9IGxjaFswXTtcblx0Y29uc3QgYyA9IGxjaFsxXTtcblx0Y29uc3QgaCA9IGxjaFsyXTtcblxuXHRjb25zdCBociA9IGggLyAzNjAgKiAyICogTWF0aC5QSTtcblx0Y29uc3QgYSA9IGMgKiBNYXRoLmNvcyhocik7XG5cdGNvbnN0IGIgPSBjICogTWF0aC5zaW4oaHIpO1xuXG5cdHJldHVybiBbbCwgYSwgYl07XG59O1xuXG5jb252ZXJ0LnJnYi5hbnNpMTYgPSBmdW5jdGlvbiAoYXJncywgc2F0dXJhdGlvbiA9IG51bGwpIHtcblx0Y29uc3QgW3IsIGcsIGJdID0gYXJncztcblx0bGV0IHZhbHVlID0gc2F0dXJhdGlvbiA9PT0gbnVsbCA/IGNvbnZlcnQucmdiLmhzdihhcmdzKVsyXSA6IHNhdHVyYXRpb247IC8vIEhzdiAtPiBhbnNpMTYgb3B0aW1pemF0aW9uXG5cblx0dmFsdWUgPSBNYXRoLnJvdW5kKHZhbHVlIC8gNTApO1xuXG5cdGlmICh2YWx1ZSA9PT0gMCkge1xuXHRcdHJldHVybiAzMDtcblx0fVxuXG5cdGxldCBhbnNpID0gMzBcblx0XHQrICgoTWF0aC5yb3VuZChiIC8gMjU1KSA8PCAyKVxuXHRcdHwgKE1hdGgucm91bmQoZyAvIDI1NSkgPDwgMSlcblx0XHR8IE1hdGgucm91bmQociAvIDI1NSkpO1xuXG5cdGlmICh2YWx1ZSA9PT0gMikge1xuXHRcdGFuc2kgKz0gNjA7XG5cdH1cblxuXHRyZXR1cm4gYW5zaTtcbn07XG5cbmNvbnZlcnQuaHN2LmFuc2kxNiA9IGZ1bmN0aW9uIChhcmdzKSB7XG5cdC8vIE9wdGltaXphdGlvbiBoZXJlOyB3ZSBhbHJlYWR5IGtub3cgdGhlIHZhbHVlIGFuZCBkb24ndCBuZWVkIHRvIGdldFxuXHQvLyBpdCBjb252ZXJ0ZWQgZm9yIHVzLlxuXHRyZXR1cm4gY29udmVydC5yZ2IuYW5zaTE2KGNvbnZlcnQuaHN2LnJnYihhcmdzKSwgYXJnc1syXSk7XG59O1xuXG5jb252ZXJ0LnJnYi5hbnNpMjU2ID0gZnVuY3Rpb24gKGFyZ3MpIHtcblx0Y29uc3QgciA9IGFyZ3NbMF07XG5cdGNvbnN0IGcgPSBhcmdzWzFdO1xuXHRjb25zdCBiID0gYXJnc1syXTtcblxuXHQvLyBXZSB1c2UgdGhlIGV4dGVuZGVkIGdyZXlzY2FsZSBwYWxldHRlIGhlcmUsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZlxuXHQvLyBibGFjayBhbmQgd2hpdGUuIG5vcm1hbCBwYWxldHRlIG9ubHkgaGFzIDQgZ3JleXNjYWxlIHNoYWRlcy5cblx0aWYgKHIgPT09IGcgJiYgZyA9PT0gYikge1xuXHRcdGlmIChyIDwgOCkge1xuXHRcdFx0cmV0dXJuIDE2O1xuXHRcdH1cblxuXHRcdGlmIChyID4gMjQ4KSB7XG5cdFx0XHRyZXR1cm4gMjMxO1xuXHRcdH1cblxuXHRcdHJldHVybiBNYXRoLnJvdW5kKCgociAtIDgpIC8gMjQ3KSAqIDI0KSArIDIzMjtcblx0fVxuXG5cdGNvbnN0IGFuc2kgPSAxNlxuXHRcdCsgKDM2ICogTWF0aC5yb3VuZChyIC8gMjU1ICogNSkpXG5cdFx0KyAoNiAqIE1hdGgucm91bmQoZyAvIDI1NSAqIDUpKVxuXHRcdCsgTWF0aC5yb3VuZChiIC8gMjU1ICogNSk7XG5cblx0cmV0dXJuIGFuc2k7XG59O1xuXG5jb252ZXJ0LmFuc2kxNi5yZ2IgPSBmdW5jdGlvbiAoYXJncykge1xuXHRsZXQgY29sb3IgPSBhcmdzICUgMTA7XG5cblx0Ly8gSGFuZGxlIGdyZXlzY2FsZVxuXHRpZiAoY29sb3IgPT09IDAgfHwgY29sb3IgPT09IDcpIHtcblx0XHRpZiAoYXJncyA+IDUwKSB7XG5cdFx0XHRjb2xvciArPSAzLjU7XG5cdFx0fVxuXG5cdFx0Y29sb3IgPSBjb2xvciAvIDEwLjUgKiAyNTU7XG5cblx0XHRyZXR1cm4gW2NvbG9yLCBjb2xvciwgY29sb3JdO1xuXHR9XG5cblx0Y29uc3QgbXVsdCA9ICh+fihhcmdzID4gNTApICsgMSkgKiAwLjU7XG5cdGNvbnN0IHIgPSAoKGNvbG9yICYgMSkgKiBtdWx0KSAqIDI1NTtcblx0Y29uc3QgZyA9ICgoKGNvbG9yID4+IDEpICYgMSkgKiBtdWx0KSAqIDI1NTtcblx0Y29uc3QgYiA9ICgoKGNvbG9yID4+IDIpICYgMSkgKiBtdWx0KSAqIDI1NTtcblxuXHRyZXR1cm4gW3IsIGcsIGJdO1xufTtcblxuY29udmVydC5hbnNpMjU2LnJnYiA9IGZ1bmN0aW9uIChhcmdzKSB7XG5cdC8vIEhhbmRsZSBncmV5c2NhbGVcblx0aWYgKGFyZ3MgPj0gMjMyKSB7XG5cdFx0Y29uc3QgYyA9IChhcmdzIC0gMjMyKSAqIDEwICsgODtcblx0XHRyZXR1cm4gW2MsIGMsIGNdO1xuXHR9XG5cblx0YXJncyAtPSAxNjtcblxuXHRsZXQgcmVtO1xuXHRjb25zdCByID0gTWF0aC5mbG9vcihhcmdzIC8gMzYpIC8gNSAqIDI1NTtcblx0Y29uc3QgZyA9IE1hdGguZmxvb3IoKHJlbSA9IGFyZ3MgJSAzNikgLyA2KSAvIDUgKiAyNTU7XG5cdGNvbnN0IGIgPSAocmVtICUgNikgLyA1ICogMjU1O1xuXG5cdHJldHVybiBbciwgZywgYl07XG59O1xuXG5jb252ZXJ0LnJnYi5oZXggPSBmdW5jdGlvbiAoYXJncykge1xuXHRjb25zdCBpbnRlZ2VyID0gKChNYXRoLnJvdW5kKGFyZ3NbMF0pICYgMHhGRikgPDwgMTYpXG5cdFx0KyAoKE1hdGgucm91bmQoYXJnc1sxXSkgJiAweEZGKSA8PCA4KVxuXHRcdCsgKE1hdGgucm91bmQoYXJnc1syXSkgJiAweEZGKTtcblxuXHRjb25zdCBzdHJpbmcgPSBpbnRlZ2VyLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuXHRyZXR1cm4gJzAwMDAwMCcuc3Vic3RyaW5nKHN0cmluZy5sZW5ndGgpICsgc3RyaW5nO1xufTtcblxuY29udmVydC5oZXgucmdiID0gZnVuY3Rpb24gKGFyZ3MpIHtcblx0Y29uc3QgbWF0Y2ggPSBhcmdzLnRvU3RyaW5nKDE2KS5tYXRjaCgvW2EtZjAtOV17Nn18W2EtZjAtOV17M30vaSk7XG5cdGlmICghbWF0Y2gpIHtcblx0XHRyZXR1cm4gWzAsIDAsIDBdO1xuXHR9XG5cblx0bGV0IGNvbG9yU3RyaW5nID0gbWF0Y2hbMF07XG5cblx0aWYgKG1hdGNoWzBdLmxlbmd0aCA9PT0gMykge1xuXHRcdGNvbG9yU3RyaW5nID0gY29sb3JTdHJpbmcuc3BsaXQoJycpLm1hcChjaGFyID0+IHtcblx0XHRcdHJldHVybiBjaGFyICsgY2hhcjtcblx0XHR9KS5qb2luKCcnKTtcblx0fVxuXG5cdGNvbnN0IGludGVnZXIgPSBwYXJzZUludChjb2xvclN0cmluZywgMTYpO1xuXHRjb25zdCByID0gKGludGVnZXIgPj4gMTYpICYgMHhGRjtcblx0Y29uc3QgZyA9IChpbnRlZ2VyID4+IDgpICYgMHhGRjtcblx0Y29uc3QgYiA9IGludGVnZXIgJiAweEZGO1xuXG5cdHJldHVybiBbciwgZywgYl07XG59O1xuXG5jb252ZXJ0LnJnYi5oY2cgPSBmdW5jdGlvbiAocmdiKSB7XG5cdGNvbnN0IHIgPSByZ2JbMF0gLyAyNTU7XG5cdGNvbnN0IGcgPSByZ2JbMV0gLyAyNTU7XG5cdGNvbnN0IGIgPSByZ2JbMl0gLyAyNTU7XG5cdGNvbnN0IG1heCA9IE1hdGgubWF4KE1hdGgubWF4KHIsIGcpLCBiKTtcblx0Y29uc3QgbWluID0gTWF0aC5taW4oTWF0aC5taW4ociwgZyksIGIpO1xuXHRjb25zdCBjaHJvbWEgPSAobWF4IC0gbWluKTtcblx0bGV0IGdyYXlzY2FsZTtcblx0bGV0IGh1ZTtcblxuXHRpZiAoY2hyb21hIDwgMSkge1xuXHRcdGdyYXlzY2FsZSA9IG1pbiAvICgxIC0gY2hyb21hKTtcblx0fSBlbHNlIHtcblx0XHRncmF5c2NhbGUgPSAwO1xuXHR9XG5cblx0aWYgKGNocm9tYSA8PSAwKSB7XG5cdFx0aHVlID0gMDtcblx0fSBlbHNlXG5cdGlmIChtYXggPT09IHIpIHtcblx0XHRodWUgPSAoKGcgLSBiKSAvIGNocm9tYSkgJSA2O1xuXHR9IGVsc2Vcblx0aWYgKG1heCA9PT0gZykge1xuXHRcdGh1ZSA9IDIgKyAoYiAtIHIpIC8gY2hyb21hO1xuXHR9IGVsc2Uge1xuXHRcdGh1ZSA9IDQgKyAociAtIGcpIC8gY2hyb21hO1xuXHR9XG5cblx0aHVlIC89IDY7XG5cdGh1ZSAlPSAxO1xuXG5cdHJldHVybiBbaHVlICogMzYwLCBjaHJvbWEgKiAxMDAsIGdyYXlzY2FsZSAqIDEwMF07XG59O1xuXG5jb252ZXJ0LmhzbC5oY2cgPSBmdW5jdGlvbiAoaHNsKSB7XG5cdGNvbnN0IHMgPSBoc2xbMV0gLyAxMDA7XG5cdGNvbnN0IGwgPSBoc2xbMl0gLyAxMDA7XG5cblx0Y29uc3QgYyA9IGwgPCAwLjUgPyAoMi4wICogcyAqIGwpIDogKDIuMCAqIHMgKiAoMS4wIC0gbCkpO1xuXG5cdGxldCBmID0gMDtcblx0aWYgKGMgPCAxLjApIHtcblx0XHRmID0gKGwgLSAwLjUgKiBjKSAvICgxLjAgLSBjKTtcblx0fVxuXG5cdHJldHVybiBbaHNsWzBdLCBjICogMTAwLCBmICogMTAwXTtcbn07XG5cbmNvbnZlcnQuaHN2LmhjZyA9IGZ1bmN0aW9uIChoc3YpIHtcblx0Y29uc3QgcyA9IGhzdlsxXSAvIDEwMDtcblx0Y29uc3QgdiA9IGhzdlsyXSAvIDEwMDtcblxuXHRjb25zdCBjID0gcyAqIHY7XG5cdGxldCBmID0gMDtcblxuXHRpZiAoYyA8IDEuMCkge1xuXHRcdGYgPSAodiAtIGMpIC8gKDEgLSBjKTtcblx0fVxuXG5cdHJldHVybiBbaHN2WzBdLCBjICogMTAwLCBmICogMTAwXTtcbn07XG5cbmNvbnZlcnQuaGNnLnJnYiA9IGZ1bmN0aW9uIChoY2cpIHtcblx0Y29uc3QgaCA9IGhjZ1swXSAvIDM2MDtcblx0Y29uc3QgYyA9IGhjZ1sxXSAvIDEwMDtcblx0Y29uc3QgZyA9IGhjZ1syXSAvIDEwMDtcblxuXHRpZiAoYyA9PT0gMC4wKSB7XG5cdFx0cmV0dXJuIFtnICogMjU1LCBnICogMjU1LCBnICogMjU1XTtcblx0fVxuXG5cdGNvbnN0IHB1cmUgPSBbMCwgMCwgMF07XG5cdGNvbnN0IGhpID0gKGggJSAxKSAqIDY7XG5cdGNvbnN0IHYgPSBoaSAlIDE7XG5cdGNvbnN0IHcgPSAxIC0gdjtcblx0bGV0IG1nID0gMDtcblxuXHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtc3RhdGVtZW50cy1wZXItbGluZSAqL1xuXHRzd2l0Y2ggKE1hdGguZmxvb3IoaGkpKSB7XG5cdFx0Y2FzZSAwOlxuXHRcdFx0cHVyZVswXSA9IDE7IHB1cmVbMV0gPSB2OyBwdXJlWzJdID0gMDsgYnJlYWs7XG5cdFx0Y2FzZSAxOlxuXHRcdFx0cHVyZVswXSA9IHc7IHB1cmVbMV0gPSAxOyBwdXJlWzJdID0gMDsgYnJlYWs7XG5cdFx0Y2FzZSAyOlxuXHRcdFx0cHVyZVswXSA9IDA7IHB1cmVbMV0gPSAxOyBwdXJlWzJdID0gdjsgYnJlYWs7XG5cdFx0Y2FzZSAzOlxuXHRcdFx0cHVyZVswXSA9IDA7IHB1cmVbMV0gPSB3OyBwdXJlWzJdID0gMTsgYnJlYWs7XG5cdFx0Y2FzZSA0OlxuXHRcdFx0cHVyZVswXSA9IHY7IHB1cmVbMV0gPSAwOyBwdXJlWzJdID0gMTsgYnJlYWs7XG5cdFx0ZGVmYXVsdDpcblx0XHRcdHB1cmVbMF0gPSAxOyBwdXJlWzFdID0gMDsgcHVyZVsyXSA9IHc7XG5cdH1cblx0LyogZXNsaW50LWVuYWJsZSBtYXgtc3RhdGVtZW50cy1wZXItbGluZSAqL1xuXG5cdG1nID0gKDEuMCAtIGMpICogZztcblxuXHRyZXR1cm4gW1xuXHRcdChjICogcHVyZVswXSArIG1nKSAqIDI1NSxcblx0XHQoYyAqIHB1cmVbMV0gKyBtZykgKiAyNTUsXG5cdFx0KGMgKiBwdXJlWzJdICsgbWcpICogMjU1XG5cdF07XG59O1xuXG5jb252ZXJ0LmhjZy5oc3YgPSBmdW5jdGlvbiAoaGNnKSB7XG5cdGNvbnN0IGMgPSBoY2dbMV0gLyAxMDA7XG5cdGNvbnN0IGcgPSBoY2dbMl0gLyAxMDA7XG5cblx0Y29uc3QgdiA9IGMgKyBnICogKDEuMCAtIGMpO1xuXHRsZXQgZiA9IDA7XG5cblx0aWYgKHYgPiAwLjApIHtcblx0XHRmID0gYyAvIHY7XG5cdH1cblxuXHRyZXR1cm4gW2hjZ1swXSwgZiAqIDEwMCwgdiAqIDEwMF07XG59O1xuXG5jb252ZXJ0LmhjZy5oc2wgPSBmdW5jdGlvbiAoaGNnKSB7XG5cdGNvbnN0IGMgPSBoY2dbMV0gLyAxMDA7XG5cdGNvbnN0IGcgPSBoY2dbMl0gLyAxMDA7XG5cblx0Y29uc3QgbCA9IGcgKiAoMS4wIC0gYykgKyAwLjUgKiBjO1xuXHRsZXQgcyA9IDA7XG5cblx0aWYgKGwgPiAwLjAgJiYgbCA8IDAuNSkge1xuXHRcdHMgPSBjIC8gKDIgKiBsKTtcblx0fSBlbHNlXG5cdGlmIChsID49IDAuNSAmJiBsIDwgMS4wKSB7XG5cdFx0cyA9IGMgLyAoMiAqICgxIC0gbCkpO1xuXHR9XG5cblx0cmV0dXJuIFtoY2dbMF0sIHMgKiAxMDAsIGwgKiAxMDBdO1xufTtcblxuY29udmVydC5oY2cuaHdiID0gZnVuY3Rpb24gKGhjZykge1xuXHRjb25zdCBjID0gaGNnWzFdIC8gMTAwO1xuXHRjb25zdCBnID0gaGNnWzJdIC8gMTAwO1xuXHRjb25zdCB2ID0gYyArIGcgKiAoMS4wIC0gYyk7XG5cdHJldHVybiBbaGNnWzBdLCAodiAtIGMpICogMTAwLCAoMSAtIHYpICogMTAwXTtcbn07XG5cbmNvbnZlcnQuaHdiLmhjZyA9IGZ1bmN0aW9uIChod2IpIHtcblx0Y29uc3QgdyA9IGh3YlsxXSAvIDEwMDtcblx0Y29uc3QgYiA9IGh3YlsyXSAvIDEwMDtcblx0Y29uc3QgdiA9IDEgLSBiO1xuXHRjb25zdCBjID0gdiAtIHc7XG5cdGxldCBnID0gMDtcblxuXHRpZiAoYyA8IDEpIHtcblx0XHRnID0gKHYgLSBjKSAvICgxIC0gYyk7XG5cdH1cblxuXHRyZXR1cm4gW2h3YlswXSwgYyAqIDEwMCwgZyAqIDEwMF07XG59O1xuXG5jb252ZXJ0LmFwcGxlLnJnYiA9IGZ1bmN0aW9uIChhcHBsZSkge1xuXHRyZXR1cm4gWyhhcHBsZVswXSAvIDY1NTM1KSAqIDI1NSwgKGFwcGxlWzFdIC8gNjU1MzUpICogMjU1LCAoYXBwbGVbMl0gLyA2NTUzNSkgKiAyNTVdO1xufTtcblxuY29udmVydC5yZ2IuYXBwbGUgPSBmdW5jdGlvbiAocmdiKSB7XG5cdHJldHVybiBbKHJnYlswXSAvIDI1NSkgKiA2NTUzNSwgKHJnYlsxXSAvIDI1NSkgKiA2NTUzNSwgKHJnYlsyXSAvIDI1NSkgKiA2NTUzNV07XG59O1xuXG5jb252ZXJ0LmdyYXkucmdiID0gZnVuY3Rpb24gKGFyZ3MpIHtcblx0cmV0dXJuIFthcmdzWzBdIC8gMTAwICogMjU1LCBhcmdzWzBdIC8gMTAwICogMjU1LCBhcmdzWzBdIC8gMTAwICogMjU1XTtcbn07XG5cbmNvbnZlcnQuZ3JheS5oc2wgPSBmdW5jdGlvbiAoYXJncykge1xuXHRyZXR1cm4gWzAsIDAsIGFyZ3NbMF1dO1xufTtcblxuY29udmVydC5ncmF5LmhzdiA9IGNvbnZlcnQuZ3JheS5oc2w7XG5cbmNvbnZlcnQuZ3JheS5od2IgPSBmdW5jdGlvbiAoZ3JheSkge1xuXHRyZXR1cm4gWzAsIDEwMCwgZ3JheVswXV07XG59O1xuXG5jb252ZXJ0LmdyYXkuY215ayA9IGZ1bmN0aW9uIChncmF5KSB7XG5cdHJldHVybiBbMCwgMCwgMCwgZ3JheVswXV07XG59O1xuXG5jb252ZXJ0LmdyYXkubGFiID0gZnVuY3Rpb24gKGdyYXkpIHtcblx0cmV0dXJuIFtncmF5WzBdLCAwLCAwXTtcbn07XG5cbmNvbnZlcnQuZ3JheS5oZXggPSBmdW5jdGlvbiAoZ3JheSkge1xuXHRjb25zdCB2YWwgPSBNYXRoLnJvdW5kKGdyYXlbMF0gLyAxMDAgKiAyNTUpICYgMHhGRjtcblx0Y29uc3QgaW50ZWdlciA9ICh2YWwgPDwgMTYpICsgKHZhbCA8PCA4KSArIHZhbDtcblxuXHRjb25zdCBzdHJpbmcgPSBpbnRlZ2VyLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuXHRyZXR1cm4gJzAwMDAwMCcuc3Vic3RyaW5nKHN0cmluZy5sZW5ndGgpICsgc3RyaW5nO1xufTtcblxuY29udmVydC5yZ2IuZ3JheSA9IGZ1bmN0aW9uIChyZ2IpIHtcblx0Y29uc3QgdmFsID0gKHJnYlswXSArIHJnYlsxXSArIHJnYlsyXSkgLyAzO1xuXHRyZXR1cm4gW3ZhbCAvIDI1NSAqIDEwMF07XG59O1xuIiwiY29uc3QgY29udmVyc2lvbnMgPSByZXF1aXJlKCcuL2NvbnZlcnNpb25zJyk7XG5jb25zdCByb3V0ZSA9IHJlcXVpcmUoJy4vcm91dGUnKTtcblxuY29uc3QgY29udmVydCA9IHt9O1xuXG5jb25zdCBtb2RlbHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9ucyk7XG5cbmZ1bmN0aW9uIHdyYXBSYXcoZm4pIHtcblx0Y29uc3Qgd3JhcHBlZEZuID0gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcblx0XHRjb25zdCBhcmcwID0gYXJnc1swXTtcblx0XHRpZiAoYXJnMCA9PT0gdW5kZWZpbmVkIHx8IGFyZzAgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBhcmcwO1xuXHRcdH1cblxuXHRcdGlmIChhcmcwLmxlbmd0aCA+IDEpIHtcblx0XHRcdGFyZ3MgPSBhcmcwO1xuXHRcdH1cblxuXHRcdHJldHVybiBmbihhcmdzKTtcblx0fTtcblxuXHQvLyBQcmVzZXJ2ZSAuY29udmVyc2lvbiBwcm9wZXJ0eSBpZiB0aGVyZSBpcyBvbmVcblx0aWYgKCdjb252ZXJzaW9uJyBpbiBmbikge1xuXHRcdHdyYXBwZWRGbi5jb252ZXJzaW9uID0gZm4uY29udmVyc2lvbjtcblx0fVxuXG5cdHJldHVybiB3cmFwcGVkRm47XG59XG5cbmZ1bmN0aW9uIHdyYXBSb3VuZGVkKGZuKSB7XG5cdGNvbnN0IHdyYXBwZWRGbiA9IGZ1bmN0aW9uICguLi5hcmdzKSB7XG5cdFx0Y29uc3QgYXJnMCA9IGFyZ3NbMF07XG5cblx0XHRpZiAoYXJnMCA9PT0gdW5kZWZpbmVkIHx8IGFyZzAgPT09IG51bGwpIHtcblx0XHRcdHJldHVybiBhcmcwO1xuXHRcdH1cblxuXHRcdGlmIChhcmcwLmxlbmd0aCA+IDEpIHtcblx0XHRcdGFyZ3MgPSBhcmcwO1xuXHRcdH1cblxuXHRcdGNvbnN0IHJlc3VsdCA9IGZuKGFyZ3MpO1xuXG5cdFx0Ly8gV2UncmUgYXNzdW1pbmcgdGhlIHJlc3VsdCBpcyBhbiBhcnJheSBoZXJlLlxuXHRcdC8vIHNlZSBub3RpY2UgaW4gY29udmVyc2lvbnMuanM7IGRvbid0IHVzZSBib3ggdHlwZXNcblx0XHQvLyBpbiBjb252ZXJzaW9uIGZ1bmN0aW9ucy5cblx0XHRpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ29iamVjdCcpIHtcblx0XHRcdGZvciAobGV0IGxlbiA9IHJlc3VsdC5sZW5ndGgsIGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcblx0XHRcdFx0cmVzdWx0W2ldID0gTWF0aC5yb3VuZChyZXN1bHRbaV0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXN1bHQ7XG5cdH07XG5cblx0Ly8gUHJlc2VydmUgLmNvbnZlcnNpb24gcHJvcGVydHkgaWYgdGhlcmUgaXMgb25lXG5cdGlmICgnY29udmVyc2lvbicgaW4gZm4pIHtcblx0XHR3cmFwcGVkRm4uY29udmVyc2lvbiA9IGZuLmNvbnZlcnNpb247XG5cdH1cblxuXHRyZXR1cm4gd3JhcHBlZEZuO1xufVxuXG5tb2RlbHMuZm9yRWFjaChmcm9tTW9kZWwgPT4ge1xuXHRjb252ZXJ0W2Zyb21Nb2RlbF0gPSB7fTtcblxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoY29udmVydFtmcm9tTW9kZWxdLCAnY2hhbm5lbHMnLCB7dmFsdWU6IGNvbnZlcnNpb25zW2Zyb21Nb2RlbF0uY2hhbm5lbHN9KTtcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGNvbnZlcnRbZnJvbU1vZGVsXSwgJ2xhYmVscycsIHt2YWx1ZTogY29udmVyc2lvbnNbZnJvbU1vZGVsXS5sYWJlbHN9KTtcblxuXHRjb25zdCByb3V0ZXMgPSByb3V0ZShmcm9tTW9kZWwpO1xuXHRjb25zdCByb3V0ZU1vZGVscyA9IE9iamVjdC5rZXlzKHJvdXRlcyk7XG5cblx0cm91dGVNb2RlbHMuZm9yRWFjaCh0b01vZGVsID0+IHtcblx0XHRjb25zdCBmbiA9IHJvdXRlc1t0b01vZGVsXTtcblxuXHRcdGNvbnZlcnRbZnJvbU1vZGVsXVt0b01vZGVsXSA9IHdyYXBSb3VuZGVkKGZuKTtcblx0XHRjb252ZXJ0W2Zyb21Nb2RlbF1bdG9Nb2RlbF0ucmF3ID0gd3JhcFJhdyhmbik7XG5cdH0pO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gY29udmVydDtcbiIsImNvbnN0IGNvbnZlcnNpb25zID0gcmVxdWlyZSgnLi9jb252ZXJzaW9ucycpO1xuXG4vKlxuXHRUaGlzIGZ1bmN0aW9uIHJvdXRlcyBhIG1vZGVsIHRvIGFsbCBvdGhlciBtb2RlbHMuXG5cblx0YWxsIGZ1bmN0aW9ucyB0aGF0IGFyZSByb3V0ZWQgaGF2ZSBhIHByb3BlcnR5IGAuY29udmVyc2lvbmAgYXR0YWNoZWRcblx0dG8gdGhlIHJldHVybmVkIHN5bnRoZXRpYyBmdW5jdGlvbi4gVGhpcyBwcm9wZXJ0eSBpcyBhbiBhcnJheVxuXHRvZiBzdHJpbmdzLCBlYWNoIHdpdGggdGhlIHN0ZXBzIGluIGJldHdlZW4gdGhlICdmcm9tJyBhbmQgJ3RvJ1xuXHRjb2xvciBtb2RlbHMgKGluY2x1c2l2ZSkuXG5cblx0Y29udmVyc2lvbnMgdGhhdCBhcmUgbm90IHBvc3NpYmxlIHNpbXBseSBhcmUgbm90IGluY2x1ZGVkLlxuKi9cblxuZnVuY3Rpb24gYnVpbGRHcmFwaCgpIHtcblx0Y29uc3QgZ3JhcGggPSB7fTtcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL29iamVjdC1rZXlzLXZzLWZvci1pbi13aXRoLWNsb3N1cmUvM1xuXHRjb25zdCBtb2RlbHMgPSBPYmplY3Qua2V5cyhjb252ZXJzaW9ucyk7XG5cblx0Zm9yIChsZXQgbGVuID0gbW9kZWxzLmxlbmd0aCwgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHRcdGdyYXBoW21vZGVsc1tpXV0gPSB7XG5cdFx0XHQvLyBodHRwOi8vanNwZXJmLmNvbS8xLXZzLWluZmluaXR5XG5cdFx0XHQvLyBtaWNyby1vcHQsIGJ1dCB0aGlzIGlzIHNpbXBsZS5cblx0XHRcdGRpc3RhbmNlOiAtMSxcblx0XHRcdHBhcmVudDogbnVsbFxuXHRcdH07XG5cdH1cblxuXHRyZXR1cm4gZ3JhcGg7XG59XG5cbi8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0JyZWFkdGgtZmlyc3Rfc2VhcmNoXG5mdW5jdGlvbiBkZXJpdmVCRlMoZnJvbU1vZGVsKSB7XG5cdGNvbnN0IGdyYXBoID0gYnVpbGRHcmFwaCgpO1xuXHRjb25zdCBxdWV1ZSA9IFtmcm9tTW9kZWxdOyAvLyBVbnNoaWZ0IC0+IHF1ZXVlIC0+IHBvcFxuXG5cdGdyYXBoW2Zyb21Nb2RlbF0uZGlzdGFuY2UgPSAwO1xuXG5cdHdoaWxlIChxdWV1ZS5sZW5ndGgpIHtcblx0XHRjb25zdCBjdXJyZW50ID0gcXVldWUucG9wKCk7XG5cdFx0Y29uc3QgYWRqYWNlbnRzID0gT2JqZWN0LmtleXMoY29udmVyc2lvbnNbY3VycmVudF0pO1xuXG5cdFx0Zm9yIChsZXQgbGVuID0gYWRqYWNlbnRzLmxlbmd0aCwgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuXHRcdFx0Y29uc3QgYWRqYWNlbnQgPSBhZGphY2VudHNbaV07XG5cdFx0XHRjb25zdCBub2RlID0gZ3JhcGhbYWRqYWNlbnRdO1xuXG5cdFx0XHRpZiAobm9kZS5kaXN0YW5jZSA9PT0gLTEpIHtcblx0XHRcdFx0bm9kZS5kaXN0YW5jZSA9IGdyYXBoW2N1cnJlbnRdLmRpc3RhbmNlICsgMTtcblx0XHRcdFx0bm9kZS5wYXJlbnQgPSBjdXJyZW50O1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KGFkamFjZW50KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZ3JhcGg7XG59XG5cbmZ1bmN0aW9uIGxpbmsoZnJvbSwgdG8pIHtcblx0cmV0dXJuIGZ1bmN0aW9uIChhcmdzKSB7XG5cdFx0cmV0dXJuIHRvKGZyb20oYXJncykpO1xuXHR9O1xufVxuXG5mdW5jdGlvbiB3cmFwQ29udmVyc2lvbih0b01vZGVsLCBncmFwaCkge1xuXHRjb25zdCBwYXRoID0gW2dyYXBoW3RvTW9kZWxdLnBhcmVudCwgdG9Nb2RlbF07XG5cdGxldCBmbiA9IGNvbnZlcnNpb25zW2dyYXBoW3RvTW9kZWxdLnBhcmVudF1bdG9Nb2RlbF07XG5cblx0bGV0IGN1ciA9IGdyYXBoW3RvTW9kZWxdLnBhcmVudDtcblx0d2hpbGUgKGdyYXBoW2N1cl0ucGFyZW50KSB7XG5cdFx0cGF0aC51bnNoaWZ0KGdyYXBoW2N1cl0ucGFyZW50KTtcblx0XHRmbiA9IGxpbmsoY29udmVyc2lvbnNbZ3JhcGhbY3VyXS5wYXJlbnRdW2N1cl0sIGZuKTtcblx0XHRjdXIgPSBncmFwaFtjdXJdLnBhcmVudDtcblx0fVxuXG5cdGZuLmNvbnZlcnNpb24gPSBwYXRoO1xuXHRyZXR1cm4gZm47XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZyb21Nb2RlbCkge1xuXHRjb25zdCBncmFwaCA9IGRlcml2ZUJGUyhmcm9tTW9kZWwpO1xuXHRjb25zdCBjb252ZXJzaW9uID0ge307XG5cblx0Y29uc3QgbW9kZWxzID0gT2JqZWN0LmtleXMoZ3JhcGgpO1xuXHRmb3IgKGxldCBsZW4gPSBtb2RlbHMubGVuZ3RoLCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0Y29uc3QgdG9Nb2RlbCA9IG1vZGVsc1tpXTtcblx0XHRjb25zdCBub2RlID0gZ3JhcGhbdG9Nb2RlbF07XG5cblx0XHRpZiAobm9kZS5wYXJlbnQgPT09IG51bGwpIHtcblx0XHRcdC8vIE5vIHBvc3NpYmxlIGNvbnZlcnNpb24sIG9yIHRoaXMgbm9kZSBpcyB0aGUgc291cmNlIG1vZGVsLlxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y29udmVyc2lvblt0b01vZGVsXSA9IHdyYXBDb252ZXJzaW9uKHRvTW9kZWwsIGdyYXBoKTtcblx0fVxuXG5cdHJldHVybiBjb252ZXJzaW9uO1xufTtcblxuIiwiJ3VzZSBzdHJpY3QnXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuXHRcImFsaWNlYmx1ZVwiOiBbMjQwLCAyNDgsIDI1NV0sXHJcblx0XCJhbnRpcXVld2hpdGVcIjogWzI1MCwgMjM1LCAyMTVdLFxyXG5cdFwiYXF1YVwiOiBbMCwgMjU1LCAyNTVdLFxyXG5cdFwiYXF1YW1hcmluZVwiOiBbMTI3LCAyNTUsIDIxMl0sXHJcblx0XCJhenVyZVwiOiBbMjQwLCAyNTUsIDI1NV0sXHJcblx0XCJiZWlnZVwiOiBbMjQ1LCAyNDUsIDIyMF0sXHJcblx0XCJiaXNxdWVcIjogWzI1NSwgMjI4LCAxOTZdLFxyXG5cdFwiYmxhY2tcIjogWzAsIDAsIDBdLFxyXG5cdFwiYmxhbmNoZWRhbG1vbmRcIjogWzI1NSwgMjM1LCAyMDVdLFxyXG5cdFwiYmx1ZVwiOiBbMCwgMCwgMjU1XSxcclxuXHRcImJsdWV2aW9sZXRcIjogWzEzOCwgNDMsIDIyNl0sXHJcblx0XCJicm93blwiOiBbMTY1LCA0MiwgNDJdLFxyXG5cdFwiYnVybHl3b29kXCI6IFsyMjIsIDE4NCwgMTM1XSxcclxuXHRcImNhZGV0Ymx1ZVwiOiBbOTUsIDE1OCwgMTYwXSxcclxuXHRcImNoYXJ0cmV1c2VcIjogWzEyNywgMjU1LCAwXSxcclxuXHRcImNob2NvbGF0ZVwiOiBbMjEwLCAxMDUsIDMwXSxcclxuXHRcImNvcmFsXCI6IFsyNTUsIDEyNywgODBdLFxyXG5cdFwiY29ybmZsb3dlcmJsdWVcIjogWzEwMCwgMTQ5LCAyMzddLFxyXG5cdFwiY29ybnNpbGtcIjogWzI1NSwgMjQ4LCAyMjBdLFxyXG5cdFwiY3JpbXNvblwiOiBbMjIwLCAyMCwgNjBdLFxyXG5cdFwiY3lhblwiOiBbMCwgMjU1LCAyNTVdLFxyXG5cdFwiZGFya2JsdWVcIjogWzAsIDAsIDEzOV0sXHJcblx0XCJkYXJrY3lhblwiOiBbMCwgMTM5LCAxMzldLFxyXG5cdFwiZGFya2dvbGRlbnJvZFwiOiBbMTg0LCAxMzQsIDExXSxcclxuXHRcImRhcmtncmF5XCI6IFsxNjksIDE2OSwgMTY5XSxcclxuXHRcImRhcmtncmVlblwiOiBbMCwgMTAwLCAwXSxcclxuXHRcImRhcmtncmV5XCI6IFsxNjksIDE2OSwgMTY5XSxcclxuXHRcImRhcmtraGFraVwiOiBbMTg5LCAxODMsIDEwN10sXHJcblx0XCJkYXJrbWFnZW50YVwiOiBbMTM5LCAwLCAxMzldLFxyXG5cdFwiZGFya29saXZlZ3JlZW5cIjogWzg1LCAxMDcsIDQ3XSxcclxuXHRcImRhcmtvcmFuZ2VcIjogWzI1NSwgMTQwLCAwXSxcclxuXHRcImRhcmtvcmNoaWRcIjogWzE1MywgNTAsIDIwNF0sXHJcblx0XCJkYXJrcmVkXCI6IFsxMzksIDAsIDBdLFxyXG5cdFwiZGFya3NhbG1vblwiOiBbMjMzLCAxNTAsIDEyMl0sXHJcblx0XCJkYXJrc2VhZ3JlZW5cIjogWzE0MywgMTg4LCAxNDNdLFxyXG5cdFwiZGFya3NsYXRlYmx1ZVwiOiBbNzIsIDYxLCAxMzldLFxyXG5cdFwiZGFya3NsYXRlZ3JheVwiOiBbNDcsIDc5LCA3OV0sXHJcblx0XCJkYXJrc2xhdGVncmV5XCI6IFs0NywgNzksIDc5XSxcclxuXHRcImRhcmt0dXJxdW9pc2VcIjogWzAsIDIwNiwgMjA5XSxcclxuXHRcImRhcmt2aW9sZXRcIjogWzE0OCwgMCwgMjExXSxcclxuXHRcImRlZXBwaW5rXCI6IFsyNTUsIDIwLCAxNDddLFxyXG5cdFwiZGVlcHNreWJsdWVcIjogWzAsIDE5MSwgMjU1XSxcclxuXHRcImRpbWdyYXlcIjogWzEwNSwgMTA1LCAxMDVdLFxyXG5cdFwiZGltZ3JleVwiOiBbMTA1LCAxMDUsIDEwNV0sXHJcblx0XCJkb2RnZXJibHVlXCI6IFszMCwgMTQ0LCAyNTVdLFxyXG5cdFwiZmlyZWJyaWNrXCI6IFsxNzgsIDM0LCAzNF0sXHJcblx0XCJmbG9yYWx3aGl0ZVwiOiBbMjU1LCAyNTAsIDI0MF0sXHJcblx0XCJmb3Jlc3RncmVlblwiOiBbMzQsIDEzOSwgMzRdLFxyXG5cdFwiZnVjaHNpYVwiOiBbMjU1LCAwLCAyNTVdLFxyXG5cdFwiZ2FpbnNib3JvXCI6IFsyMjAsIDIyMCwgMjIwXSxcclxuXHRcImdob3N0d2hpdGVcIjogWzI0OCwgMjQ4LCAyNTVdLFxyXG5cdFwiZ29sZFwiOiBbMjU1LCAyMTUsIDBdLFxyXG5cdFwiZ29sZGVucm9kXCI6IFsyMTgsIDE2NSwgMzJdLFxyXG5cdFwiZ3JheVwiOiBbMTI4LCAxMjgsIDEyOF0sXHJcblx0XCJncmVlblwiOiBbMCwgMTI4LCAwXSxcclxuXHRcImdyZWVueWVsbG93XCI6IFsxNzMsIDI1NSwgNDddLFxyXG5cdFwiZ3JleVwiOiBbMTI4LCAxMjgsIDEyOF0sXHJcblx0XCJob25leWRld1wiOiBbMjQwLCAyNTUsIDI0MF0sXHJcblx0XCJob3RwaW5rXCI6IFsyNTUsIDEwNSwgMTgwXSxcclxuXHRcImluZGlhbnJlZFwiOiBbMjA1LCA5MiwgOTJdLFxyXG5cdFwiaW5kaWdvXCI6IFs3NSwgMCwgMTMwXSxcclxuXHRcIml2b3J5XCI6IFsyNTUsIDI1NSwgMjQwXSxcclxuXHRcImtoYWtpXCI6IFsyNDAsIDIzMCwgMTQwXSxcclxuXHRcImxhdmVuZGVyXCI6IFsyMzAsIDIzMCwgMjUwXSxcclxuXHRcImxhdmVuZGVyYmx1c2hcIjogWzI1NSwgMjQwLCAyNDVdLFxyXG5cdFwibGF3bmdyZWVuXCI6IFsxMjQsIDI1MiwgMF0sXHJcblx0XCJsZW1vbmNoaWZmb25cIjogWzI1NSwgMjUwLCAyMDVdLFxyXG5cdFwibGlnaHRibHVlXCI6IFsxNzMsIDIxNiwgMjMwXSxcclxuXHRcImxpZ2h0Y29yYWxcIjogWzI0MCwgMTI4LCAxMjhdLFxyXG5cdFwibGlnaHRjeWFuXCI6IFsyMjQsIDI1NSwgMjU1XSxcclxuXHRcImxpZ2h0Z29sZGVucm9keWVsbG93XCI6IFsyNTAsIDI1MCwgMjEwXSxcclxuXHRcImxpZ2h0Z3JheVwiOiBbMjExLCAyMTEsIDIxMV0sXHJcblx0XCJsaWdodGdyZWVuXCI6IFsxNDQsIDIzOCwgMTQ0XSxcclxuXHRcImxpZ2h0Z3JleVwiOiBbMjExLCAyMTEsIDIxMV0sXHJcblx0XCJsaWdodHBpbmtcIjogWzI1NSwgMTgyLCAxOTNdLFxyXG5cdFwibGlnaHRzYWxtb25cIjogWzI1NSwgMTYwLCAxMjJdLFxyXG5cdFwibGlnaHRzZWFncmVlblwiOiBbMzIsIDE3OCwgMTcwXSxcclxuXHRcImxpZ2h0c2t5Ymx1ZVwiOiBbMTM1LCAyMDYsIDI1MF0sXHJcblx0XCJsaWdodHNsYXRlZ3JheVwiOiBbMTE5LCAxMzYsIDE1M10sXHJcblx0XCJsaWdodHNsYXRlZ3JleVwiOiBbMTE5LCAxMzYsIDE1M10sXHJcblx0XCJsaWdodHN0ZWVsYmx1ZVwiOiBbMTc2LCAxOTYsIDIyMl0sXHJcblx0XCJsaWdodHllbGxvd1wiOiBbMjU1LCAyNTUsIDIyNF0sXHJcblx0XCJsaW1lXCI6IFswLCAyNTUsIDBdLFxyXG5cdFwibGltZWdyZWVuXCI6IFs1MCwgMjA1LCA1MF0sXHJcblx0XCJsaW5lblwiOiBbMjUwLCAyNDAsIDIzMF0sXHJcblx0XCJtYWdlbnRhXCI6IFsyNTUsIDAsIDI1NV0sXHJcblx0XCJtYXJvb25cIjogWzEyOCwgMCwgMF0sXHJcblx0XCJtZWRpdW1hcXVhbWFyaW5lXCI6IFsxMDIsIDIwNSwgMTcwXSxcclxuXHRcIm1lZGl1bWJsdWVcIjogWzAsIDAsIDIwNV0sXHJcblx0XCJtZWRpdW1vcmNoaWRcIjogWzE4NiwgODUsIDIxMV0sXHJcblx0XCJtZWRpdW1wdXJwbGVcIjogWzE0NywgMTEyLCAyMTldLFxyXG5cdFwibWVkaXVtc2VhZ3JlZW5cIjogWzYwLCAxNzksIDExM10sXHJcblx0XCJtZWRpdW1zbGF0ZWJsdWVcIjogWzEyMywgMTA0LCAyMzhdLFxyXG5cdFwibWVkaXVtc3ByaW5nZ3JlZW5cIjogWzAsIDI1MCwgMTU0XSxcclxuXHRcIm1lZGl1bXR1cnF1b2lzZVwiOiBbNzIsIDIwOSwgMjA0XSxcclxuXHRcIm1lZGl1bXZpb2xldHJlZFwiOiBbMTk5LCAyMSwgMTMzXSxcclxuXHRcIm1pZG5pZ2h0Ymx1ZVwiOiBbMjUsIDI1LCAxMTJdLFxyXG5cdFwibWludGNyZWFtXCI6IFsyNDUsIDI1NSwgMjUwXSxcclxuXHRcIm1pc3R5cm9zZVwiOiBbMjU1LCAyMjgsIDIyNV0sXHJcblx0XCJtb2NjYXNpblwiOiBbMjU1LCAyMjgsIDE4MV0sXHJcblx0XCJuYXZham93aGl0ZVwiOiBbMjU1LCAyMjIsIDE3M10sXHJcblx0XCJuYXZ5XCI6IFswLCAwLCAxMjhdLFxyXG5cdFwib2xkbGFjZVwiOiBbMjUzLCAyNDUsIDIzMF0sXHJcblx0XCJvbGl2ZVwiOiBbMTI4LCAxMjgsIDBdLFxyXG5cdFwib2xpdmVkcmFiXCI6IFsxMDcsIDE0MiwgMzVdLFxyXG5cdFwib3JhbmdlXCI6IFsyNTUsIDE2NSwgMF0sXHJcblx0XCJvcmFuZ2VyZWRcIjogWzI1NSwgNjksIDBdLFxyXG5cdFwib3JjaGlkXCI6IFsyMTgsIDExMiwgMjE0XSxcclxuXHRcInBhbGVnb2xkZW5yb2RcIjogWzIzOCwgMjMyLCAxNzBdLFxyXG5cdFwicGFsZWdyZWVuXCI6IFsxNTIsIDI1MSwgMTUyXSxcclxuXHRcInBhbGV0dXJxdW9pc2VcIjogWzE3NSwgMjM4LCAyMzhdLFxyXG5cdFwicGFsZXZpb2xldHJlZFwiOiBbMjE5LCAxMTIsIDE0N10sXHJcblx0XCJwYXBheWF3aGlwXCI6IFsyNTUsIDIzOSwgMjEzXSxcclxuXHRcInBlYWNocHVmZlwiOiBbMjU1LCAyMTgsIDE4NV0sXHJcblx0XCJwZXJ1XCI6IFsyMDUsIDEzMywgNjNdLFxyXG5cdFwicGlua1wiOiBbMjU1LCAxOTIsIDIwM10sXHJcblx0XCJwbHVtXCI6IFsyMjEsIDE2MCwgMjIxXSxcclxuXHRcInBvd2RlcmJsdWVcIjogWzE3NiwgMjI0LCAyMzBdLFxyXG5cdFwicHVycGxlXCI6IFsxMjgsIDAsIDEyOF0sXHJcblx0XCJyZWJlY2NhcHVycGxlXCI6IFsxMDIsIDUxLCAxNTNdLFxyXG5cdFwicmVkXCI6IFsyNTUsIDAsIDBdLFxyXG5cdFwicm9zeWJyb3duXCI6IFsxODgsIDE0MywgMTQzXSxcclxuXHRcInJveWFsYmx1ZVwiOiBbNjUsIDEwNSwgMjI1XSxcclxuXHRcInNhZGRsZWJyb3duXCI6IFsxMzksIDY5LCAxOV0sXHJcblx0XCJzYWxtb25cIjogWzI1MCwgMTI4LCAxMTRdLFxyXG5cdFwic2FuZHlicm93blwiOiBbMjQ0LCAxNjQsIDk2XSxcclxuXHRcInNlYWdyZWVuXCI6IFs0NiwgMTM5LCA4N10sXHJcblx0XCJzZWFzaGVsbFwiOiBbMjU1LCAyNDUsIDIzOF0sXHJcblx0XCJzaWVubmFcIjogWzE2MCwgODIsIDQ1XSxcclxuXHRcInNpbHZlclwiOiBbMTkyLCAxOTIsIDE5Ml0sXHJcblx0XCJza3libHVlXCI6IFsxMzUsIDIwNiwgMjM1XSxcclxuXHRcInNsYXRlYmx1ZVwiOiBbMTA2LCA5MCwgMjA1XSxcclxuXHRcInNsYXRlZ3JheVwiOiBbMTEyLCAxMjgsIDE0NF0sXHJcblx0XCJzbGF0ZWdyZXlcIjogWzExMiwgMTI4LCAxNDRdLFxyXG5cdFwic25vd1wiOiBbMjU1LCAyNTAsIDI1MF0sXHJcblx0XCJzcHJpbmdncmVlblwiOiBbMCwgMjU1LCAxMjddLFxyXG5cdFwic3RlZWxibHVlXCI6IFs3MCwgMTMwLCAxODBdLFxyXG5cdFwidGFuXCI6IFsyMTAsIDE4MCwgMTQwXSxcclxuXHRcInRlYWxcIjogWzAsIDEyOCwgMTI4XSxcclxuXHRcInRoaXN0bGVcIjogWzIxNiwgMTkxLCAyMTZdLFxyXG5cdFwidG9tYXRvXCI6IFsyNTUsIDk5LCA3MV0sXHJcblx0XCJ0dXJxdW9pc2VcIjogWzY0LCAyMjQsIDIwOF0sXHJcblx0XCJ2aW9sZXRcIjogWzIzOCwgMTMwLCAyMzhdLFxyXG5cdFwid2hlYXRcIjogWzI0NSwgMjIyLCAxNzldLFxyXG5cdFwid2hpdGVcIjogWzI1NSwgMjU1LCAyNTVdLFxyXG5cdFwid2hpdGVzbW9rZVwiOiBbMjQ1LCAyNDUsIDI0NV0sXHJcblx0XCJ5ZWxsb3dcIjogWzI1NSwgMjU1LCAwXSxcclxuXHRcInllbGxvd2dyZWVuXCI6IFsxNTQsIDIwNSwgNTBdXHJcbn07XHJcbiIsInZhciB0cmltbWVkRW5kSW5kZXggPSByZXF1aXJlKCcuL190cmltbWVkRW5kSW5kZXgnKTtcblxuLyoqIFVzZWQgdG8gbWF0Y2ggbGVhZGluZyB3aGl0ZXNwYWNlLiAqL1xudmFyIHJlVHJpbVN0YXJ0ID0gL15cXHMrLztcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50cmltYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBUaGUgc3RyaW5nIHRvIHRyaW0uXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSB0cmltbWVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRyaW0oc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmdcbiAgICA/IHN0cmluZy5zbGljZSgwLCB0cmltbWVkRW5kSW5kZXgoc3RyaW5nKSArIDEpLnJlcGxhY2UocmVUcmltU3RhcnQsICcnKVxuICAgIDogc3RyaW5nO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VUcmltO1xuIiwiLyoqIFVzZWQgdG8gbWF0Y2ggYSBzaW5nbGUgd2hpdGVzcGFjZSBjaGFyYWN0ZXIuICovXG52YXIgcmVXaGl0ZXNwYWNlID0gL1xccy87XG5cbi8qKlxuICogVXNlZCBieSBgXy50cmltYCBhbmQgYF8udHJpbUVuZGAgdG8gZ2V0IHRoZSBpbmRleCBvZiB0aGUgbGFzdCBub24td2hpdGVzcGFjZVxuICogY2hhcmFjdGVyIG9mIGBzdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBsYXN0IG5vbi13aGl0ZXNwYWNlIGNoYXJhY3Rlci5cbiAqL1xuZnVuY3Rpb24gdHJpbW1lZEVuZEluZGV4KHN0cmluZykge1xuICB2YXIgaW5kZXggPSBzdHJpbmcubGVuZ3RoO1xuXG4gIHdoaWxlIChpbmRleC0tICYmIHJlV2hpdGVzcGFjZS50ZXN0KHN0cmluZy5jaGFyQXQoaW5kZXgpKSkge31cbiAgcmV0dXJuIGluZGV4O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRyaW1tZWRFbmRJbmRleDtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKSxcbiAgICBub3cgPSByZXF1aXJlKCcuL25vdycpLFxuICAgIHRvTnVtYmVyID0gcmVxdWlyZSgnLi90b051bWJlcicpO1xuXG4vKiogRXJyb3IgbWVzc2FnZSBjb25zdGFudHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlTWF4ID0gTWF0aC5tYXgsXG4gICAgbmF0aXZlTWluID0gTWF0aC5taW47XG5cbi8qKlxuICogQ3JlYXRlcyBhIGRlYm91bmNlZCBmdW5jdGlvbiB0aGF0IGRlbGF5cyBpbnZva2luZyBgZnVuY2AgdW50aWwgYWZ0ZXIgYHdhaXRgXG4gKiBtaWxsaXNlY29uZHMgaGF2ZSBlbGFwc2VkIHNpbmNlIHRoZSBsYXN0IHRpbWUgdGhlIGRlYm91bmNlZCBmdW5jdGlvbiB3YXNcbiAqIGludm9rZWQuIFRoZSBkZWJvdW5jZWQgZnVuY3Rpb24gY29tZXMgd2l0aCBhIGBjYW5jZWxgIG1ldGhvZCB0byBjYW5jZWxcbiAqIGRlbGF5ZWQgYGZ1bmNgIGludm9jYXRpb25zIGFuZCBhIGBmbHVzaGAgbWV0aG9kIHRvIGltbWVkaWF0ZWx5IGludm9rZSB0aGVtLlxuICogUHJvdmlkZSBgb3B0aW9uc2AgdG8gaW5kaWNhdGUgd2hldGhlciBgZnVuY2Agc2hvdWxkIGJlIGludm9rZWQgb24gdGhlXG4gKiBsZWFkaW5nIGFuZC9vciB0cmFpbGluZyBlZGdlIG9mIHRoZSBgd2FpdGAgdGltZW91dC4gVGhlIGBmdW5jYCBpcyBpbnZva2VkXG4gKiB3aXRoIHRoZSBsYXN0IGFyZ3VtZW50cyBwcm92aWRlZCB0byB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uLiBTdWJzZXF1ZW50XG4gKiBjYWxscyB0byB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIHJldHVybiB0aGUgcmVzdWx0IG9mIHRoZSBsYXN0IGBmdW5jYFxuICogaW52b2NhdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogSWYgYGxlYWRpbmdgIGFuZCBgdHJhaWxpbmdgIG9wdGlvbnMgYXJlIGB0cnVlYCwgYGZ1bmNgIGlzXG4gKiBpbnZva2VkIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0IG9ubHkgaWYgdGhlIGRlYm91bmNlZCBmdW5jdGlvblxuICogaXMgaW52b2tlZCBtb3JlIHRoYW4gb25jZSBkdXJpbmcgdGhlIGB3YWl0YCB0aW1lb3V0LlxuICpcbiAqIElmIGB3YWl0YCBpcyBgMGAgYW5kIGBsZWFkaW5nYCBpcyBgZmFsc2VgLCBgZnVuY2AgaW52b2NhdGlvbiBpcyBkZWZlcnJlZFxuICogdW50aWwgdG8gdGhlIG5leHQgdGljaywgc2ltaWxhciB0byBgc2V0VGltZW91dGAgd2l0aCBhIHRpbWVvdXQgb2YgYDBgLlxuICpcbiAqIFNlZSBbRGF2aWQgQ29yYmFjaG8ncyBhcnRpY2xlXShodHRwczovL2Nzcy10cmlja3MuY29tL2RlYm91bmNpbmctdGhyb3R0bGluZy1leHBsYWluZWQtZXhhbXBsZXMvKVxuICogZm9yIGRldGFpbHMgb3ZlciB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiBgXy5kZWJvdW5jZWAgYW5kIGBfLnRocm90dGxlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgRnVuY3Rpb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRlYm91bmNlLlxuICogQHBhcmFtIHtudW1iZXJ9IFt3YWl0PTBdIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGRlbGF5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmxlYWRpbmc9ZmFsc2VdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1heFdhaXRdXG4gKiAgVGhlIG1heGltdW0gdGltZSBgZnVuY2AgaXMgYWxsb3dlZCB0byBiZSBkZWxheWVkIGJlZm9yZSBpdCdzIGludm9rZWQuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnRyYWlsaW5nPXRydWVdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgdHJhaWxpbmcgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGRlYm91bmNlZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogLy8gQXZvaWQgY29zdGx5IGNhbGN1bGF0aW9ucyB3aGlsZSB0aGUgd2luZG93IHNpemUgaXMgaW4gZmx1eC5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdyZXNpemUnLCBfLmRlYm91bmNlKGNhbGN1bGF0ZUxheW91dCwgMTUwKSk7XG4gKlxuICogLy8gSW52b2tlIGBzZW5kTWFpbGAgd2hlbiBjbGlja2VkLCBkZWJvdW5jaW5nIHN1YnNlcXVlbnQgY2FsbHMuXG4gKiBqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgXy5kZWJvdW5jZShzZW5kTWFpbCwgMzAwLCB7XG4gKiAgICdsZWFkaW5nJzogdHJ1ZSxcbiAqICAgJ3RyYWlsaW5nJzogZmFsc2VcbiAqIH0pKTtcbiAqXG4gKiAvLyBFbnN1cmUgYGJhdGNoTG9nYCBpcyBpbnZva2VkIG9uY2UgYWZ0ZXIgMSBzZWNvbmQgb2YgZGVib3VuY2VkIGNhbGxzLlxuICogdmFyIGRlYm91bmNlZCA9IF8uZGVib3VuY2UoYmF0Y2hMb2csIDI1MCwgeyAnbWF4V2FpdCc6IDEwMDAgfSk7XG4gKiB2YXIgc291cmNlID0gbmV3IEV2ZW50U291cmNlKCcvc3RyZWFtJyk7XG4gKiBqUXVlcnkoc291cmNlKS5vbignbWVzc2FnZScsIGRlYm91bmNlZCk7XG4gKlxuICogLy8gQ2FuY2VsIHRoZSB0cmFpbGluZyBkZWJvdW5jZWQgaW52b2NhdGlvbi5cbiAqIGpRdWVyeSh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIGRlYm91bmNlZC5jYW5jZWwpO1xuICovXG5mdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gIHZhciBsYXN0QXJncyxcbiAgICAgIGxhc3RUaGlzLFxuICAgICAgbWF4V2FpdCxcbiAgICAgIHJlc3VsdCxcbiAgICAgIHRpbWVySWQsXG4gICAgICBsYXN0Q2FsbFRpbWUsXG4gICAgICBsYXN0SW52b2tlVGltZSA9IDAsXG4gICAgICBsZWFkaW5nID0gZmFsc2UsXG4gICAgICBtYXhpbmcgPSBmYWxzZSxcbiAgICAgIHRyYWlsaW5nID0gdHJ1ZTtcblxuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgfVxuICB3YWl0ID0gdG9OdW1iZXIod2FpdCkgfHwgMDtcbiAgaWYgKGlzT2JqZWN0KG9wdGlvbnMpKSB7XG4gICAgbGVhZGluZyA9ICEhb3B0aW9ucy5sZWFkaW5nO1xuICAgIG1heGluZyA9ICdtYXhXYWl0JyBpbiBvcHRpb25zO1xuICAgIG1heFdhaXQgPSBtYXhpbmcgPyBuYXRpdmVNYXgodG9OdW1iZXIob3B0aW9ucy5tYXhXYWl0KSB8fCAwLCB3YWl0KSA6IG1heFdhaXQ7XG4gICAgdHJhaWxpbmcgPSAndHJhaWxpbmcnIGluIG9wdGlvbnMgPyAhIW9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgfVxuXG4gIGZ1bmN0aW9uIGludm9rZUZ1bmModGltZSkge1xuICAgIHZhciBhcmdzID0gbGFzdEFyZ3MsXG4gICAgICAgIHRoaXNBcmcgPSBsYXN0VGhpcztcblxuICAgIGxhc3RBcmdzID0gbGFzdFRoaXMgPSB1bmRlZmluZWQ7XG4gICAgbGFzdEludm9rZVRpbWUgPSB0aW1lO1xuICAgIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxlYWRpbmdFZGdlKHRpbWUpIHtcbiAgICAvLyBSZXNldCBhbnkgYG1heFdhaXRgIHRpbWVyLlxuICAgIGxhc3RJbnZva2VUaW1lID0gdGltZTtcbiAgICAvLyBTdGFydCB0aGUgdGltZXIgZm9yIHRoZSB0cmFpbGluZyBlZGdlLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCk7XG4gICAgLy8gSW52b2tlIHRoZSBsZWFkaW5nIGVkZ2UuXG4gICAgcmV0dXJuIGxlYWRpbmcgPyBpbnZva2VGdW5jKHRpbWUpIDogcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gcmVtYWluaW5nV2FpdCh0aW1lKSB7XG4gICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSxcbiAgICAgICAgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZSxcbiAgICAgICAgdGltZVdhaXRpbmcgPSB3YWl0IC0gdGltZVNpbmNlTGFzdENhbGw7XG5cbiAgICByZXR1cm4gbWF4aW5nXG4gICAgICA/IG5hdGl2ZU1pbih0aW1lV2FpdGluZywgbWF4V2FpdCAtIHRpbWVTaW5jZUxhc3RJbnZva2UpXG4gICAgICA6IHRpbWVXYWl0aW5nO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvdWxkSW52b2tlKHRpbWUpIHtcbiAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLFxuICAgICAgICB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lO1xuXG4gICAgLy8gRWl0aGVyIHRoaXMgaXMgdGhlIGZpcnN0IGNhbGwsIGFjdGl2aXR5IGhhcyBzdG9wcGVkIGFuZCB3ZSdyZSBhdCB0aGVcbiAgICAvLyB0cmFpbGluZyBlZGdlLCB0aGUgc3lzdGVtIHRpbWUgaGFzIGdvbmUgYmFja3dhcmRzIGFuZCB3ZSdyZSB0cmVhdGluZ1xuICAgIC8vIGl0IGFzIHRoZSB0cmFpbGluZyBlZGdlLCBvciB3ZSd2ZSBoaXQgdGhlIGBtYXhXYWl0YCBsaW1pdC5cbiAgICByZXR1cm4gKGxhc3RDYWxsVGltZSA9PT0gdW5kZWZpbmVkIHx8ICh0aW1lU2luY2VMYXN0Q2FsbCA+PSB3YWl0KSB8fFxuICAgICAgKHRpbWVTaW5jZUxhc3RDYWxsIDwgMCkgfHwgKG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHRpbWVyRXhwaXJlZCgpIHtcbiAgICB2YXIgdGltZSA9IG5vdygpO1xuICAgIGlmIChzaG91bGRJbnZva2UodGltZSkpIHtcbiAgICAgIHJldHVybiB0cmFpbGluZ0VkZ2UodGltZSk7XG4gICAgfVxuICAgIC8vIFJlc3RhcnQgdGhlIHRpbWVyLlxuICAgIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgcmVtYWluaW5nV2FpdCh0aW1lKSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cmFpbGluZ0VkZ2UodGltZSkge1xuICAgIHRpbWVySWQgPSB1bmRlZmluZWQ7XG5cbiAgICAvLyBPbmx5IGludm9rZSBpZiB3ZSBoYXZlIGBsYXN0QXJnc2Agd2hpY2ggbWVhbnMgYGZ1bmNgIGhhcyBiZWVuXG4gICAgLy8gZGVib3VuY2VkIGF0IGxlYXN0IG9uY2UuXG4gICAgaWYgKHRyYWlsaW5nICYmIGxhc3RBcmdzKSB7XG4gICAgICByZXR1cm4gaW52b2tlRnVuYyh0aW1lKTtcbiAgICB9XG4gICAgbGFzdEFyZ3MgPSBsYXN0VGhpcyA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuY2VsKCkge1xuICAgIGlmICh0aW1lcklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICB9XG4gICAgbGFzdEludm9rZVRpbWUgPSAwO1xuICAgIGxhc3RBcmdzID0gbGFzdENhbGxUaW1lID0gbGFzdFRoaXMgPSB0aW1lcklkID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgcmV0dXJuIHRpbWVySWQgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IHRyYWlsaW5nRWRnZShub3coKSk7XG4gIH1cblxuICBmdW5jdGlvbiBkZWJvdW5jZWQoKSB7XG4gICAgdmFyIHRpbWUgPSBub3coKSxcbiAgICAgICAgaXNJbnZva2luZyA9IHNob3VsZEludm9rZSh0aW1lKTtcblxuICAgIGxhc3RBcmdzID0gYXJndW1lbnRzO1xuICAgIGxhc3RUaGlzID0gdGhpcztcbiAgICBsYXN0Q2FsbFRpbWUgPSB0aW1lO1xuXG4gICAgaWYgKGlzSW52b2tpbmcpIHtcbiAgICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGxlYWRpbmdFZGdlKGxhc3RDYWxsVGltZSk7XG4gICAgICB9XG4gICAgICBpZiAobWF4aW5nKSB7XG4gICAgICAgIC8vIEhhbmRsZSBpbnZvY2F0aW9ucyBpbiBhIHRpZ2h0IGxvb3AuXG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lcklkKTtcbiAgICAgICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICAgICAgcmV0dXJuIGludm9rZUZ1bmMobGFzdENhbGxUaW1lKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHRpbWVySWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCB3YWl0KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBkZWJvdW5jZWQuY2FuY2VsID0gY2FuY2VsO1xuICBkZWJvdW5jZWQuZmx1c2ggPSBmbHVzaDtcbiAgcmV0dXJuIGRlYm91bmNlZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZWJvdW5jZTtcbiIsInZhciByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKipcbiAqIEdldHMgdGhlIHRpbWVzdGFtcCBvZiB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0aGF0IGhhdmUgZWxhcHNlZCBzaW5jZVxuICogdGhlIFVuaXggZXBvY2ggKDEgSmFudWFyeSAxOTcwIDAwOjAwOjAwIFVUQykuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAyLjQuMFxuICogQGNhdGVnb3J5IERhdGVcbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHRpbWVzdGFtcC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5kZWZlcihmdW5jdGlvbihzdGFtcCkge1xuICogICBjb25zb2xlLmxvZyhfLm5vdygpIC0gc3RhbXApO1xuICogfSwgXy5ub3coKSk7XG4gKiAvLyA9PiBMb2dzIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIGl0IHRvb2sgZm9yIHRoZSBkZWZlcnJlZCBpbnZvY2F0aW9uLlxuICovXG52YXIgbm93ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiByb290LkRhdGUubm93KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5vdztcbiIsInZhciBkZWJvdW5jZSA9IHJlcXVpcmUoJy4vZGVib3VuY2UnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqIEVycm9yIG1lc3NhZ2UgY29uc3RhbnRzLiAqL1xudmFyIEZVTkNfRVJST1JfVEVYVCA9ICdFeHBlY3RlZCBhIGZ1bmN0aW9uJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgdGhyb3R0bGVkIGZ1bmN0aW9uIHRoYXQgb25seSBpbnZva2VzIGBmdW5jYCBhdCBtb3N0IG9uY2UgcGVyXG4gKiBldmVyeSBgd2FpdGAgbWlsbGlzZWNvbmRzLiBUaGUgdGhyb3R0bGVkIGZ1bmN0aW9uIGNvbWVzIHdpdGggYSBgY2FuY2VsYFxuICogbWV0aG9kIHRvIGNhbmNlbCBkZWxheWVkIGBmdW5jYCBpbnZvY2F0aW9ucyBhbmQgYSBgZmx1c2hgIG1ldGhvZCB0b1xuICogaW1tZWRpYXRlbHkgaW52b2tlIHRoZW0uIFByb3ZpZGUgYG9wdGlvbnNgIHRvIGluZGljYXRlIHdoZXRoZXIgYGZ1bmNgXG4gKiBzaG91bGQgYmUgaW52b2tlZCBvbiB0aGUgbGVhZGluZyBhbmQvb3IgdHJhaWxpbmcgZWRnZSBvZiB0aGUgYHdhaXRgXG4gKiB0aW1lb3V0LiBUaGUgYGZ1bmNgIGlzIGludm9rZWQgd2l0aCB0aGUgbGFzdCBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlXG4gKiB0aHJvdHRsZWQgZnVuY3Rpb24uIFN1YnNlcXVlbnQgY2FsbHMgdG8gdGhlIHRocm90dGxlZCBmdW5jdGlvbiByZXR1cm4gdGhlXG4gKiByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgIGludm9jYXRpb24uXG4gKlxuICogKipOb3RlOioqIElmIGBsZWFkaW5nYCBhbmQgYHRyYWlsaW5nYCBvcHRpb25zIGFyZSBgdHJ1ZWAsIGBmdW5jYCBpc1xuICogaW52b2tlZCBvbiB0aGUgdHJhaWxpbmcgZWRnZSBvZiB0aGUgdGltZW91dCBvbmx5IGlmIHRoZSB0aHJvdHRsZWQgZnVuY3Rpb25cbiAqIGlzIGludm9rZWQgbW9yZSB0aGFuIG9uY2UgZHVyaW5nIHRoZSBgd2FpdGAgdGltZW91dC5cbiAqXG4gKiBJZiBgd2FpdGAgaXMgYDBgIGFuZCBgbGVhZGluZ2AgaXMgYGZhbHNlYCwgYGZ1bmNgIGludm9jYXRpb24gaXMgZGVmZXJyZWRcbiAqIHVudGlsIHRvIHRoZSBuZXh0IHRpY2ssIHNpbWlsYXIgdG8gYHNldFRpbWVvdXRgIHdpdGggYSB0aW1lb3V0IG9mIGAwYC5cbiAqXG4gKiBTZWUgW0RhdmlkIENvcmJhY2hvJ3MgYXJ0aWNsZV0oaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9kZWJvdW5jaW5nLXRocm90dGxpbmctZXhwbGFpbmVkLWV4YW1wbGVzLylcbiAqIGZvciBkZXRhaWxzIG92ZXIgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gYF8udGhyb3R0bGVgIGFuZCBgXy5kZWJvdW5jZWAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB0aHJvdHRsZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbd2FpdD0wXSBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB0aHJvdHRsZSBpbnZvY2F0aW9ucyB0by5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gVGhlIG9wdGlvbnMgb2JqZWN0LlxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5sZWFkaW5nPXRydWVdXG4gKiAgU3BlY2lmeSBpbnZva2luZyBvbiB0aGUgbGVhZGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy50cmFpbGluZz10cnVlXVxuICogIFNwZWNpZnkgaW52b2tpbmcgb24gdGhlIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIHRpbWVvdXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyB0aHJvdHRsZWQgZnVuY3Rpb24uXG4gKiBAZXhhbXBsZVxuICpcbiAqIC8vIEF2b2lkIGV4Y2Vzc2l2ZWx5IHVwZGF0aW5nIHRoZSBwb3NpdGlvbiB3aGlsZSBzY3JvbGxpbmcuXG4gKiBqUXVlcnkod2luZG93KS5vbignc2Nyb2xsJywgXy50aHJvdHRsZSh1cGRhdGVQb3NpdGlvbiwgMTAwKSk7XG4gKlxuICogLy8gSW52b2tlIGByZW5ld1Rva2VuYCB3aGVuIHRoZSBjbGljayBldmVudCBpcyBmaXJlZCwgYnV0IG5vdCBtb3JlIHRoYW4gb25jZSBldmVyeSA1IG1pbnV0ZXMuXG4gKiB2YXIgdGhyb3R0bGVkID0gXy50aHJvdHRsZShyZW5ld1Rva2VuLCAzMDAwMDAsIHsgJ3RyYWlsaW5nJzogZmFsc2UgfSk7XG4gKiBqUXVlcnkoZWxlbWVudCkub24oJ2NsaWNrJywgdGhyb3R0bGVkKTtcbiAqXG4gKiAvLyBDYW5jZWwgdGhlIHRyYWlsaW5nIHRocm90dGxlZCBpbnZvY2F0aW9uLlxuICogalF1ZXJ5KHdpbmRvdykub24oJ3BvcHN0YXRlJywgdGhyb3R0bGVkLmNhbmNlbCk7XG4gKi9cbmZ1bmN0aW9uIHRocm90dGxlKGZ1bmMsIHdhaXQsIG9wdGlvbnMpIHtcbiAgdmFyIGxlYWRpbmcgPSB0cnVlLFxuICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gIGlmICh0eXBlb2YgZnVuYyAhPSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIGlmIChpc09iamVjdChvcHRpb25zKSkge1xuICAgIGxlYWRpbmcgPSAnbGVhZGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy5sZWFkaW5nIDogbGVhZGluZztcbiAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nO1xuICB9XG4gIHJldHVybiBkZWJvdW5jZShmdW5jLCB3YWl0LCB7XG4gICAgJ2xlYWRpbmcnOiBsZWFkaW5nLFxuICAgICdtYXhXYWl0Jzogd2FpdCxcbiAgICAndHJhaWxpbmcnOiB0cmFpbGluZ1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0aHJvdHRsZTtcbiIsInZhciBiYXNlVHJpbSA9IHJlcXVpcmUoJy4vX2Jhc2VUcmltJyksXG4gICAgaXNPYmplY3QgPSByZXF1aXJlKCcuL2lzT2JqZWN0JyksXG4gICAgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE5BTiA9IDAgLyAwO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgYmFkIHNpZ25lZCBoZXhhZGVjaW1hbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCYWRIZXggPSAvXlstK10weFswLTlhLWZdKyQvaTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGJpbmFyeSBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNCaW5hcnkgPSAvXjBiWzAxXSskL2k7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvY3RhbCBzdHJpbmcgdmFsdWVzLiAqL1xudmFyIHJlSXNPY3RhbCA9IC9eMG9bMC03XSskL2k7XG5cbi8qKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB3aXRob3V0IGEgZGVwZW5kZW5jeSBvbiBgcm9vdGAuICovXG52YXIgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQ7XG5cbi8qKlxuICogQ29udmVydHMgYHZhbHVlYCB0byBhIG51bWJlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvY2Vzcy5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIG51bWJlci5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b051bWJlcigzLjIpO1xuICogLy8gPT4gMy4yXG4gKlxuICogXy50b051bWJlcihOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IDVlLTMyNFxuICpcbiAqIF8udG9OdW1iZXIoSW5maW5pdHkpO1xuICogLy8gPT4gSW5maW5pdHlcbiAqXG4gKiBfLnRvTnVtYmVyKCczLjInKTtcbiAqIC8vID0+IDMuMlxuICovXG5mdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gTkFOO1xuICB9XG4gIGlmIChpc09iamVjdCh2YWx1ZSkpIHtcbiAgICB2YXIgb3RoZXIgPSB0eXBlb2YgdmFsdWUudmFsdWVPZiA9PSAnZnVuY3Rpb24nID8gdmFsdWUudmFsdWVPZigpIDogdmFsdWU7XG4gICAgdmFsdWUgPSBpc09iamVjdChvdGhlcikgPyAob3RoZXIgKyAnJykgOiBvdGhlcjtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSAwID8gdmFsdWUgOiArdmFsdWU7XG4gIH1cbiAgdmFsdWUgPSBiYXNlVHJpbSh2YWx1ZSk7XG4gIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gIHJldHVybiAoaXNCaW5hcnkgfHwgcmVJc09jdGFsLnRlc3QodmFsdWUpKVxuICAgID8gZnJlZVBhcnNlSW50KHZhbHVlLnNsaWNlKDIpLCBpc0JpbmFyeSA/IDIgOiA4KVxuICAgIDogKHJlSXNCYWRIZXgudGVzdCh2YWx1ZSkgPyBOQU4gOiArdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvTnVtYmVyO1xuIl0sIm5hbWVzIjpbInUiLCJPYmplY3QiLCJhc3NpZ24iLCJlIiwiciIsImFyZ3VtZW50cyIsImxlbmd0aCIsInQiLCJuIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJ0aGlzIiwiYyIsIm8iLCJhIiwia2V5cyIsImluZGV4T2YiLCJpIiwiY3VycmVudCIsInMiLCJmIiwidiIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsInNlbGYiLCJkIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaWRlbnRpZmllciIsInRvdWNoZXMiLCJsZWZ0IiwicGFnZVgiLCJwYWdlWE9mZnNldCIsIndpZHRoIiwidG9wIiwicGFnZVkiLCJwYWdlWU9mZnNldCIsImhlaWdodCIsImgiLCJwcmV2ZW50RGVmYXVsdCIsIm0iLCJvbk1vdmUiLCJsIiwib25LZXkiLCJnIiwicCIsImIiLCJfIiwieCIsImJ1dHRvbnMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm5hdGl2ZUV2ZW50IiwiY2hhbmdlZFRvdWNoZXMiLCJmb2N1cyIsIndoaWNoIiwia2V5Q29kZSIsIkMiLCJFIiwiSCIsIm9uVG91Y2hTdGFydCIsIm9uTW91c2VEb3duIiwiY2xhc3NOYW1lIiwicmVmIiwib25LZXlEb3duIiwidGFiSW5kZXgiLCJyb2xlIiwiZmlsdGVyIiwiQm9vbGVhbiIsImpvaW4iLCJjb2xvciIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwiTWF0aCIsInBvdyIsInJvdW5kIiwiZ3JhZCIsInR1cm4iLCJyYWQiLCJQSSIsIkwiLCJzdWJzdHJpbmciLCJwYXJzZUludCIsIk51bWJlciIsImV4ZWMiLCJOIiwidyIsIksiLCJJIiwieSIsInEiLCJrIiwiZmxvb3IiLCJ6IiwiRCIsInRvU3RyaW5nIiwibWF4IiwibWluIiwiUyIsImh1ZSIsIm9uQ2hhbmdlIiwiVCIsImhzdmEiLCJGIiwiUCIsInJlcGxhY2UiLCJYIiwidG9Mb3dlckNhc2UiLCJZIiwidG9Ic3ZhIiwiZXF1YWwiLCJmcm9tSHN2YSIsIlIiLCJDb2xvclNwYWNlMiIsIlYiLCJ3aW5kb3ciLCJKIiwiTWFwIiwiUSIsImRvY3VtZW50IiwiaGFzIiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsInNldCIsInNldEF0dHJpYnV0ZSIsImhlYWQiLCJhcHBlbmRDaGlsZCIsIlUiLCJjb2xvck1vZGVsIiwiZGVmYXVsdENvbG9yIiwiVyIsImVlIiwiYmFja2dyb3VuZEltYWdlIiwicmUiLCJsZSIsIkVlIiwiV3JhcHBlciIsImRpdiIsInBvc2l0aW9uIiwibWF4V2lkdGgiLCJQaWNrZXJUb29sdGlwIiwiekluZGV4IiwiVG9vbHRpcENvbnRlbnQiLCJtYXJnaW4iLCJib3JkZXJSYWRpdXMiLCJib3hTaGFkb3ciLCJOb3RlIiwidGhlbWUiLCJmb250RmFtaWx5IiwidHlwb2dyYXBoeSIsImZvbnRzIiwiYmFzZSIsIlN3YXRjaGVzIiwiZGlzcGxheSIsImdyaWRUZW1wbGF0ZUNvbHVtbnMiLCJnYXAiLCJwYWRkaW5nIiwibWFyZ2luVG9wIiwiU3dhdGNoQ29sb3IiLCJhY3RpdmUiLCJhcHBCb3JkZXJDb2xvciIsInRleHRNdXRlZENvbG9yIiwiYXBwQm9yZGVyUmFkaXVzIiwiU3dhdGNoIiwidmFsdWUiLCJvbkNsaWNrIiwicHJvcHMiLCJJbnB1dCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1JpZ2h0IiwiYm94U2l6aW5nIiwiVG9nZ2xlSWNvbiIsInJpZ2h0IiwiY3Vyc29yIiwiaW5wdXQiLCJDb2xvclNwYWNlIiwiUkdCIiwiSFNMIiwiSEVYIiwiQ09MT1JfU1BBQ0VTIiwidmFsdWVzIiwiQ09MT1JfUkVHRVhQIiwiUkdCX1JFR0VYUCIsIkhTTF9SRUdFWFAiLCJIRVhfUkVHRVhQIiwiU0hPUlRIRVhfUkVHRVhQIiwiQ29sb3JQaWNrZXIiLCJmYWxsYmFja0NvbG9yIiwic3RyaW5nVG9BcmdzIiwibWF0Y2giLCJtYXAiLCJwYXJzZVZhbHVlIiwidmFsaWQiLCJ0ZXN0IiwiaHNsIiwia2V5d29yZCIsImNvbG9yU3BhY2UiLCJoZXgiLCJyZ2IiLCJwbGFpbiIsIm1hcHBlZCIsInN0YXJ0c1dpdGgiLCJ1c2VDb2xvcklucHV0IiwiaW5pdGlhbFZhbHVlIiwic2V0VmFsdWUiLCJ1c2VTdGF0ZSIsInNldENvbG9yIiwic2V0Q29sb3JTcGFjZSIsInVzZUVmZmVjdCIsIm5leHRWYWx1ZSIsIm5leHRDb2xvciIsInJlYWxWYWx1ZSIsInVzZU1lbW8iLCJzaG9ydCIsInNwbGl0IiwiZ2V0UmVhbFZhbHVlIiwidXBkYXRlVmFsdWUiLCJ1c2VDYWxsYmFjayIsInVwZGF0ZSIsInBhcnNlZCIsImN5Y2xlQ29sb3JTcGFjZSIsIm5leHQiLCJpZCIsIkNvbG9yQ29udHJvbCIsIm5hbWUiLCJvbkZvY3VzIiwib25CbHVyIiwicHJlc2V0Q29sb3JzIiwic3RhcnRPcGVuIiwidGhyb3R0bGVkT25DaGFuZ2UiLCJjdXJyZW50Q29sb3IiLCJzZWxlY3RlZENvbG9ycyIsInNldFNlbGVjdGVkQ29sb3JzIiwicHJlc2V0cyIsInByZXNldCIsInRpdGxlIiwiY29uY2F0Iiwic2xpY2UiLCJhZGRQcmVzZXQiLCJzb21lIiwiYXJyIiwidXNlUHJlc2V0cyIsIlBpY2tlciIsImNsb3NlT25PdXRzaWRlQ2xpY2siLCJvblZpc2libGVDaGFuZ2UiLCJ0b29sdGlwIiwiaW5kZXgiLCJrZXkiLCJoYXNDaHJvbWUiLCJub3RlIiwidGFyZ2V0Iiwic2VsZWN0IiwicGxhY2Vob2xkZXIiLCJpY29uIiwiQ29sb3JfZGVmYXVsdCIsImNzc0tleXdvcmRzIiwicmV2ZXJzZUtleXdvcmRzIiwiY29udmVydCIsImNoYW5uZWxzIiwibGFiZWxzIiwiaHN2IiwiaHdiIiwiY215ayIsInh5eiIsImxhYiIsImxjaCIsImFuc2kxNiIsImFuc2kyNTYiLCJoY2ciLCJhcHBsZSIsImdyYXkiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiLCJFcnJvciIsImRlZmluZVByb3BlcnR5IiwiZGVsdGEiLCJyZGlmIiwiZ2RpZiIsImJkaWYiLCJkaWZmIiwiZGlmZmMiLCJyZXZlcnNlZCIsImN1cnJlbnRDbG9zZXN0S2V5d29yZCIsImN1cnJlbnRDbG9zZXN0RGlzdGFuY2UiLCJJbmZpbml0eSIsImRpc3RhbmNlIiwidDIiLCJ0MyIsInZhbCIsInQxIiwic21pbiIsImxtaW4iLCJoaSIsInZtaW4iLCJzbCIsIndoIiwiYmwiLCJyYXRpbyIsInkyIiwieDIiLCJ6MiIsImF0YW4yIiwic3FydCIsImhyIiwiY29zIiwic2luIiwiYXJncyIsInNhdHVyYXRpb24iLCJhbnNpIiwibXVsdCIsInJlbSIsInN0cmluZyIsInRvVXBwZXJDYXNlIiwiY29sb3JTdHJpbmciLCJjaGFyIiwiaW50ZWdlciIsImNocm9tYSIsImdyYXlzY2FsZSIsInB1cmUiLCJtZyIsImNvbnZlcnNpb25zIiwicm91dGUiLCJmb3JFYWNoIiwiZnJvbU1vZGVsIiwicm91dGVzIiwidG9Nb2RlbCIsImZuIiwid3JhcFJvdW5kZWQiLCJ3cmFwcGVkRm4iLCJhcmcwIiwicmVzdWx0IiwibGVuIiwiY29udmVyc2lvbiIsInJhdyIsIndyYXBSYXciLCJkZXJpdmVCRlMiLCJncmFwaCIsImJ1aWxkR3JhcGgiLCJtb2RlbHMiLCJwYXJlbnQiLCJxdWV1ZSIsInBvcCIsImFkamFjZW50cyIsImFkamFjZW50Iiwibm9kZSIsInVuc2hpZnQiLCJsaW5rIiwiZnJvbSIsInRvIiwid3JhcENvbnZlcnNpb24iLCJwYXRoIiwiY3VyIiwidHJpbW1lZEVuZEluZGV4IiwicmVUcmltU3RhcnQiLCJiYXNlVHJpbSIsInJlV2hpdGVzcGFjZSIsImNoYXJBdCIsImlzT2JqZWN0Iiwibm93IiwidG9OdW1iZXIiLCJuYXRpdmVNYXgiLCJuYXRpdmVNaW4iLCJkZWJvdW5jZSIsImZ1bmMiLCJ3YWl0Iiwib3B0aW9ucyIsImxhc3RBcmdzIiwibGFzdFRoaXMiLCJtYXhXYWl0IiwidGltZXJJZCIsImxhc3RDYWxsVGltZSIsImxhc3RJbnZva2VUaW1lIiwibGVhZGluZyIsIm1heGluZyIsInRyYWlsaW5nIiwiVHlwZUVycm9yIiwiaW52b2tlRnVuYyIsInRpbWUiLCJ0aGlzQXJnIiwidW5kZWZpbmVkIiwic2hvdWxkSW52b2tlIiwidGltZVNpbmNlTGFzdENhbGwiLCJ0aW1lckV4cGlyZWQiLCJ0cmFpbGluZ0VkZ2UiLCJzZXRUaW1lb3V0IiwicmVtYWluaW5nV2FpdCIsInRpbWVXYWl0aW5nIiwiZGVib3VuY2VkIiwiaXNJbnZva2luZyIsImxlYWRpbmdFZGdlIiwiY2xlYXJUaW1lb3V0IiwiY2FuY2VsIiwiZmx1c2giLCJyb290IiwiRGF0ZSIsInRocm90dGxlIiwiaXNTeW1ib2wiLCJyZUlzQmFkSGV4IiwicmVJc0JpbmFyeSIsInJlSXNPY3RhbCIsImZyZWVQYXJzZUludCIsIm90aGVyIiwidmFsdWVPZiIsImlzQmluYXJ5Il0sInNvdXJjZVJvb3QiOiIifQ==