"use strict";(self.webpackChunk_projectstorm_react_workspaces_demos=self.webpackChunk_projectstorm_react_workspaces_demos||[]).push([[197],{"../node_modules/.pnpm/@storybook+components@7.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/components/dist/formatter-S4K5WUZV.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{formatter:()=>formatter});var _chunk_NNAAFZ4U_mjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../node_modules/.pnpm/@storybook+components@7.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/components/dist/chunk-NNAAFZ4U.mjs"),memoizerific__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../node_modules/.pnpm/memoizerific@1.11.3/node_modules/memoizerific/memoizerific.js"),memoizerific__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(memoizerific__WEBPACK_IMPORTED_MODULE_0__),require_parser_html=(0,_chunk_NNAAFZ4U_mjs__WEBPACK_IMPORTED_MODULE_1__.E)({"node_modules/prettier/parser-html.js"(exports,module){!function(e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&__webpack_require__.amdO)define(e);else{var i=typeof globalThis<"u"?globalThis:typeof __webpack_require__.g<"u"?__webpack_require__.g:typeof self<"u"?self:this||{};i.prettierPlugins=i.prettierPlugins||{},i.prettierPlugins.html=e()}}((function(){var S=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),ee=S(((cc,Kr)=>{var Ne=function(e){return e&&e.Math==Math&&e};Kr.exports=Ne("object"==typeof globalThis&&globalThis)||Ne("object"==typeof window&&window)||Ne("object"==typeof self&&self)||Ne("object"==typeof __webpack_require__.g&&__webpack_require__.g)||function(){return this}()||Function("return this")()})),se=S(((hc,Jr)=>{Jr.exports=function(e){try{return!!e()}catch{return!0}}})),ae=S(((pc,Zr)=>{var qs=se();Zr.exports=!qs((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))})),Oe=S(((fc,eu)=>{var Is=se();eu.exports=!Is((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))})),De=S(((dc,ru)=>{var Rs=Oe(),qe=Function.prototype.call;ru.exports=Rs?qe.bind(qe):function(){return qe.apply(qe,arguments)}})),su=S((nu=>{var uu={}.propertyIsEnumerable,tu=Object.getOwnPropertyDescriptor,xs=tu&&!uu.call({1:2},1);nu.f=xs?function(r){var u=tu(this,r);return!!u&&u.enumerable}:uu})),Ie=S(((Cc,iu)=>{iu.exports=function(e,r){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:r}}})),re=S(((mc,Du)=>{var au=Oe(),ou=Function.prototype,er=ou.call,Ps=au&&ou.bind.bind(er,er);Du.exports=au?Ps:function(e){return function(){return er.apply(e,arguments)}}})),me=S(((gc,cu)=>{var lu=re(),ks=lu({}.toString),Ls=lu("".slice);cu.exports=function(e){return Ls(ks(e),8,-1)}})),pu=S(((Fc,hu)=>{var $s=re(),Ms=se(),js=me(),rr=Object,Us=$s("".split);hu.exports=Ms((function(){return!rr("z").propertyIsEnumerable(0)}))?function(e){return"String"==js(e)?Us(e,""):rr(e)}:rr})),Re=S(((Ac,fu)=>{fu.exports=function(e){return null==e}})),ur=S(((vc,du)=>{var Gs=Re(),Vs=TypeError;du.exports=function(e){if(Gs(e))throw Vs("Can't call method on "+e);return e}})),xe=S(((_c,Eu)=>{var Xs=pu(),Hs=ur();Eu.exports=function(e){return Xs(Hs(e))}})),nr=S(((Sc,Cu)=>{var tr="object"==typeof document&&document.all,zs=typeof tr>"u"&&void 0!==tr;Cu.exports={all:tr,IS_HTMLDDA:zs}})),Y=S(((yc,gu)=>{var mu=nr(),Ws=mu.all;gu.exports=mu.IS_HTMLDDA?function(e){return"function"==typeof e||e===Ws}:function(e){return"function"==typeof e}})),le=S(((Tc,vu)=>{var Fu=Y(),Au=nr(),Ys=Au.all;vu.exports=Au.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:Fu(e)||e===Ys}:function(e){return"object"==typeof e?null!==e:Fu(e)}})),ge=S(((Bc,_u)=>{var sr=ee(),Qs=Y();_u.exports=function(e,r){return arguments.length<2?function(e){return Qs(e)?e:void 0}(sr[e]):sr[e]&&sr[e][r]}})),ir=S(((bc,Su)=>{var Js=re();Su.exports=Js({}.isPrototypeOf)})),Tu=S(((wc,yu)=>{var Zs=ge();yu.exports=Zs("navigator","userAgent")||""})),Iu=S(((Nc,qu)=>{var ue,Pe,Ou=ee(),ar=Tu(),Bu=Ou.process,bu=Ou.Deno,wu=Bu&&Bu.versions||bu&&bu.version,Nu=wu&&wu.v8;Nu&&(Pe=(ue=Nu.split("."))[0]>0&&ue[0]<4?1:+(ue[0]+ue[1])),!Pe&&ar&&((!(ue=ar.match(/Edge\/(\d+)/))||ue[1]>=74)&&((ue=ar.match(/Chrome\/(\d+)/))&&(Pe=+ue[1]))),qu.exports=Pe})),or=S(((Oc,xu)=>{var Ru=Iu(),ei=se();xu.exports=!!Object.getOwnPropertySymbols&&!ei((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Ru&&Ru<41}))})),Dr=S(((qc,Pu)=>{var ri=or();Pu.exports=ri&&!Symbol.sham&&"symbol"==typeof Symbol.iterator})),lr=S(((Ic,ku)=>{var ui=ge(),ti=Y(),ni=ir(),si=Dr(),ii=Object;ku.exports=si?function(e){return"symbol"==typeof e}:function(e){var r=ui("Symbol");return ti(r)&&ni(r.prototype,ii(e))}})),ke=S(((Rc,Lu)=>{var ai=String;Lu.exports=function(e){try{return ai(e)}catch{return"Object"}}})),Fe=S(((xc,$u)=>{var oi=Y(),Di=ke(),li=TypeError;$u.exports=function(e){if(oi(e))return e;throw li(Di(e)+" is not a function")}})),Le=S(((Pc,Mu)=>{var ci=Fe(),hi=Re();Mu.exports=function(e,r){var u=e[r];return hi(u)?void 0:ci(u)}})),Uu=S(((kc,ju)=>{var cr=De(),hr=Y(),pr=le(),pi=TypeError;ju.exports=function(e,r){var u,n;if("string"===r&&hr(u=e.toString)&&!pr(n=cr(u,e))||hr(u=e.valueOf)&&!pr(n=cr(u,e))||"string"!==r&&hr(u=e.toString)&&!pr(n=cr(u,e)))return n;throw pi("Can't convert object to primitive value")}})),Vu=S(((Lc,Gu)=>{Gu.exports=!1})),$e=S((($c,Hu)=>{var Xu=ee(),fi=Object.defineProperty;Hu.exports=function(e,r){try{fi(Xu,e,{value:r,configurable:!0,writable:!0})}catch{Xu[e]=r}return r}})),Me=S(((Mc,Wu)=>{var di=ee(),Ei=$e(),zu="__core-js_shared__",Ci=di[zu]||Ei(zu,{});Wu.exports=Ci})),fr=S(((jc,Qu)=>{var mi=Vu(),Yu=Me();(Qu.exports=function(e,r){return Yu[e]||(Yu[e]=void 0!==r?r:{})})("versions",[]).push({version:"3.26.1",mode:mi?"pure":"global",copyright:"Â© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})})),dr=S(((Uc,Ku)=>{var gi=ur(),Fi=Object;Ku.exports=function(e){return Fi(gi(e))}})),oe=S(((Gc,Ju)=>{var Ai=re(),vi=dr(),_i=Ai({}.hasOwnProperty);Ju.exports=Object.hasOwn||function(r,u){return _i(vi(r),u)}})),Er=S(((Vc,Zu)=>{var Si=re(),yi=0,Ti=Math.random(),Bi=Si(1..toString);Zu.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+Bi(++yi+Ti,36)}})),he=S(((Xc,nt)=>{var bi=ee(),wi=fr(),et=oe(),Ni=Er(),rt=or(),tt=Dr(),fe=wi("wks"),ce=bi.Symbol,ut=ce&&ce.for,Oi=tt?ce:ce&&ce.withoutSetter||Ni;nt.exports=function(e){if(!et(fe,e)||!rt&&"string"!=typeof fe[e]){var r="Symbol."+e;rt&&et(ce,e)?fe[e]=ce[e]:fe[e]=tt&&ut?ut(r):Oi(r)}return fe[e]}})),ot=S(((Hc,at)=>{var qi=De(),st=le(),it=lr(),Ii=Le(),Ri=Uu(),xi=he(),Pi=TypeError,ki=xi("toPrimitive");at.exports=function(e,r){if(!st(e)||it(e))return e;var n,u=Ii(e,ki);if(u){if(void 0===r&&(r="default"),n=qi(u,e,r),!st(n)||it(n))return n;throw Pi("Can't convert object to primitive value")}return void 0===r&&(r="number"),Ri(e,r)}})),je=S(((zc,Dt)=>{var Li=ot(),$i=lr();Dt.exports=function(e){var r=Li(e,"string");return $i(r)?r:r+""}})),ht=S(((Wc,ct)=>{var Mi=ee(),lt=le(),Cr=Mi.document,ji=lt(Cr)&&lt(Cr.createElement);ct.exports=function(e){return ji?Cr.createElement(e):{}}})),mr=S(((Yc,pt)=>{var Ui=ae(),Gi=se(),Vi=ht();pt.exports=!Ui&&!Gi((function(){return 7!=Object.defineProperty(Vi("div"),"a",{get:function(){return 7}}).a}))})),gr=S((dt=>{var Xi=ae(),Hi=De(),zi=su(),Wi=Ie(),Yi=xe(),Qi=je(),Ki=oe(),Ji=mr(),ft=Object.getOwnPropertyDescriptor;dt.f=Xi?ft:function(r,u){if(r=Yi(r),u=Qi(u),Ji)try{return ft(r,u)}catch{}if(Ki(r,u))return Wi(!Hi(zi.f,r,u),r[u])}})),Ct=S(((Kc,Et)=>{var Zi=ae(),ea=se();Et.exports=Zi&&ea((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))})),de=S(((Jc,mt)=>{var ra=le(),ua=String,ta=TypeError;mt.exports=function(e){if(ra(e))return e;throw ta(ua(e)+" is not an object")}})),Ae=S((Ft=>{var na=ae(),sa=mr(),ia=Ct(),Ue=de(),gt=je(),aa=TypeError,Fr=Object.defineProperty,oa=Object.getOwnPropertyDescriptor,Ar="enumerable",vr="configurable",_r="writable";Ft.f=na?ia?function(r,u,n){if(Ue(r),u=gt(u),Ue(n),"function"==typeof r&&"prototype"===u&&"value"in n&&_r in n&&!n[_r]){var D=oa(r,u);D&&D[_r]&&(r[u]=n.value,n={configurable:vr in n?n[vr]:D[vr],enumerable:Ar in n?n[Ar]:D[Ar],writable:!1})}return Fr(r,u,n)}:Fr:function(r,u,n){if(Ue(r),u=gt(u),Ue(n),sa)try{return Fr(r,u,n)}catch{}if("get"in n||"set"in n)throw aa("Accessors not supported");return"value"in n&&(r[u]=n.value),r}})),Sr=S(((e2,At)=>{var Da=ae(),la=Ae(),ca=Ie();At.exports=Da?function(e,r,u){return la.f(e,r,ca(1,u))}:function(e,r,u){return e[r]=u,e}})),St=S(((r2,_t)=>{var yr=ae(),ha=oe(),vt=Function.prototype,pa=yr&&Object.getOwnPropertyDescriptor,Tr=ha(vt,"name"),fa=Tr&&"something"===function(){}.name,da=Tr&&(!yr||yr&&pa(vt,"name").configurable);_t.exports={EXISTS:Tr,PROPER:fa,CONFIGURABLE:da}})),br=S(((u2,yt)=>{var Ea=re(),Ca=Y(),Br=Me(),ma=Ea(Function.toString);Ca(Br.inspectSource)||(Br.inspectSource=function(e){return ma(e)}),yt.exports=Br.inspectSource})),bt=S(((t2,Bt)=>{var ga=ee(),Fa=Y(),Tt=ga.WeakMap;Bt.exports=Fa(Tt)&&/native code/.test(String(Tt))})),Ot=S(((n2,Nt)=>{var Aa=fr(),va=Er(),wt=Aa("keys");Nt.exports=function(e){return wt[e]||(wt[e]=va(e))}})),wr=S(((s2,qt)=>{qt.exports={}})),Pt=S(((i2,xt)=>{var Ge,ve,Ve,te,pe,_a=bt(),Rt=ee(),Sa=le(),ya=Sr(),Nr=oe(),Or=Me(),Ta=Ot(),Ba=wr(),It="Object already initialized",qr=Rt.TypeError,ba=Rt.WeakMap;_a||Or.state?((te=Or.state||(Or.state=new ba)).get=te.get,te.has=te.has,te.set=te.set,Ge=function(e,r){if(te.has(e))throw qr(It);return r.facade=e,te.set(e,r),r},ve=function(e){return te.get(e)||{}},Ve=function(e){return te.has(e)}):(Ba[pe=Ta("state")]=!0,Ge=function(e,r){if(Nr(e,pe))throw qr(It);return r.facade=e,ya(e,pe,r),r},ve=function(e){return Nr(e,pe)?e[pe]:{}},Ve=function(e){return Nr(e,pe)}),xt.exports={set:Ge,get:ve,has:Ve,enforce:function(e){return Ve(e)?ve(e):Ge(e,{})},getterFor:function(e){return function(r){var u;if(!Sa(r)||(u=ve(r)).type!==e)throw qr("Incompatible receiver, "+e+" required");return u}}}})),$t=S(((a2,Lt)=>{var Oa=se(),qa=Y(),Xe=oe(),Ir=ae(),Ia=St().CONFIGURABLE,Ra=br(),kt=Pt(),xa=kt.enforce,Pa=kt.get,He=Object.defineProperty,ka=Ir&&!Oa((function(){return 8!==He((function(){}),"length",{value:8}).length})),La=String(String).split("String"),$a=Lt.exports=function(e,r,u){"Symbol("===String(r).slice(0,7)&&(r="["+String(r).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),u&&u.getter&&(r="get "+r),u&&u.setter&&(r="set "+r),(!Xe(e,"name")||Ia&&e.name!==r)&&(Ir?He(e,"name",{value:r,configurable:!0}):e.name=r),ka&&u&&Xe(u,"arity")&&e.length!==u.arity&&He(e,"length",{value:u.arity});try{u&&Xe(u,"constructor")&&u.constructor?Ir&&He(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch{}var n=xa(e);return Xe(n,"source")||(n.source=La.join("string"==typeof r?r:"")),e};Function.prototype.toString=$a((function(){return qa(this)&&Pa(this).source||Ra(this)}),"toString")})),jt=S(((o2,Mt)=>{var Ma=Y(),ja=Ae(),Ua=$t(),Ga=$e();Mt.exports=function(e,r,u,n){n||(n={});var D=n.enumerable,s=void 0!==n.name?n.name:r;if(Ma(u)&&Ua(u,s,n),n.global)D?e[r]=u:Ga(r,u);else{try{n.unsafe?e[r]&&(D=!0):delete e[r]}catch{}D?e[r]=u:ja.f(e,r,{value:u,enumerable:!1,configurable:!n.nonConfigurable,writable:!n.nonWritable})}return e}})),Gt=S(((D2,Ut)=>{var Va=Math.ceil,Xa=Math.floor;Ut.exports=Math.trunc||function(r){var u=+r;return(u>0?Xa:Va)(u)}})),Rr=S(((l2,Vt)=>{var Ha=Gt();Vt.exports=function(e){var r=+e;return r!=r||0===r?0:Ha(r)}})),Ht=S(((c2,Xt)=>{var za=Rr(),Wa=Math.max,Ya=Math.min;Xt.exports=function(e,r){var u=za(e);return u<0?Wa(u+r,0):Ya(u,r)}})),Wt=S(((h2,zt)=>{var Qa=Rr(),Ka=Math.min;zt.exports=function(e){return e>0?Ka(Qa(e),9007199254740991):0}})),_e=S(((p2,Yt)=>{var Ja=Wt();Yt.exports=function(e){return Ja(e.length)}})),Jt=S(((f2,Kt)=>{var Za=xe(),eo=Ht(),ro=_e(),Qt=function(e){return function(r,u,n){var f,D=Za(r),s=ro(D),i=eo(n,s);if(e&&u!=u){for(;s>i;)if((f=D[i++])!=f)return!0}else for(;s>i;i++)if((e||i in D)&&D[i]===u)return e||i||0;return!e&&-1}};Kt.exports={includes:Qt(!0),indexOf:Qt(!1)}})),rn=S(((d2,en)=>{var uo=re(),xr=oe(),to=xe(),no=Jt().indexOf,so=wr(),Zt=uo([].push);en.exports=function(e,r){var s,u=to(e),n=0,D=[];for(s in u)!xr(so,s)&&xr(u,s)&&Zt(D,s);for(;r.length>n;)xr(u,s=r[n++])&&(~no(D,s)||Zt(D,s));return D}})),tn=S(((E2,un)=>{un.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]})),sn=S((nn=>{var io=rn(),oo=tn().concat("length","prototype");nn.f=Object.getOwnPropertyNames||function(r){return io(r,oo)}})),on=S((an=>{an.f=Object.getOwnPropertySymbols})),ln=S(((g2,Dn)=>{var Do=ge(),lo=re(),co=sn(),ho=on(),po=de(),fo=lo([].concat);Dn.exports=Do("Reflect","ownKeys")||function(r){var u=co.f(po(r)),n=ho.f;return n?fo(u,n(r)):u}})),pn=S(((F2,hn)=>{var cn=oe(),Eo=ln(),Co=gr(),mo=Ae();hn.exports=function(e,r,u){for(var n=Eo(r),D=mo.f,s=Co.f,i=0;i<n.length;i++){var f=n[i];!cn(e,f)&&(!u||!cn(u,f))&&D(e,f,s(r,f))}}})),dn=S(((A2,fn)=>{var go=se(),Fo=Y(),Ao=/#|\.prototype\./,Se=function(e,r){var u=_o[vo(e)];return u==yo||u!=So&&(Fo(r)?go(r):!!r)},vo=Se.normalize=function(e){return String(e).replace(Ao,".").toLowerCase()},_o=Se.data={},So=Se.NATIVE="N",yo=Se.POLYFILL="P";fn.exports=Se})),ze=S(((v2,En)=>{var Pr=ee(),To=gr().f,Bo=Sr(),bo=jt(),wo=$e(),No=pn(),Oo=dn();En.exports=function(e,r){var i,f,c,F,a,u=e.target,n=e.global,D=e.stat;if(i=n?Pr:D?Pr[u]||wo(u,{}):(Pr[u]||{}).prototype)for(f in r){if(F=r[f],e.dontCallGetSet?c=(a=To(i,f))&&a.value:c=i[f],!Oo(n?f:u+(D?".":"#")+f,e.forced)&&void 0!==c){if(typeof F==typeof c)continue;No(F,c)}(e.sham||c&&c.sham)&&Bo(F,"sham",!0),bo(i,f,F,e)}}})),Cn=S((()=>{var qo=ze(),kr=ee();qo({global:!0,forced:kr.globalThis!==kr},{globalThis:kr})})),mn=S((()=>{Cn()})),Lr=S(((B2,gn)=>{var Io=me();gn.exports=Array.isArray||function(r){return"Array"==Io(r)}})),An=S(((b2,Fn)=>{var Ro=TypeError;Fn.exports=function(e){if(e>9007199254740991)throw Ro("Maximum allowed index exceeded");return e}})),_n=S(((w2,vn)=>{var Po=me(),ko=re();vn.exports=function(e){if("Function"===Po(e))return ko(e)}})),$r=S(((N2,yn)=>{var Sn=_n(),Lo=Fe(),$o=Oe(),Mo=Sn(Sn.bind);yn.exports=function(e,r){return Lo(e),void 0===r?e:$o?Mo(e,r):function(){return e.apply(r,arguments)}}})),bn=S(((O2,Bn)=>{var jo=Lr(),Uo=_e(),Go=An(),Vo=$r(),Tn=function(e,r,u,n,D,s,i,f){for(var l,h,c=D,F=0,a=!!i&&Vo(i,f);F<n;)F in u&&(l=a?a(u[F],F,r):u[F],s>0&&jo(l)?(h=Uo(l),c=Tn(e,r,l,h,c,s-1)-1):(Go(c+1),e[c]=l),c++),F++;return c};Bn.exports=Tn})),On=S(((q2,Nn)=>{var wn={};wn[he()("toStringTag")]="z",Nn.exports="[object z]"===String(wn)})),Mr=S(((I2,qn)=>{var zo=On(),Wo=Y(),We=me(),Qo=he()("toStringTag"),Ko=Object,Jo="Arguments"==We(function(){return arguments}());qn.exports=zo?We:function(e){var r,u,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(u=function(e,r){try{return e[r]}catch{}}(r=Ko(e),Qo))?u:Jo?We(r):"Object"==(n=We(r))&&Wo(r.callee)?"Arguments":n}})),Ln=S(((R2,kn)=>{var eD=re(),rD=se(),In=Y(),uD=Mr(),tD=ge(),nD=br(),Rn=function(){},sD=[],xn=tD("Reflect","construct"),jr=/^\s*(?:class|function)\b/,iD=eD(jr.exec),aD=!jr.exec(Rn),ye=function(r){if(!In(r))return!1;try{return xn(Rn,sD,r),!0}catch{return!1}},Pn=function(r){if(!In(r))return!1;switch(uD(r)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return aD||!!iD(jr,nD(r))}catch{return!0}};Pn.sham=!0,kn.exports=!xn||rD((function(){var e;return ye(ye.call)||!ye(Object)||!ye((function(){e=!0}))||e}))?Pn:ye})),Un=S(((x2,jn)=>{var $n=Lr(),oD=Ln(),DD=le(),cD=he()("species"),Mn=Array;jn.exports=function(e){var r;return $n(e)&&(r=e.constructor,oD(r)&&(r===Mn||$n(r.prototype))?r=void 0:DD(r)&&(null===(r=r[cD])&&(r=void 0))),void 0===r?Mn:r}})),Vn=S(((P2,Gn)=>{var hD=Un();Gn.exports=function(e,r){return new(hD(e))(0===r?0:r)}})),Xn=S((()=>{var pD=ze(),fD=bn(),dD=Fe(),ED=dr(),CD=_e(),mD=Vn();pD({target:"Array",proto:!0},{flatMap:function(r){var D,u=ED(this),n=CD(u);return dD(r),(D=mD(u,0)).length=fD(D,u,u,n,0,1,r,arguments.length>1?arguments[1]:void 0),D}})})),Ur=S((($2,Hn)=>{Hn.exports={}})),Wn=S(((M2,zn)=>{var gD=he(),FD=Ur(),AD=gD("iterator"),vD=Array.prototype;zn.exports=function(e){return void 0!==e&&(FD.Array===e||vD[AD]===e)}})),Gr=S(((j2,Qn)=>{var _D=Mr(),Yn=Le(),SD=Re(),yD=Ur(),BD=he()("iterator");Qn.exports=function(e){if(!SD(e))return Yn(e,BD)||Yn(e,"@@iterator")||yD[_D(e)]}})),Jn=S(((U2,Kn)=>{var bD=De(),wD=Fe(),ND=de(),OD=ke(),qD=Gr(),ID=TypeError;Kn.exports=function(e,r){var u=arguments.length<2?qD(e):r;if(wD(u))return ND(bD(u,e));throw ID(OD(e)+" is not iterable")}})),rs=S(((G2,es)=>{var RD=De(),Zn=de(),xD=Le();es.exports=function(e,r,u){var n,D;Zn(e);try{if(!(n=xD(e,"return"))){if("throw"===r)throw u;return u}n=RD(n,e)}catch(s){D=!0,n=s}if("throw"===r)throw u;if(D)throw n;return Zn(n),u}})),is=S(((V2,ss)=>{var PD=$r(),kD=De(),LD=de(),$D=ke(),MD=Wn(),jD=_e(),us=ir(),UD=Jn(),GD=Gr(),ts=rs(),VD=TypeError,Ye=function(e,r){this.stopped=e,this.result=r},ns=Ye.prototype;ss.exports=function(e,r,u){var F,a,l,h,C,d,m,n=u&&u.that,D=!(!u||!u.AS_ENTRIES),s=!(!u||!u.IS_RECORD),i=!(!u||!u.IS_ITERATOR),f=!(!u||!u.INTERRUPTED),c=PD(r,n),T=function(g){return F&&ts(F,"normal",g),new Ye(!0,g)},w=function(g){return D?(LD(g),f?c(g[0],g[1],T):c(g[0],g[1])):f?c(g,T):c(g)};if(s)F=e.iterator;else if(i)F=e;else{if(!(a=GD(e)))throw VD($D(e)+" is not iterable");if(MD(a)){for(l=0,h=jD(e);h>l;l++)if((C=w(e[l]))&&us(ns,C))return C;return new Ye(!1)}F=UD(e,a)}for(d=s?e.next:F.next;!(m=kD(d,F)).done;){try{C=w(m.value)}catch(g){ts(F,"throw",g)}if("object"==typeof C&&C&&us(ns,C))return C}return new Ye(!1)}})),os=S(((X2,as)=>{var XD=je(),HD=Ae(),zD=Ie();as.exports=function(e,r,u){var n=XD(r);n in e?HD.f(e,n,zD(0,u)):e[n]=u}})),Ds=S((()=>{var WD=ze(),YD=is(),QD=os();WD({target:"Object",stat:!0},{fromEntries:function(r){var u={};return YD(r,(function(n,D){QD(u,n,D)}),{AS_ENTRIES:!0}),u}})})),Dc=S(((W2,Os)=>{var KD=["cliName","cliCategory","cliDescription"];function JD(e,r){if(null==e)return{};var n,D,u=function ZD(e,r){if(null==e)return{};var D,s,u={},n=Object.keys(e);for(s=0;s<n.length;s++)D=n[s],!(r.indexOf(D)>=0)&&(u[D]=e[D]);return u}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(D=0;D<s.length;D++)n=s[D],!(r.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(u[n]=e[n])}return u}mn(),Xn(),Ds();var Te,el=Object.create,Je=Object.defineProperty,rl=Object.getOwnPropertyDescriptor,Xr=Object.getOwnPropertyNames,ul=Object.getPrototypeOf,tl=Object.prototype.hasOwnProperty,Ee=(e,r)=>function(){return e&&(r=(0,e[Xr(e)[0]])(e=0)),r},I=(e,r)=>function(){return r||(0,e[Xr(e)[0]])((r={exports:{}}).exports,r),r.exports},ps=(e,r)=>{for(var u in r)Je(e,u,{get:r[u],enumerable:!0})},fs=(e,r,u,n)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let D of Xr(r))!tl.call(e,D)&&D!==u&&Je(e,D,{get:()=>r[D],enumerable:!(n=rl(r,D))||n.enumerable});return e},ds=e=>fs(Je({},"__esModule",{value:!0}),e),q=Ee({"<define:process>"(){Te={env:{},argv:[]}}}),Es=I({"node_modules/angular-html-parser/lib/compiler/src/chars.js"(e){function u(f){return e.$0<=f&&f<=e.$9}q(),Object.defineProperty(e,"__esModule",{value:!0}),e.$EOF=0,e.$BSPACE=8,e.$TAB=9,e.$LF=10,e.$VTAB=11,e.$FF=12,e.$CR=13,e.$SPACE=32,e.$BANG=33,e.$DQ=34,e.$HASH=35,e.$$=36,e.$PERCENT=37,e.$AMPERSAND=38,e.$SQ=39,e.$LPAREN=40,e.$RPAREN=41,e.$STAR=42,e.$PLUS=43,e.$COMMA=44,e.$MINUS=45,e.$PERIOD=46,e.$SLASH=47,e.$COLON=58,e.$SEMICOLON=59,e.$LT=60,e.$EQ=61,e.$GT=62,e.$QUESTION=63,e.$0=48,e.$7=55,e.$9=57,e.$A=65,e.$E=69,e.$F=70,e.$X=88,e.$Z=90,e.$LBRACKET=91,e.$BACKSLASH=92,e.$RBRACKET=93,e.$CARET=94,e.$_=95,e.$a=97,e.$b=98,e.$e=101,e.$f=102,e.$n=110,e.$r=114,e.$t=116,e.$u=117,e.$v=118,e.$x=120,e.$z=122,e.$LBRACE=123,e.$BAR=124,e.$RBRACE=125,e.$NBSP=160,e.$PIPE=124,e.$TILDA=126,e.$AT=64,e.$BT=96,e.isWhitespace=function r(f){return f>=e.$TAB&&f<=e.$SPACE||f==e.$NBSP},e.isDigit=u,e.isAsciiLetter=function n(f){return f>=e.$a&&f<=e.$z||f>=e.$A&&f<=e.$Z},e.isAsciiHexDigit=function D(f){return f>=e.$a&&f<=e.$f||f>=e.$A&&f<=e.$F||u(f)},e.isNewLine=function s(f){return f===e.$LF||f===e.$CR},e.isOctalDigit=function i(f){return e.$0<=f&&f<=e.$7}}}),sl=I({"node_modules/angular-html-parser/lib/compiler/src/aot/static_symbol.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=class{constructor(n,D,s){this.filePath=n,this.name=D,this.members=s}assertNoMembers(){if(this.members.length)throw new Error(`Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`)}};e.StaticSymbol=r;e.StaticSymbolCache=class{constructor(){this.cache=new Map}get(n,D,s){let f=`"${n}".${D}${(s=s||[]).length?`.${s.join(".")}`:""}`,c=this.cache.get(f);return c||(c=new r(n,D,s),this.cache.set(f,c)),c}}}}),il=I({"node_modules/angular-html-parser/lib/compiler/src/util.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=/-+([a-z0-9])/g;function s(o,E,p){let A=o.indexOf(E);return-1==A?p:[o.slice(0,A).trim(),o.slice(A+1).trim()]}function i(o,E,p){return Array.isArray(o)?E.visitArray(o,p):function g(o){return"object"==typeof o&&null!==o&&Object.getPrototypeOf(o)===w}(o)?E.visitStringMap(o,p):null==o||"string"==typeof o||"number"==typeof o||"boolean"==typeof o?E.visitPrimitive(o,p):E.visitOther(o,p)}e.dashCaseToCamelCase=function u(o){return o.replace(r,(function(){for(var E=arguments.length,p=new Array(E),A=0;A<E;A++)p[A]=arguments[A];return p[1].toUpperCase()}))},e.splitAtColon=function n(o,E){return s(o,":",E)},e.splitAtPeriod=function D(o,E){return s(o,".",E)},e.visitValue=i,e.isDefined=function f(o){return null!=o},e.noUndefined=function c(o){return void 0===o?null:o};e.ValueTransformer=class{visitArray(o,E){return o.map((p=>i(p,this,E)))}visitStringMap(o,E){let p={};return Object.keys(o).forEach((A=>{p[A]=i(o[A],this,E)})),p}visitPrimitive(o,E){return o}visitOther(o,E){return o}},e.SyncAsync={assertSync:o=>{if(_(o))throw new Error("Illegal state: value cannot be a promise");return o},then:(o,E)=>_(o)?o.then(E):E(o),all:o=>o.some(_)?Promise.all(o):o},e.error=function a(o){throw new Error(`Internal Error: ${o}`)},e.syntaxError=function l(o,E){let p=Error(o);return p[h]=!0,E&&(p[C]=E),p};var h="ngSyntaxError",C="ngParseErrors";e.isSyntaxError=function d(o){return o[h]},e.getParseErrors=function m(o){return o[C]||[]},e.escapeRegExp=function T(o){return o.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};var w=Object.getPrototypeOf({});function _(o){return!!o&&"function"==typeof o.then}e.utf8Encode=function N(o){let E="";for(let p=0;p<o.length;p++){let A=o.charCodeAt(p);if(A>=55296&&A<=56319&&o.length>p+1){let P=o.charCodeAt(p+1);P>=56320&&P<=57343&&(p++,A=(A-55296<<10)+P-56320+65536)}A<=127?E+=String.fromCharCode(A):A<=2047?E+=String.fromCharCode(A>>6&31|192,63&A|128):A<=65535?E+=String.fromCharCode(A>>12|224,A>>6&63|128,63&A|128):A<=2097151&&(E+=String.fromCharCode(A>>18&7|240,A>>12&63|128,A>>6&63|128,63&A|128))}return E},e.stringify=function R(o){if("string"==typeof o)return o;if(o instanceof Array)return"["+o.map(R).join(", ")+"]";if(null==o)return""+o;if(o.overriddenName)return`${o.overriddenName}`;if(o.name)return`${o.name}`;if(!o.toString)return"object";let E=o.toString();if(null==E)return""+E;let p=E.indexOf("\n");return-1===p?E:E.substring(0,p)},e.resolveForwardRef=function j(o){return"function"==typeof o&&o.hasOwnProperty("__forward_ref__")?o():o},e.isPromise=_;e.Version=class{constructor(o){this.full=o;let E=o.split(".");this.major=E[0],this.minor=E[1],this.patch=E.slice(2).join(".")}};var x=typeof window<"u"&&window,k=typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&self,t=typeof globalThis<"u"&&globalThis||x||k;e.global=t}}),al=I({"node_modules/angular-html-parser/lib/compiler/src/compile_metadata.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=sl(),u=il(),n=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function D(p){return p.replace(/\W/g,"_")}e.sanitizeIdentifier=D;var h,p,s=0;function i(p){if(!p||!p.reference)return null;let A=p.reference;if(A instanceof r.StaticSymbol)return A.name;if(A.__anonymousType)return A.__anonymousType;let P=u.stringify(A);return P.indexOf("(")>=0?(P="anonymous_"+s++,A.__anonymousType=P):P=D(P),P}e.identifierName=i,e.identifierModuleUrl=function f(p){let A=p.reference;return A instanceof r.StaticSymbol?A.filePath:`./${u.stringify(A)}`},e.viewClassName=function c(p,A){return`View_${i({reference:p})}_${A}`},e.rendererTypeName=function F(p){return`RenderType_${i({reference:p})}`},e.hostViewClassName=function a(p){return`HostView_${i({reference:p})}`},e.componentFactoryName=function l(p){return`${i({reference:p})}NgFactory`},(p=h=e.CompileSummaryKind||(e.CompileSummaryKind={}))[p.Pipe=0]="Pipe",p[p.Directive=1]="Directive",p[p.NgModule=2]="NgModule",p[p.Injectable=3]="Injectable",e.tokenName=function C(p){return null!=p.value?D(p.value):i(p.identifier)},e.tokenReference=function d(p){return null!=p.identifier?p.identifier.reference:p.value};e.CompileStylesheetMetadata=class{constructor(){let{moduleUrl:p,styles:A,styleUrls:P}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.moduleUrl=p||null,this.styles=_(A),this.styleUrls=_(P)}};e.CompileTemplateMetadata=class{constructor(p){let{encapsulation:A,template:P,templateUrl:M,htmlAst:z,styles:V,styleUrls:X,externalStylesheets:H,animations:Q,ngContentSelectors:K,interpolation:J,isInline:v,preserveWhitespaces:y}=p;if(this.encapsulation=A,this.template=P,this.templateUrl=M,this.htmlAst=z,this.styles=_(V),this.styleUrls=_(X),this.externalStylesheets=_(H),this.animations=Q?x(Q):[],this.ngContentSelectors=K||[],J&&2!=J.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=J,this.isInline=v,this.preserveWhitespaces=y}toSummary(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};var w=class{static create(p){let{isHost:A,type:P,isComponent:M,selector:z,exportAs:V,changeDetection:X,inputs:H,outputs:Q,host:K,providers:J,viewProviders:v,queries:y,guards:B,viewQueries:b,entryComponents:L,template:U,componentViewType:G,rendererType:W,componentFactory:ne}=p,be={},we={},Wr={};null!=K&&Object.keys(K).forEach((Z=>{let ie=K[Z],Ce=Z.match(n);null===Ce?Wr[Z]=ie:null!=Ce[1]?we[Ce[1]]=ie:null!=Ce[2]&&(be[Ce[2]]=ie)}));let Yr={};H?.forEach((Z=>{let ie=u.splitAtColon(Z,[Z,Z]);Yr[ie[0]]=ie[1]}));let Qr={};return Q?.forEach((Z=>{let ie=u.splitAtColon(Z,[Z,Z]);Qr[ie[0]]=ie[1]})),new w({isHost:A,type:P,isComponent:!!M,selector:z,exportAs:V,changeDetection:X,inputs:Yr,outputs:Qr,hostListeners:be,hostProperties:we,hostAttributes:Wr,providers:J,viewProviders:v,queries:y,guards:B,viewQueries:b,entryComponents:L,template:U,componentViewType:G,rendererType:W,componentFactory:ne})}constructor(p){let{isHost:A,type:P,isComponent:M,selector:z,exportAs:V,changeDetection:X,inputs:H,outputs:Q,hostListeners:K,hostProperties:J,hostAttributes:v,providers:y,viewProviders:B,queries:b,guards:L,viewQueries:U,entryComponents:G,template:W,componentViewType:ne,rendererType:be,componentFactory:we}=p;this.isHost=!!A,this.type=P,this.isComponent=M,this.selector=z,this.exportAs=V,this.changeDetection=X,this.inputs=H,this.outputs=Q,this.hostListeners=K,this.hostProperties=J,this.hostAttributes=v,this.providers=_(y),this.viewProviders=_(B),this.queries=_(b),this.guards=L,this.viewQueries=_(U),this.entryComponents=_(G),this.template=W,this.componentViewType=ne,this.rendererType=be,this.componentFactory=we}toSummary(){return{summaryKind:h.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}};e.CompileDirectiveMetadata=w;e.CompilePipeMetadata=class{constructor(p){let{type:A,name:P,pure:M}=p;this.type=A,this.name=P,this.pure=!!M}toSummary(){return{summaryKind:h.Pipe,type:this.type,name:this.name,pure:this.pure}}};e.CompileShallowModuleMetadata=class{};e.CompileNgModuleMetadata=class{constructor(p){let{type:A,providers:P,declaredDirectives:M,exportedDirectives:z,declaredPipes:V,exportedPipes:X,entryComponents:H,bootstrapComponents:Q,importedModules:K,exportedModules:J,schemas:v,transitiveModule:y,id:B}=p;this.type=A||null,this.declaredDirectives=_(M),this.exportedDirectives=_(z),this.declaredPipes=_(V),this.exportedPipes=_(X),this.providers=_(P),this.entryComponents=_(H),this.bootstrapComponents=_(Q),this.importedModules=_(K),this.exportedModules=_(J),this.schemas=_(v),this.id=B||null,this.transitiveModule=y||null}toSummary(){let p=this.transitiveModule;return{summaryKind:h.NgModule,type:this.type,entryComponents:p.entryComponents,providers:p.providers,modules:p.modules,exportedDirectives:p.exportedDirectives,exportedPipes:p.exportedPipes}}};function _(p){return p||[]}e.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[]}addProvider(p,A){this.providers.push({provider:p,module:A})}addDirective(p){this.directivesSet.has(p.reference)||(this.directivesSet.add(p.reference),this.directives.push(p))}addExportedDirective(p){this.exportedDirectivesSet.has(p.reference)||(this.exportedDirectivesSet.add(p.reference),this.exportedDirectives.push(p))}addPipe(p){this.pipesSet.has(p.reference)||(this.pipesSet.add(p.reference),this.pipes.push(p))}addExportedPipe(p){this.exportedPipesSet.has(p.reference)||(this.exportedPipesSet.add(p.reference),this.exportedPipes.push(p))}addModule(p){this.modulesSet.has(p.reference)||(this.modulesSet.add(p.reference),this.modules.push(p))}addEntryComponent(p){this.entryComponentsSet.has(p.componentType)||(this.entryComponentsSet.add(p.componentType),this.entryComponents.push(p))}};function x(p){return p.reduce(((A,P)=>{let M=Array.isArray(P)?x(P):P;return A.concat(M)}),[])}function k(p){return p.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}e.ProviderMeta=class{constructor(p,A){let{useClass:P,useValue:M,useExisting:z,useFactory:V,deps:X,multi:H}=A;this.token=p,this.useClass=P||null,this.useValue=M,this.useExisting=z,this.useFactory=V||null,this.dependencies=X||null,this.multi=!!H}},e.flatten=x,e.templateSourceUrl=function $(p,A,P){let M;return M=P.isInline?A.type.reference instanceof r.StaticSymbol?`${A.type.reference.filePath}.${A.type.reference.name}.html`:`${i(p)}/${i(A.type)}.html`:P.templateUrl,A.type.reference instanceof r.StaticSymbol?M:k(M)},e.sharedStylesheetJitUrl=function t(p,A){let P=p.moduleUrl.split(/\/\\/g);return k(`css/${A}${P[P.length-1]}.ngstyle.js`)},e.ngModuleJitUrl=function o(p){return k(`${i(p.type)}/module.ngfactory.js`)},e.templateJitUrl=function E(p,A){return k(`${i(p)}/${i(A.type)}.ngfactory.js`)}}}),Be=I({"node_modules/angular-html-parser/lib/compiler/src/parse_util.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=Es(),u=al(),n=class{constructor(a,l,h,C){this.file=a,this.offset=l,this.line=h,this.col=C}toString(){return null!=this.offset?`${this.file.url}@${this.line}:${this.col}`:this.file.url}moveBy(a){let l=this.file.content,h=l.length,C=this.offset,d=this.line,m=this.col;for(;C>0&&a<0;)if(C--,a++,l.charCodeAt(C)==r.$LF){d--;let w=l.substr(0,C-1).lastIndexOf(String.fromCharCode(r.$LF));m=w>0?C-w:C}else m--;for(;C<h&&a>0;){let T=l.charCodeAt(C);C++,a--,T==r.$LF?(d++,m=0):m++}return new n(this.file,C,d,m)}getContext(a,l){let h=this.file.content,C=this.offset;if(null!=C){C>h.length-1&&(C=h.length-1);let d=C,m=0,T=0;for(;m<a&&C>0&&(C--,m++,"\n"!=h[C]||++T!=l););for(m=0,T=0;m<a&&d<h.length-1&&(d++,m++,"\n"!=h[d]||++T!=l););return{before:h.substring(C,this.offset),after:h.substring(this.offset,d+1)}}return null}};e.ParseLocation=n;var D=class{constructor(a,l){this.content=a,this.url=l}};e.ParseSourceFile=D;var i,a,s=class{constructor(a,l){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.start=a,this.end=l,this.details=h}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}};e.ParseSourceSpan=s,e.EMPTY_PARSE_LOCATION=new n(new D("",""),0,0,0),e.EMPTY_SOURCE_SPAN=new s(e.EMPTY_PARSE_LOCATION,e.EMPTY_PARSE_LOCATION),(a=i=e.ParseErrorLevel||(e.ParseErrorLevel={}))[a.WARNING=0]="WARNING",a[a.ERROR=1]="ERROR";e.ParseError=class{constructor(a,l){let h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.ERROR;this.span=a,this.msg=l,this.level=h}contextualMessage(){let a=this.span.start.getContext(100,3);return a?`${this.msg} ("${a.before}[${i[this.level]} ->]${a.after}")`:this.msg}toString(){let a=this.span.details?`, ${this.span.details}`:"";return`${this.contextualMessage()}: ${this.span.start}${a}`}},e.typeSourceSpan=function c(a,l){let h=u.identifierModuleUrl(l),C=null!=h?`in ${a} ${u.identifierName(l)} in ${h}`:`in ${a} ${u.identifierName(l)}`,d=new D("",C);return new s(new n(d,-1,-1,-1),new n(d,-1,-1,-1))},e.r3JitTypeSourceSpan=function F(a,l,h){let d=new D("",`in ${a} ${l} in ${h}`);return new s(new n(d,-1,-1,-1),new n(d,-1,-1,-1))}}}),ol=I({"src/utils/front-matter/parse.js"(e,r){q();var u=new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>.*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)","s");r.exports=function n(D){let s=D.match(u);if(!s)return{content:D};let{startDelimiter:i,language:f,value:c="",endDelimiter:F}=s.groups,a=f.trim()||"yaml";if("+++"===i&&(a="toml"),"yaml"!==a&&i!==F)return{content:D};let[l]=s;return{frontMatter:{type:"front-matter",lang:a,value:c,startDelimiter:i,endDelimiter:F,raw:l.replace(/\n$/,"")},content:l.replace(/[^\n]/g," ")+D.slice(l.length)}}}}),Cs=I({"src/utils/get-last.js"(e,r){q();r.exports=n=>n[n.length-1]}}),Dl=I({"src/common/parser-create-error.js"(e,r){q(),r.exports=function u(n,D){let s=new SyntaxError(n+" ("+D.start.line+":"+D.start.column+")");return s.loc=D,s}}}),ms={};function ll(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}ps(ms,{default:()=>ll});var cl=Ee({"node_modules/escape-string-regexp/index.js"(){q()}}),gs=I({"node_modules/semver/internal/debug.js"(e,r){q();var u="object"==typeof Te&&Te.env&&Te.env.NODE_DEBUG&&/\bsemver\b/i.test(Te.env.NODE_DEBUG)?function(){for(var n=arguments.length,D=new Array(n),s=0;s<n;s++)D[s]=arguments[s];return console.error("SEMVER",...D)}:()=>{};r.exports=u}}),Fs=I({"node_modules/semver/internal/constants.js"(e,r){q();var D=Number.MAX_SAFE_INTEGER||9007199254740991;r.exports={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:D,MAX_SAFE_COMPONENT_LENGTH:16}}}),hl=I({"node_modules/semver/internal/re.js"(e,r){q();var{MAX_SAFE_COMPONENT_LENGTH:u}=Fs(),n=gs(),D=(e=r.exports={}).re=[],s=e.src=[],i=e.t={},f=0,c=(F,a,l)=>{let h=f++;n(F,h,a),i[F]=h,s[h]=a,D[h]=new RegExp(a,l?"g":void 0)};c("NUMERICIDENTIFIER","0|[1-9]\\d*"),c("NUMERICIDENTIFIERLOOSE","[0-9]+"),c("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),c("MAINVERSION",`(${s[i.NUMERICIDENTIFIER]})\\.(${s[i.NUMERICIDENTIFIER]})\\.(${s[i.NUMERICIDENTIFIER]})`),c("MAINVERSIONLOOSE",`(${s[i.NUMERICIDENTIFIERLOOSE]})\\.(${s[i.NUMERICIDENTIFIERLOOSE]})\\.(${s[i.NUMERICIDENTIFIERLOOSE]})`),c("PRERELEASEIDENTIFIER",`(?:${s[i.NUMERICIDENTIFIER]}|${s[i.NONNUMERICIDENTIFIER]})`),c("PRERELEASEIDENTIFIERLOOSE",`(?:${s[i.NUMERICIDENTIFIERLOOSE]}|${s[i.NONNUMERICIDENTIFIER]})`),c("PRERELEASE",`(?:-(${s[i.PRERELEASEIDENTIFIER]}(?:\\.${s[i.PRERELEASEIDENTIFIER]})*))`),c("PRERELEASELOOSE",`(?:-?(${s[i.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${s[i.PRERELEASEIDENTIFIERLOOSE]})*))`),c("BUILDIDENTIFIER","[0-9A-Za-z-]+"),c("BUILD",`(?:\\+(${s[i.BUILDIDENTIFIER]}(?:\\.${s[i.BUILDIDENTIFIER]})*))`),c("FULLPLAIN",`v?${s[i.MAINVERSION]}${s[i.PRERELEASE]}?${s[i.BUILD]}?`),c("FULL",`^${s[i.FULLPLAIN]}$`),c("LOOSEPLAIN",`[v=\\s]*${s[i.MAINVERSIONLOOSE]}${s[i.PRERELEASELOOSE]}?${s[i.BUILD]}?`),c("LOOSE",`^${s[i.LOOSEPLAIN]}$`),c("GTLT","((?:<|>)?=?)"),c("XRANGEIDENTIFIERLOOSE",`${s[i.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),c("XRANGEIDENTIFIER",`${s[i.NUMERICIDENTIFIER]}|x|X|\\*`),c("XRANGEPLAIN",`[v=\\s]*(${s[i.XRANGEIDENTIFIER]})(?:\\.(${s[i.XRANGEIDENTIFIER]})(?:\\.(${s[i.XRANGEIDENTIFIER]})(?:${s[i.PRERELEASE]})?${s[i.BUILD]}?)?)?`),c("XRANGEPLAINLOOSE",`[v=\\s]*(${s[i.XRANGEIDENTIFIERLOOSE]})(?:\\.(${s[i.XRANGEIDENTIFIERLOOSE]})(?:\\.(${s[i.XRANGEIDENTIFIERLOOSE]})(?:${s[i.PRERELEASELOOSE]})?${s[i.BUILD]}?)?)?`),c("XRANGE",`^${s[i.GTLT]}\\s*${s[i.XRANGEPLAIN]}$`),c("XRANGELOOSE",`^${s[i.GTLT]}\\s*${s[i.XRANGEPLAINLOOSE]}$`),c("COERCE",`(^|[^\\d])(\\d{1,${u}})(?:\\.(\\d{1,${u}}))?(?:\\.(\\d{1,${u}}))?(?:$|[^\\d])`),c("COERCERTL",s[i.COERCE],!0),c("LONETILDE","(?:~>?)"),c("TILDETRIM",`(\\s*)${s[i.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",c("TILDE",`^${s[i.LONETILDE]}${s[i.XRANGEPLAIN]}$`),c("TILDELOOSE",`^${s[i.LONETILDE]}${s[i.XRANGEPLAINLOOSE]}$`),c("LONECARET","(?:\\^)"),c("CARETTRIM",`(\\s*)${s[i.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",c("CARET",`^${s[i.LONECARET]}${s[i.XRANGEPLAIN]}$`),c("CARETLOOSE",`^${s[i.LONECARET]}${s[i.XRANGEPLAINLOOSE]}$`),c("COMPARATORLOOSE",`^${s[i.GTLT]}\\s*(${s[i.LOOSEPLAIN]})$|^$`),c("COMPARATOR",`^${s[i.GTLT]}\\s*(${s[i.FULLPLAIN]})$|^$`),c("COMPARATORTRIM",`(\\s*)${s[i.GTLT]}\\s*(${s[i.LOOSEPLAIN]}|${s[i.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",c("HYPHENRANGE",`^\\s*(${s[i.XRANGEPLAIN]})\\s+-\\s+(${s[i.XRANGEPLAIN]})\\s*$`),c("HYPHENRANGELOOSE",`^\\s*(${s[i.XRANGEPLAINLOOSE]})\\s+-\\s+(${s[i.XRANGEPLAINLOOSE]})\\s*$`),c("STAR","(<|>)?=?\\s*\\*"),c("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),c("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}}),pl=I({"node_modules/semver/internal/parse-options.js"(e,r){q();var u=["includePrerelease","loose","rtl"];r.exports=D=>D?"object"!=typeof D?{loose:!0}:u.filter((s=>D[s])).reduce(((s,i)=>(s[i]=!0,s)),{}):{}}}),fl=I({"node_modules/semver/internal/identifiers.js"(e,r){q();var u=/^[0-9]+$/,n=(s,i)=>{let f=u.test(s),c=u.test(i);return f&&c&&(s=+s,i=+i),s===i?0:f&&!c?-1:c&&!f?1:s<i?-1:1};r.exports={compareIdentifiers:n,rcompareIdentifiers:(s,i)=>n(i,s)}}}),dl=I({"node_modules/semver/classes/semver.js"(e,r){q();var u=gs(),{MAX_LENGTH:n,MAX_SAFE_INTEGER:D}=Fs(),{re:s,t:i}=hl(),f=pl(),{compareIdentifiers:c}=fl(),F=class{constructor(a,l){if(l=f(l),a instanceof F){if(a.loose===!!l.loose&&a.includePrerelease===!!l.includePrerelease)return a;a=a.version}else if("string"!=typeof a)throw new TypeError(`Invalid Version: ${a}`);if(a.length>n)throw new TypeError(`version is longer than ${n} characters`);u("SemVer",a,l),this.options=l,this.loose=!!l.loose,this.includePrerelease=!!l.includePrerelease;let h=a.trim().match(l.loose?s[i.LOOSE]:s[i.FULL]);if(!h)throw new TypeError(`Invalid Version: ${a}`);if(this.raw=a,this.major=+h[1],this.minor=+h[2],this.patch=+h[3],this.major>D||this.major<0)throw new TypeError("Invalid major version");if(this.minor>D||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>D||this.patch<0)throw new TypeError("Invalid patch version");h[4]?this.prerelease=h[4].split(".").map((C=>{if(/^[0-9]+$/.test(C)){let d=+C;if(d>=0&&d<D)return d}return C})):this.prerelease=[],this.build=h[5]?h[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(a){if(u("SemVer.compare",this.version,this.options,a),!(a instanceof F)){if("string"==typeof a&&a===this.version)return 0;a=new F(a,this.options)}return a.version===this.version?0:this.compareMain(a)||this.comparePre(a)}compareMain(a){return a instanceof F||(a=new F(a,this.options)),c(this.major,a.major)||c(this.minor,a.minor)||c(this.patch,a.patch)}comparePre(a){if(a instanceof F||(a=new F(a,this.options)),this.prerelease.length&&!a.prerelease.length)return-1;if(!this.prerelease.length&&a.prerelease.length)return 1;if(!this.prerelease.length&&!a.prerelease.length)return 0;let l=0;do{let h=this.prerelease[l],C=a.prerelease[l];if(u("prerelease compare",l,h,C),void 0===h&&void 0===C)return 0;if(void 0===C)return 1;if(void 0===h)return-1;if(h!==C)return c(h,C)}while(++l)}compareBuild(a){a instanceof F||(a=new F(a,this.options));let l=0;do{let h=this.build[l],C=a.build[l];if(u("prerelease compare",l,h,C),void 0===h&&void 0===C)return 0;if(void 0===C)return 1;if(void 0===h)return-1;if(h!==C)return c(h,C)}while(++l)}inc(a,l){switch(a){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",l);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",l);break;case"prepatch":this.prerelease.length=0,this.inc("patch",l),this.inc("pre",l);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",l),this.inc("pre",l);break;case"major":(0!==this.minor||0!==this.patch||0===this.prerelease.length)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(0!==this.patch||0===this.prerelease.length)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let h=this.prerelease.length;for(;--h>=0;)"number"==typeof this.prerelease[h]&&(this.prerelease[h]++,h=-2);-1===h&&this.prerelease.push(0)}l&&(0===c(this.prerelease[0],l)?isNaN(this.prerelease[1])&&(this.prerelease=[l,0]):this.prerelease=[l,0]);break;default:throw new Error(`invalid increment argument: ${a}`)}return this.format(),this.raw=this.version,this}};r.exports=F}}),Hr=I({"node_modules/semver/functions/compare.js"(e,r){q();var u=dl();r.exports=(D,s,i)=>new u(D,i).compare(new u(s,i))}}),El=I({"node_modules/semver/functions/lt.js"(e,r){q();var u=Hr();r.exports=(D,s,i)=>u(D,s,i)<0}}),Cl=I({"node_modules/semver/functions/gte.js"(e,r){q();var u=Hr();r.exports=(D,s,i)=>u(D,s,i)>=0}}),ml=I({"src/utils/arrayify.js"(e,r){q(),r.exports=(u,n)=>Object.entries(u).map((D=>{let[s,i]=D;return Object.assign({[n]:s},i)}))}}),gl=I({"package.json"(e,r){r.exports={version:"2.8.7"}}}),Fl=I({"node_modules/outdent/lib/index.js"(e,r){function u(){for(var g=[],N=0;N<arguments.length;N++)g[N]=arguments[N]}function n(){return typeof WeakMap<"u"?new WeakMap:function D(){return{add:u,delete:u,get:u,set:u,has:function(g){return!1}}}()}q(),Object.defineProperty(e,"__esModule",{value:!0}),e.outdent=void 0;var s=Object.prototype.hasOwnProperty,i=function(g,N){return s.call(g,N)};function f(g,N){for(var R in N)i(N,R)&&(g[R]=N[R]);return g}var c=/^[ \t]*(?:\r\n|\r|\n)/,F=/(?:\r\n|\r|\n)[ \t]*$/,a=/^(?:[\r\n]|$)/,l=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,h=/^[ \t]*[\r\n][ \t\r\n]*$/;function C(g,N,R){var j=0,_=g[0].match(l);_&&(j=_[1].length);var x=new RegExp("(\\r\\n|\\r|\\n).{0,"+j+"}","g");N&&(g=g.slice(1));var k=R.newline,$=R.trimLeadingNewline,t=R.trimTrailingNewline,o="string"==typeof k,E=g.length;return g.map((function(A,P){return A=A.replace(x,"$1"),0===P&&$&&(A=A.replace(c,"")),P===E-1&&t&&(A=A.replace(F,"")),o&&(A=A.replace(/\r\n|\n|\r/g,(function(M){return k}))),A}))}var w=function T(g){var N=n(),R=n(),_=f((function j(O){for(var x=[],k=1;k<arguments.length;k++)x[k-1]=arguments[k];if(function m(g){return i(g,"raw")&&i(g,"length")}(O)){var $=O,t=(x[0]===j||x[0]===w)&&h.test($[0])&&a.test($[1]),o=t?R:N,E=o.get($);if(E||(E=C($,t,g),o.set($,E)),0===x.length)return E[0];var p=function d(g,N){for(var R="",j=0,_=g.length;j<_;j++)R+=g[j],j<_-1&&(R+=N[j]);return R}(E,t?x.slice(1):x);return p}return T(f(f({},g),O||{}))}),{string:function(O){return C([O],!1,g)[0]}});return _}({trimLeadingNewline:!0,trimTrailingNewline:!0});if(e.outdent=w,e.default=w,typeof r<"u")try{r.exports=w,Object.defineProperty(w,"__esModule",{value:!0}),w.default=w,w.outdent=w}catch{}}}),Al=I({"src/main/core-options.js"(e,r){q();var{outdent:u}=Fl(),n="Config",D="Editor",i="Other",c="Global",F="Special",a={cursorOffset:{since:"1.4.0",category:F,type:"int",default:-1,range:{start:-1,end:Number.POSITIVE_INFINITY,step:1},description:u`
      Print (to stderr) where a cursor at the given position would move to after formatting.
      This option cannot be used with --range-start and --range-end.
    `,cliCategory:D},endOfLine:{since:"1.15.0",category:c,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:u`
          Maintain existing
          (mixed values within one file are normalised by looking at what's used after the first line)
        `}]},filepath:{since:"1.4.0",category:F,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:i,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:F,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:i},parser:{since:"0.0.10",category:c,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:l=>"string"==typeof l||"function"==typeof l,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"acorn",since:"2.6.0",description:"JavaScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:"2.3.0",description:"Ember / Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:c,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:l=>"string"==typeof l||"object"==typeof l,cliName:"plugin",cliCategory:n},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:c,description:u`
      Custom directory that contains prettier plugins in node_modules subdirectory.
      Overrides default behavior when plugins are searched relatively to the location of Prettier.
      Multiple values are accepted.
    `,exception:l=>"string"==typeof l||"object"==typeof l,cliName:"plugin-search-dir",cliCategory:n},printWidth:{since:"0.0.0",category:c,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},rangeEnd:{since:"1.4.0",category:F,type:"int",default:Number.POSITIVE_INFINITY,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:u`
      Format code ending at a given character offset (exclusive).
      The range will extend forwards to the end of the selected statement.
      This option cannot be used with --cursor-offset.
    `,cliCategory:D},rangeStart:{since:"1.4.0",category:F,type:"int",default:0,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:u`
      Format code starting at a given character offset.
      The range will extend backwards to the start of the first line containing the selected statement.
      This option cannot be used with --cursor-offset.
    `,cliCategory:D},requirePragma:{since:"1.7.0",category:F,type:"boolean",default:!1,description:u`
      Require either '@prettier' or '@format' to be present in the file's first docblock comment
      in order for it to be formatted.
    `,cliCategory:i},tabWidth:{type:"int",category:c,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},useTabs:{since:"1.0.0",category:c,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:c,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}};r.exports={CATEGORY_CONFIG:n,CATEGORY_EDITOR:D,CATEGORY_FORMAT:"Format",CATEGORY_OTHER:i,CATEGORY_OUTPUT:"Output",CATEGORY_GLOBAL:c,CATEGORY_SPECIAL:F,options:a}}}),vl=I({"src/main/support.js"(e,r){q();var u={compare:Hr(),lt:El(),gte:Cl()},n=ml(),D=gl().version,s=Al().options;r.exports={getSupportInfo:function i(){let{plugins:c=[],showUnreleased:F=!1,showDeprecated:a=!1,showInternal:l=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},h=D.split("-",1)[0],C=c.flatMap((g=>g.languages||[])).filter(m),d=n(Object.assign({},...c.map((g=>{let{options:N}=g;return N})),s),"name").filter((g=>m(g)&&T(g))).sort(((g,N)=>g.name===N.name?0:g.name<N.name?-1:1)).map((function w(g){return l?g:JD(g,KD)})).map((g=>{g=Object.assign({},g),Array.isArray(g.default)&&(g.default=1===g.default.length?g.default[0].value:g.default.filter(m).sort(((R,j)=>u.compare(j.since,R.since)))[0].value),Array.isArray(g.choices)&&(g.choices=g.choices.filter((R=>m(R)&&T(R))),"parser"===g.name&&function f(c,F,a){let l=new Set(c.choices.map((h=>h.value)));for(let h of F)if(h.parsers)for(let C of h.parsers)if(!l.has(C)){l.add(C);let d=a.find((T=>T.parsers&&T.parsers[C])),m=h.name;d&&d.name&&(m+=` (plugin: ${d.name})`),c.choices.push({value:C,description:m})}}(g,C,c));let N=Object.fromEntries(c.filter((R=>R.defaultOptions&&void 0!==R.defaultOptions[g.name])).map((R=>[R.name,R.defaultOptions[g.name]])));return Object.assign(Object.assign({},g),{},{pluginDefaults:N})}));return{languages:C,options:d};function m(g){return F||!("since"in g)||g.since&&u.gte(h,g.since)}function T(g){return a||!("deprecated"in g)||g.deprecated&&u.lt(h,g.deprecated)}}}}}),_l=I({"src/utils/is-non-empty-array.js"(e,r){q(),r.exports=function u(n){return Array.isArray(n)&&n.length>0}}});var yl=Ee({"node_modules/strip-ansi/node_modules/ansi-regex/index.js"(){q()}});function Tl(e){if("string"!=typeof e)throw new TypeError(`Expected a \`string\`, got \`${typeof e}\``);return e.replace(function Sl(){let{onlyFirst:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(r,e?void 0:"g")}(),"")}var Bl=Ee({"node_modules/strip-ansi/index.js"(){q(),yl()}});function bl(e){return!!Number.isInteger(e)&&(e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141))}var wl=Ee({"node_modules/is-fullwidth-code-point/index.js"(){q()}}),Nl=I({"node_modules/emoji-regex/index.js"(e,r){q(),r.exports=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g}}}),As={};function Ol(e){if("string"!=typeof e||0===e.length||0===(e=Tl(e)).length)return 0;e=e.replace((0,vs.default)(),"  ");let r=0;for(let u=0;u<e.length;u++){let n=e.codePointAt(u);n<=31||n>=127&&n<=159||n>=768&&n<=879||(n>65535&&u++,r+=bl(n)?2:1)}return r}ps(As,{default:()=>Ol});var vs,ql=Ee({"node_modules/string-width/index.js"(){var e,r,u;q(),Bl(),wl(),e=Nl(),u=null!=e?el(ul(e)):{},vs=fs(!r&&e&&e.__esModule?u:Je(u,"default",{value:e,enumerable:!0}),e)}}),Il=I({"src/utils/get-string-width.js"(e,r){q();var u=(ql(),ds(As)).default,n=/[^\x20-\x7F]/;r.exports=function D(s){return s?n.test(s)?u(s):s.length:0}}}),zr=I({"src/utils/text/skip.js"(e,r){function u(f){return(c,F,a)=>{let l=a&&a.backwards;if(!1===F)return!1;let{length:h}=c,C=F;for(;C>=0&&C<h;){let d=c.charAt(C);if(f instanceof RegExp){if(!f.test(d))return C}else if(!f.includes(d))return C;l?C--:C++}return(-1===C||C===h)&&C}}q();var n=u(/\s/),D=u(" \t"),s=u(",; \t"),i=u(/[^\n\r]/);r.exports={skipWhitespace:n,skipSpaces:D,skipToLineEnd:s,skipEverythingButNewLine:i}}}),_s=I({"src/utils/text/skip-inline-comment.js"(e,r){q(),r.exports=function u(n,D){if(!1===D)return!1;if("/"===n.charAt(D)&&"*"===n.charAt(D+1))for(let s=D+2;s<n.length;++s)if("*"===n.charAt(s)&&"/"===n.charAt(s+1))return s+2;return D}}}),Ss=I({"src/utils/text/skip-trailing-comment.js"(e,r){q();var{skipEverythingButNewLine:u}=zr();r.exports=function n(D,s){return!1!==s&&("/"===D.charAt(s)&&"/"===D.charAt(s+1)?u(D,s):s)}}}),ys=I({"src/utils/text/skip-newline.js"(e,r){q(),r.exports=function u(n,D,s){let i=s&&s.backwards;if(!1===D)return!1;let f=n.charAt(D);if(i){if("\r"===n.charAt(D-1)&&"\n"===f)return D-2;if("\n"===f||"\r"===f||"\u2028"===f||"\u2029"===f)return D-1}else{if("\r"===f&&"\n"===n.charAt(D+1))return D+2;if("\n"===f||"\r"===f||"\u2028"===f||"\u2029"===f)return D+1}return D}}}),Rl=I({"src/utils/text/get-next-non-space-non-comment-character-index-with-start-index.js"(e,r){q();var u=_s(),n=ys(),D=Ss(),{skipSpaces:s}=zr();r.exports=function i(f,c){let F=null,a=c;for(;a!==F;)F=a,a=s(f,a),a=u(f,a),a=D(f,a),a=n(f,a);return a}}}),xl=I({"src/common/util.js"(e,r){q();var{default:u}=(cl(),ds(ms)),n=Cs(),{getSupportInfo:D}=vl(),s=_l(),i=Il(),{skipWhitespace:f,skipSpaces:c,skipToLineEnd:F,skipEverythingButNewLine:a}=zr(),l=_s(),h=Ss(),C=ys(),d=Rl();function w(v,y){let B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},b=c(v,B.backwards?y-1:y,B);return b!==C(v,b,B)}function R(v,y){let B=null,b=y;for(;b!==B;)B=b,b=F(v,b),b=l(v,b),b=c(v,b);return b=h(v,b),b=C(v,b),!1!==b&&w(v,b)}function _(v,y,B){return d(v,B(y))}function k(v,y){let b=0;for(let L=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;L<v.length;++L)"\t"===v[L]?b=b+y-b%y:b++;return b}function t(v,y){let B={quote:'"',regex:/"/g,escaped:"&quot;"},b={quote:"'",regex:/'/g,escaped:"&apos;"},L="'"===y?b:B,U=L===b?B:b,G=L;if(v.includes(L.quote)||v.includes(U.quote)){G=(v.match(L.regex)||[]).length>(v.match(U.regex)||[]).length?U:L}return G}function E(v,y,B){let b='"'===y?"'":'"',U=v.replace(/\\(.)|(["'])/gs,((G,W,ne)=>W===b?W:ne===y?"\\"+ne:ne||(B&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(W)?W:"\\"+W)));return y+U+y}function M(v,y){(v.comments||(v.comments=[])).push(y),y.printed=!1,y.nodeDescription=function J(v){let y=v.type||v.kind||"(unknown type)",B=String(v.name||v.id&&("object"==typeof v.id?v.id.name:v.id)||v.key&&("object"==typeof v.key?v.key.name:v.key)||v.value&&("object"==typeof v.value?"":String(v.value))||v.operator||"");return B.length>20&&(B=B.slice(0,19)+"â¦"),y+(B?" "+B:"")}(v)}r.exports={inferParserByLanguage:function H(v,y){let{languages:B}=D({plugins:y.plugins}),b=B.find((L=>{let{name:U}=L;return U.toLowerCase()===v}))||B.find((L=>{let{aliases:U}=L;return Array.isArray(U)&&U.includes(v)}))||B.find((L=>{let{extensions:U}=L;return Array.isArray(U)&&U.includes(`.${v}`)}));return b&&b.parsers[0]},getStringWidth:i,getMaxContinuousCount:function A(v,y){let B=v.match(new RegExp(`(${u(y)})+`,"g"));return null===B?0:B.reduce(((b,L)=>Math.max(b,L.length/y.length)),0)},getMinNotPresentContinuousCount:function P(v,y){let B=v.match(new RegExp(`(${u(y)})+`,"g"));if(null===B)return 0;let b=new Map,L=0;for(let U of B){let G=U.length/y.length;b.set(G,!0),G>L&&(L=G)}for(let U=1;U<L;U++)if(!b.get(U))return U;return L+1},getPenultimate:v=>v[v.length-2],getLast:n,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:d,getNextNonSpaceNonCommentCharacterIndex:_,getNextNonSpaceNonCommentCharacter:function O(v,y,B){return v.charAt(_(v,y,B))},skip:function T(v){return(y,B,b)=>{let L=b&&b.backwards;if(!1===B)return!1;let{length:U}=y,G=B;for(;G>=0&&G<U;){let W=y.charAt(G);if(v instanceof RegExp){if(!v.test(W))return G}else if(!v.includes(W))return G;L?G--:G++}return(-1===G||G===U)&&G}},skipWhitespace:f,skipSpaces:c,skipToLineEnd:F,skipEverythingButNewLine:a,skipInlineComment:l,skipTrailingComment:h,skipNewline:C,isNextLineEmptyAfterIndex:R,isNextLineEmpty:function j(v,y,B){return R(v,B(y))},isPreviousLineEmpty:function N(v,y,B){let b=B(y)-1;return b=c(v,b,{backwards:!0}),b=C(v,b,{backwards:!0}),b=c(v,b,{backwards:!0}),b!==C(v,b,{backwards:!0})},hasNewline:w,hasNewlineInRange:function g(v,y,B){for(let b=y;b<B;++b)if("\n"===v.charAt(b))return!0;return!1},hasSpaces:function x(v,y){let B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return c(v,B.backwards?y-1:y,B)!==y},getAlignmentSize:k,getIndentSize:function $(v,y){let B=v.lastIndexOf("\n");return-1===B?0:k(v.slice(B+1).match(/^[\t ]*/)[0],y)},getPreferredQuote:t,printString:function o(v,y){let B=v.slice(1,-1);return E(B,"json"===y.parser||"json5"===y.parser&&"preserve"===y.quoteProps&&!y.singleQuote?'"':y.__isInHtmlAttribute?"'":t(B,y.singleQuote?"'":'"').quote,!("css"===y.parser||"less"===y.parser||"scss"===y.parser||y.__embeddedInHtml))},printNumber:function p(v){return v.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},makeString:E,addLeadingComment:function z(v,y){y.leading=!0,y.trailing=!1,M(v,y)},addDanglingComment:function V(v,y,B){y.leading=!1,y.trailing=!1,B&&(y.marker=B),M(v,y)},addTrailingComment:function X(v,y){y.leading=!1,y.trailing=!0,M(v,y)},isFrontMatterNode:function Q(v){return v&&"front-matter"===v.type},isNonEmptyArray:s,createGroupIdMapper:function K(v){let y=new WeakMap;return function(B){return y.has(B)||y.set(B,Symbol(v)),y.get(B)}}}}}),Pl=I({"vendors/html-tag-names.json"(e,r){r.exports={htmlTagNames:["a","abbr","acronym","address","applet","area","article","aside","audio","b","base","basefont","bdi","bdo","bgsound","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","command","content","data","datalist","dd","del","details","dfn","dialog","dir","div","dl","dt","element","em","embed","fieldset","figcaption","figure","font","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","image","img","input","ins","isindex","kbd","keygen","label","legend","li","link","listing","main","map","mark","marquee","math","menu","menuitem","meta","meter","multicol","nav","nextid","nobr","noembed","noframes","noscript","object","ol","optgroup","option","output","p","param","picture","plaintext","pre","progress","q","rb","rbc","rp","rt","rtc","ruby","s","samp","script","section","select","shadow","slot","small","source","spacer","span","strike","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","tt","u","ul","var","video","wbr","xmp"]}}}),Ts=I({"src/language-html/utils/array-to-map.js"(e,r){q(),r.exports=function u(n){let D=Object.create(null);for(let s of n)D[s]=!0;return D}}}),kl=I({"src/language-html/utils/html-tag-names.js"(e,r){q();var{htmlTagNames:u}=Pl(),D=Ts()(u);r.exports=D}}),Ll=I({"vendors/html-element-attributes.json"(e,r){r.exports={htmlElementAttributes:{"*":["accesskey","autocapitalize","autofocus","class","contenteditable","dir","draggable","enterkeyhint","hidden","id","inputmode","is","itemid","itemprop","itemref","itemscope","itemtype","lang","nonce","slot","spellcheck","style","tabindex","title","translate"],a:["charset","coords","download","href","hreflang","name","ping","referrerpolicy","rel","rev","shape","target","type"],applet:["align","alt","archive","code","codebase","height","hspace","name","object","vspace","width"],area:["alt","coords","download","href","hreflang","nohref","ping","referrerpolicy","rel","shape","target","type"],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],base:["href","target"],basefont:["color","face","size"],blockquote:["cite"],body:["alink","background","bgcolor","link","text","vlink"],br:["clear"],button:["disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","name","type","value"],canvas:["height","width"],caption:["align"],col:["align","char","charoff","span","valign","width"],colgroup:["align","char","charoff","span","valign","width"],data:["value"],del:["cite","datetime"],details:["open"],dialog:["open"],dir:["compact"],div:["align"],dl:["compact"],embed:["height","src","type","width"],fieldset:["disabled","form","name"],font:["color","face","size"],form:["accept","accept-charset","action","autocomplete","enctype","method","name","novalidate","target"],frame:["frameborder","longdesc","marginheight","marginwidth","name","noresize","scrolling","src"],frameset:["cols","rows"],h1:["align"],h2:["align"],h3:["align"],h4:["align"],h5:["align"],h6:["align"],head:["profile"],hr:["align","noshade","size","width"],html:["manifest","version"],iframe:["align","allow","allowfullscreen","allowpaymentrequest","allowusermedia","frameborder","height","loading","longdesc","marginheight","marginwidth","name","referrerpolicy","sandbox","scrolling","src","srcdoc","width"],img:["align","alt","border","crossorigin","decoding","height","hspace","ismap","loading","longdesc","name","referrerpolicy","sizes","src","srcset","usemap","vspace","width"],input:["accept","align","alt","autocomplete","checked","dirname","disabled","form","formaction","formenctype","formmethod","formnovalidate","formtarget","height","ismap","list","max","maxlength","min","minlength","multiple","name","pattern","placeholder","readonly","required","size","src","step","type","usemap","value","width"],ins:["cite","datetime"],isindex:["prompt"],label:["for","form"],legend:["align"],li:["type","value"],link:["as","charset","color","crossorigin","disabled","href","hreflang","imagesizes","imagesrcset","integrity","media","referrerpolicy","rel","rev","sizes","target","type"],map:["name"],menu:["compact"],meta:["charset","content","http-equiv","media","name","scheme"],meter:["high","low","max","min","optimum","value"],object:["align","archive","border","classid","codebase","codetype","data","declare","form","height","hspace","name","standby","type","typemustmatch","usemap","vspace","width"],ol:["compact","reversed","start","type"],optgroup:["disabled","label"],option:["disabled","label","selected","value"],output:["for","form","name"],p:["align"],param:["name","type","value","valuetype"],pre:["width"],progress:["max","value"],q:["cite"],script:["async","charset","crossorigin","defer","integrity","language","nomodule","referrerpolicy","src","type"],select:["autocomplete","disabled","form","multiple","name","required","size"],slot:["name"],source:["height","media","sizes","src","srcset","type","width"],style:["media","type"],table:["align","bgcolor","border","cellpadding","cellspacing","frame","rules","summary","width"],tbody:["align","char","charoff","valign"],td:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],textarea:["autocomplete","cols","dirname","disabled","form","maxlength","minlength","name","placeholder","readonly","required","rows","wrap"],tfoot:["align","char","charoff","valign"],th:["abbr","align","axis","bgcolor","char","charoff","colspan","headers","height","nowrap","rowspan","scope","valign","width"],thead:["align","char","charoff","valign"],time:["datetime"],tr:["align","bgcolor","char","charoff","valign"],track:["default","kind","label","src","srclang"],ul:["compact","type"],video:["autoplay","controls","crossorigin","height","loop","muted","playsinline","poster","preload","src","width"]}}}}),$l=I({"src/language-html/utils/map-object.js"(e,r){q(),r.exports=function u(n,D){let s=Object.create(null);for(let[i,f]of Object.entries(n))s[i]=D(f,i);return s}}}),Ml=I({"src/language-html/utils/html-elements-attributes.js"(e,r){q();var{htmlElementAttributes:u}=Ll(),s=$l()(u,Ts());r.exports=s}}),jl=I({"src/language-html/utils/is-unknown-namespace.js"(e,r){q(),r.exports=function u(n){return"element"===n.type&&!n.hasExplicitNamespace&&!["html","svg"].includes(n.namespace)}}}),Ul=I({"src/language-html/pragma.js"(e,r){q(),r.exports={hasPragma:function u(D){return/^\s*<!--\s*@(?:format|prettier)\s*-->/.test(D)},insertPragma:function n(D){return"\x3c!-- @format --\x3e\n\n"+D.replace(/^\s*\n/,"")}}}}),Gl=I({"src/language-html/ast.js"(e,r){q();var u={attrs:!0,children:!0},n=new Set(["parent"]),D=class{constructor(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(let f of new Set([...n,...Object.keys(i)]))this.setProperty(f,i[f])}setProperty(i,f){if(this[i]!==f){if(i in u&&(f=f.map((c=>this.createChild(c)))),!n.has(i))return void(this[i]=f);Object.defineProperty(this,i,{value:f,enumerable:!1,configurable:!0})}}map(i){let f;for(let c in u){let F=this[c];if(F){let a=s(F,(l=>l.map(i)));f!==F&&(f||(f=new D({parent:this.parent})),f.setProperty(c,a))}}if(f)for(let c in this)c in u||(f[c]=this[c]);return i(f||this)}walk(i){for(let f in u){let c=this[f];if(c)for(let F=0;F<c.length;F++)c[F].walk(i)}i(this)}createChild(i){let f=i instanceof D?i.clone():new D(i);return f.setProperty("parent",this),f}insertChildBefore(i,f){this.children.splice(this.children.indexOf(i),0,this.createChild(f))}removeChild(i){this.children.splice(this.children.indexOf(i),1)}replaceChild(i,f){this.children[this.children.indexOf(i)]=this.createChild(f)}clone(){return new D(this)}get firstChild(){var i;return null===(i=this.children)||void 0===i?void 0:i[0]}get lastChild(){var i;return null===(i=this.children)||void 0===i?void 0:i[this.children.length-1]}get prev(){var i;return null===(i=this.parent)||void 0===i?void 0:i.children[this.parent.children.indexOf(this)-1]}get next(){var i;return null===(i=this.parent)||void 0===i?void 0:i.children[this.parent.children.indexOf(this)+1]}get rawName(){return this.hasExplicitNamespace?this.fullName:this.name}get fullName(){return this.namespace?this.namespace+":"+this.name:this.name}get attrMap(){return Object.fromEntries(this.attrs.map((i=>[i.fullName,i.value])))}};function s(i,f){let c=i.map(f);return c.some(((F,a)=>F!==i[a]))?c:i}r.exports={Node:D}}}),Vl=I({"src/language-html/conditional-comment.js"(e,r){q();var{ParseSourceSpan:u}=Be(),n=[{regex:/^(\[if([^\]]*)]>)(.*?)<!\s*\[endif]$/s,parse:function s(c,F,a){let[,l,h,C]=a,d=4+l.length,m=c.sourceSpan.start.moveBy(d),T=m.moveBy(C.length),[w,g]=(()=>{try{return[!0,F(C,m).children]}catch{return[!1,[{type:"text",value:C,sourceSpan:new u(m,T)}]]}})();return{type:"ieConditionalComment",complete:w,children:g,condition:h.trim().replace(/\s+/g," "),sourceSpan:c.sourceSpan,startSourceSpan:new u(c.sourceSpan.start,m),endSourceSpan:new u(T,c.sourceSpan.end)}}},{regex:/^\[if([^\]]*)]><!$/,parse:function i(c,F,a){let[,l]=a;return{type:"ieConditionalStartComment",condition:l.trim().replace(/\s+/g," "),sourceSpan:c.sourceSpan}}},{regex:/^<!\s*\[endif]$/,parse:function f(c){return{type:"ieConditionalEndComment",sourceSpan:c.sourceSpan}}}];r.exports={parseIeConditionalComment:function D(c,F){if(c.value)for(let{regex:a,parse:l}of n){let h=c.value.match(a);if(h)return l(c,F,h)}return null}}}}),Xl=I({"src/language-html/loc.js"(e,r){q(),r.exports={locStart:function u(D){return D.sourceSpan.start.offset},locEnd:function n(D){return D.sourceSpan.end.offset}}}}),Ze=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/tags.js"(e){var c;function u(c){if(":"!=c[0])return[null,c];let F=c.indexOf(":",1);if(-1==F)throw new Error(`Unsupported format "${c}" expecting ":namespace:name"`);return[c.slice(1,F),c.slice(F+1)]}q(),Object.defineProperty(e,"__esModule",{value:!0}),(c=e.TagContentType||(e.TagContentType={}))[c.RAW_TEXT=0]="RAW_TEXT",c[c.ESCAPABLE_RAW_TEXT=1]="ESCAPABLE_RAW_TEXT",c[c.PARSABLE_DATA=2]="PARSABLE_DATA",e.splitNsName=u,e.isNgContainer=function n(c){return"ng-container"===u(c)[1]},e.isNgContent=function D(c){return"ng-content"===u(c)[1]},e.isNgTemplate=function s(c){return"ng-template"===u(c)[1]},e.getNsPrefix=function i(c){return null===c?null:u(c)[0]},e.mergeNsAndName=function f(c,F){return c?`:${c}:${F}`:F},e.NAMED_ENTITIES={Aacute:"Ã",aacute:"Ã¡",Abreve:"Ä",abreve:"Ä",ac:"â¾",acd:"â¿",acE:"â¾Ì³",Acirc:"Ã",acirc:"Ã¢",acute:"Â´",Acy:"Ð",acy:"Ð°",AElig:"Ã",aelig:"Ã¦",af:"â¡",Afr:"ð",afr:"ð",Agrave:"Ã",agrave:"Ã ",alefsym:"âµ",aleph:"âµ",Alpha:"Î",alpha:"Î±",Amacr:"Ä",amacr:"Ä",amalg:"â¨¿",AMP:"&",amp:"&",And:"â©",and:"â§",andand:"â©",andd:"â©",andslope:"â©",andv:"â©",ang:"â ",ange:"â¦¤",angle:"â ",angmsd:"â¡",angmsdaa:"â¦¨",angmsdab:"â¦©",angmsdac:"â¦ª",angmsdad:"â¦«",angmsdae:"â¦¬",angmsdaf:"â¦­",angmsdag:"â¦®",angmsdah:"â¦¯",angrt:"â",angrtvb:"â¾",angrtvbd:"â¦",angsph:"â¢",angst:"Ã",angzarr:"â¼",Aogon:"Ä",aogon:"Ä",Aopf:"ð¸",aopf:"ð",ap:"â",apacir:"â©¯",apE:"â©°",ape:"â",apid:"â",apos:"'",ApplyFunction:"â¡",approx:"â",approxeq:"â",Aring:"Ã",aring:"Ã¥",Ascr:"ð",ascr:"ð¶",Assign:"â",ast:"*",asymp:"â",asympeq:"â",Atilde:"Ã",atilde:"Ã£",Auml:"Ã",auml:"Ã¤",awconint:"â³",awint:"â¨",backcong:"â",backepsilon:"Ï¶",backprime:"âµ",backsim:"â½",backsimeq:"â",Backslash:"â",Barv:"â«§",barvee:"â½",Barwed:"â",barwed:"â",barwedge:"â",bbrk:"âµ",bbrktbrk:"â¶",bcong:"â",Bcy:"Ð",bcy:"Ð±",bdquo:"â",becaus:"âµ",Because:"âµ",because:"âµ",bemptyv:"â¦°",bepsi:"Ï¶",bernou:"â¬",Bernoullis:"â¬",Beta:"Î",beta:"Î²",beth:"â¶",between:"â¬",Bfr:"ð",bfr:"ð",bigcap:"â",bigcirc:"â¯",bigcup:"â",bigodot:"â¨",bigoplus:"â¨",bigotimes:"â¨",bigsqcup:"â¨",bigstar:"â",bigtriangledown:"â½",bigtriangleup:"â³",biguplus:"â¨",bigvee:"â",bigwedge:"â",bkarow:"â¤",blacklozenge:"â§«",blacksquare:"âª",blacktriangle:"â´",blacktriangledown:"â¾",blacktriangleleft:"â",blacktriangleright:"â¸",blank:"â£",blk12:"â",blk14:"â",blk34:"â",block:"â",bne:"=â¥",bnequiv:"â¡â¥",bNot:"â«­",bnot:"â",Bopf:"ð¹",bopf:"ð",bot:"â¥",bottom:"â¥",bowtie:"â",boxbox:"â§",boxDL:"â",boxDl:"â",boxdL:"â",boxdl:"â",boxDR:"â",boxDr:"â",boxdR:"â",boxdr:"â",boxH:"â",boxh:"â",boxHD:"â¦",boxHd:"â¤",boxhD:"â¥",boxhd:"â¬",boxHU:"â©",boxHu:"â§",boxhU:"â¨",boxhu:"â´",boxminus:"â",boxplus:"â",boxtimes:"â ",boxUL:"â",boxUl:"â",boxuL:"â",boxul:"â",boxUR:"â",boxUr:"â",boxuR:"â",boxur:"â",boxV:"â",boxv:"â",boxVH:"â¬",boxVh:"â«",boxvH:"âª",boxvh:"â¼",boxVL:"â£",boxVl:"â¢",boxvL:"â¡",boxvl:"â¤",boxVR:"â ",boxVr:"â",boxvR:"â",boxvr:"â",bprime:"âµ",Breve:"Ë",breve:"Ë",brvbar:"Â¦",Bscr:"â¬",bscr:"ð·",bsemi:"â",bsim:"â½",bsime:"â",bsol:"\\",bsolb:"â§",bsolhsub:"â",bull:"â¢",bullet:"â¢",bump:"â",bumpE:"âª®",bumpe:"â",Bumpeq:"â",bumpeq:"â",Cacute:"Ä",cacute:"Ä",Cap:"â",cap:"â©",capand:"â©",capbrcup:"â©",capcap:"â©",capcup:"â©",capdot:"â©",CapitalDifferentialD:"â",caps:"â©ï¸",caret:"â",caron:"Ë",Cayleys:"â­",ccaps:"â©",Ccaron:"Ä",ccaron:"Ä",Ccedil:"Ã",ccedil:"Ã§",Ccirc:"Ä",ccirc:"Ä",Cconint:"â°",ccups:"â©",ccupssm:"â©",Cdot:"Ä",cdot:"Ä",cedil:"Â¸",Cedilla:"Â¸",cemptyv:"â¦²",cent:"Â¢",CenterDot:"Â·",centerdot:"Â·",Cfr:"â­",cfr:"ð ",CHcy:"Ð§",chcy:"Ñ",check:"â",checkmark:"â",Chi:"Î§",chi:"Ï",cir:"â",circ:"Ë",circeq:"â",circlearrowleft:"âº",circlearrowright:"â»",circledast:"â",circledcirc:"â",circleddash:"â",CircleDot:"â",circledR:"Â®",circledS:"â",CircleMinus:"â",CirclePlus:"â",CircleTimes:"â",cirE:"â§",cire:"â",cirfnint:"â¨",cirmid:"â«¯",cirscir:"â§",ClockwiseContourIntegral:"â²",CloseCurlyDoubleQuote:"â",CloseCurlyQuote:"â",clubs:"â£",clubsuit:"â£",Colon:"â·",colon:":",Colone:"â©´",colone:"â",coloneq:"â",comma:",",commat:"@",comp:"â",compfn:"â",complement:"â",complexes:"â",cong:"â",congdot:"â©­",Congruent:"â¡",Conint:"â¯",conint:"â®",ContourIntegral:"â®",Copf:"â",copf:"ð",coprod:"â",Coproduct:"â",COPY:"Â©",copy:"Â©",copysr:"â",CounterClockwiseContourIntegral:"â³",crarr:"âµ",Cross:"â¨¯",cross:"â",Cscr:"ð",cscr:"ð¸",csub:"â«",csube:"â«",csup:"â«",csupe:"â«",ctdot:"â¯",cudarrl:"â¤¸",cudarrr:"â¤µ",cuepr:"â",cuesc:"â",cularr:"â¶",cularrp:"â¤½",Cup:"â",cup:"âª",cupbrcap:"â©",CupCap:"â",cupcap:"â©",cupcup:"â©",cupdot:"â",cupor:"â©",cups:"âªï¸",curarr:"â·",curarrm:"â¤¼",curlyeqprec:"â",curlyeqsucc:"â",curlyvee:"â",curlywedge:"â",curren:"Â¤",curvearrowleft:"â¶",curvearrowright:"â·",cuvee:"â",cuwed:"â",cwconint:"â²",cwint:"â±",cylcty:"â­",Dagger:"â¡",dagger:"â ",daleth:"â¸",Darr:"â¡",dArr:"â",darr:"â",dash:"â",Dashv:"â«¤",dashv:"â£",dbkarow:"â¤",dblac:"Ë",Dcaron:"Ä",dcaron:"Ä",Dcy:"Ð",dcy:"Ð´",DD:"â",dd:"â",ddagger:"â¡",ddarr:"â",DDotrahd:"â¤",ddotseq:"â©·",deg:"Â°",Del:"â",Delta:"Î",delta:"Î´",demptyv:"â¦±",dfisht:"â¥¿",Dfr:"ð",dfr:"ð¡",dHar:"â¥¥",dharl:"â",dharr:"â",DiacriticalAcute:"Â´",DiacriticalDot:"Ë",DiacriticalDoubleAcute:"Ë",DiacriticalGrave:"`",DiacriticalTilde:"Ë",diam:"â",Diamond:"â",diamond:"â",diamondsuit:"â¦",diams:"â¦",die:"Â¨",DifferentialD:"â",digamma:"Ï",disin:"â²",div:"Ã·",divide:"Ã·",divideontimes:"â",divonx:"â",DJcy:"Ð",djcy:"Ñ",dlcorn:"â",dlcrop:"â",dollar:"$",Dopf:"ð»",dopf:"ð",Dot:"Â¨",dot:"Ë",DotDot:"â",doteq:"â",doteqdot:"â",DotEqual:"â",dotminus:"â¸",dotplus:"â",dotsquare:"â¡",doublebarwedge:"â",DoubleContourIntegral:"â¯",DoubleDot:"Â¨",DoubleDownArrow:"â",DoubleLeftArrow:"â",DoubleLeftRightArrow:"â",DoubleLeftTee:"â«¤",DoubleLongLeftArrow:"â¸",DoubleLongLeftRightArrow:"âº",DoubleLongRightArrow:"â¹",DoubleRightArrow:"â",DoubleRightTee:"â¨",DoubleUpArrow:"â",DoubleUpDownArrow:"â",DoubleVerticalBar:"â¥",DownArrow:"â",Downarrow:"â",downarrow:"â",DownArrowBar:"â¤",DownArrowUpArrow:"âµ",DownBreve:"Ì",downdownarrows:"â",downharpoonleft:"â",downharpoonright:"â",DownLeftRightVector:"â¥",DownLeftTeeVector:"â¥",DownLeftVector:"â½",DownLeftVectorBar:"â¥",DownRightTeeVector:"â¥",DownRightVector:"â",DownRightVectorBar:"â¥",DownTee:"â¤",DownTeeArrow:"â§",drbkarow:"â¤",drcorn:"â",drcrop:"â",Dscr:"ð",dscr:"ð¹",DScy:"Ð",dscy:"Ñ",dsol:"â§¶",Dstrok:"Ä",dstrok:"Ä",dtdot:"â±",dtri:"â¿",dtrif:"â¾",duarr:"âµ",duhar:"â¥¯",dwangle:"â¦¦",DZcy:"Ð",dzcy:"Ñ",dzigrarr:"â¿",Eacute:"Ã",eacute:"Ã©",easter:"â©®",Ecaron:"Ä",ecaron:"Ä",ecir:"â",Ecirc:"Ã",ecirc:"Ãª",ecolon:"â",Ecy:"Ð­",ecy:"Ñ",eDDot:"â©·",Edot:"Ä",eDot:"â",edot:"Ä",ee:"â",efDot:"â",Efr:"ð",efr:"ð¢",eg:"âª",Egrave:"Ã",egrave:"Ã¨",egs:"âª",egsdot:"âª",el:"âª",Element:"â",elinters:"â§",ell:"â",els:"âª",elsdot:"âª",Emacr:"Ä",emacr:"Ä",empty:"â",emptyset:"â",EmptySmallSquare:"â»",emptyv:"â",EmptyVerySmallSquare:"â«",emsp:"â",emsp13:"â",emsp14:"â",ENG:"Å",eng:"Å",ensp:"â",Eogon:"Ä",eogon:"Ä",Eopf:"ð¼",eopf:"ð",epar:"â",eparsl:"â§£",eplus:"â©±",epsi:"Îµ",Epsilon:"Î",epsilon:"Îµ",epsiv:"Ïµ",eqcirc:"â",eqcolon:"â",eqsim:"â",eqslantgtr:"âª",eqslantless:"âª",Equal:"â©µ",equals:"=",EqualTilde:"â",equest:"â",Equilibrium:"â",equiv:"â¡",equivDD:"â©¸",eqvparsl:"â§¥",erarr:"â¥±",erDot:"â",Escr:"â°",escr:"â¯",esdot:"â",Esim:"â©³",esim:"â",Eta:"Î",eta:"Î·",ETH:"Ã",eth:"Ã°",Euml:"Ã",euml:"Ã«",euro:"â¬",excl:"!",exist:"â",Exists:"â",expectation:"â°",ExponentialE:"â",exponentiale:"â",fallingdotseq:"â",Fcy:"Ð¤",fcy:"Ñ",female:"â",ffilig:"ï¬",fflig:"ï¬",ffllig:"ï¬",Ffr:"ð",ffr:"ð£",filig:"ï¬",FilledSmallSquare:"â¼",FilledVerySmallSquare:"âª",fjlig:"fj",flat:"â­",fllig:"ï¬",fltns:"â±",fnof:"Æ",Fopf:"ð½",fopf:"ð",ForAll:"â",forall:"â",fork:"â",forkv:"â«",Fouriertrf:"â±",fpartint:"â¨",frac12:"Â½",frac13:"â",frac14:"Â¼",frac15:"â",frac16:"â",frac18:"â",frac23:"â",frac25:"â",frac34:"Â¾",frac35:"â",frac38:"â",frac45:"â",frac56:"â",frac58:"â",frac78:"â",frasl:"â",frown:"â¢",Fscr:"â±",fscr:"ð»",gacute:"Çµ",Gamma:"Î",gamma:"Î³",Gammad:"Ï",gammad:"Ï",gap:"âª",Gbreve:"Ä",gbreve:"Ä",Gcedil:"Ä¢",Gcirc:"Ä",gcirc:"Ä",Gcy:"Ð",gcy:"Ð³",Gdot:"Ä ",gdot:"Ä¡",gE:"â§",ge:"â¥",gEl:"âª",gel:"â",geq:"â¥",geqq:"â§",geqslant:"â©¾",ges:"â©¾",gescc:"âª©",gesdot:"âª",gesdoto:"âª",gesdotol:"âª",gesl:"âï¸",gesles:"âª",Gfr:"ð",gfr:"ð¤",Gg:"â",gg:"â«",ggg:"â",gimel:"â·",GJcy:"Ð",gjcy:"Ñ",gl:"â·",gla:"âª¥",glE:"âª",glj:"âª¤",gnap:"âª",gnapprox:"âª",gnE:"â©",gne:"âª",gneq:"âª",gneqq:"â©",gnsim:"â§",Gopf:"ð¾",gopf:"ð",grave:"`",GreaterEqual:"â¥",GreaterEqualLess:"â",GreaterFullEqual:"â§",GreaterGreater:"âª¢",GreaterLess:"â·",GreaterSlantEqual:"â©¾",GreaterTilde:"â³",Gscr:"ð¢",gscr:"â",gsim:"â³",gsime:"âª",gsiml:"âª",GT:">",Gt:"â«",gt:">",gtcc:"âª§",gtcir:"â©º",gtdot:"â",gtlPar:"â¦",gtquest:"â©¼",gtrapprox:"âª",gtrarr:"â¥¸",gtrdot:"â",gtreqless:"â",gtreqqless:"âª",gtrless:"â·",gtrsim:"â³",gvertneqq:"â©ï¸",gvnE:"â©ï¸",Hacek:"Ë",hairsp:"â",half:"Â½",hamilt:"â",HARDcy:"Ðª",hardcy:"Ñ",hArr:"â",harr:"â",harrcir:"â¥",harrw:"â­",Hat:"^",hbar:"â",Hcirc:"Ä¤",hcirc:"Ä¥",hearts:"â¥",heartsuit:"â¥",hellip:"â¦",hercon:"â¹",Hfr:"â",hfr:"ð¥",HilbertSpace:"â",hksearow:"â¤¥",hkswarow:"â¤¦",hoarr:"â¿",homtht:"â»",hookleftarrow:"â©",hookrightarrow:"âª",Hopf:"â",hopf:"ð",horbar:"â",HorizontalLine:"â",Hscr:"â",hscr:"ð½",hslash:"â",Hstrok:"Ä¦",hstrok:"Ä§",HumpDownHump:"â",HumpEqual:"â",hybull:"â",hyphen:"â",Iacute:"Ã",iacute:"Ã­",ic:"â£",Icirc:"Ã",icirc:"Ã®",Icy:"Ð",icy:"Ð¸",Idot:"Ä°",IEcy:"Ð",iecy:"Ðµ",iexcl:"Â¡",iff:"â",Ifr:"â",ifr:"ð¦",Igrave:"Ã",igrave:"Ã¬",ii:"â",iiiint:"â¨",iiint:"â­",iinfin:"â§",iiota:"â©",IJlig:"Ä²",ijlig:"Ä³",Im:"â",Imacr:"Äª",imacr:"Ä«",image:"â",ImaginaryI:"â",imagline:"â",imagpart:"â",imath:"Ä±",imof:"â·",imped:"Æµ",Implies:"â",in:"â",incare:"â",infin:"â",infintie:"â§",inodot:"Ä±",Int:"â¬",int:"â«",intcal:"âº",integers:"â¤",Integral:"â«",intercal:"âº",Intersection:"â",intlarhk:"â¨",intprod:"â¨¼",InvisibleComma:"â£",InvisibleTimes:"â¢",IOcy:"Ð",iocy:"Ñ",Iogon:"Ä®",iogon:"Ä¯",Iopf:"ð",iopf:"ð",Iota:"Î",iota:"Î¹",iprod:"â¨¼",iquest:"Â¿",Iscr:"â",iscr:"ð¾",isin:"â",isindot:"âµ",isinE:"â¹",isins:"â´",isinsv:"â³",isinv:"â",it:"â¢",Itilde:"Ä¨",itilde:"Ä©",Iukcy:"Ð",iukcy:"Ñ",Iuml:"Ã",iuml:"Ã¯",Jcirc:"Ä´",jcirc:"Äµ",Jcy:"Ð",jcy:"Ð¹",Jfr:"ð",jfr:"ð§",jmath:"È·",Jopf:"ð",jopf:"ð",Jscr:"ð¥",jscr:"ð¿",Jsercy:"Ð",jsercy:"Ñ",Jukcy:"Ð",jukcy:"Ñ",Kappa:"Î",kappa:"Îº",kappav:"Ï°",Kcedil:"Ä¶",kcedil:"Ä·",Kcy:"Ð",kcy:"Ðº",Kfr:"ð",kfr:"ð¨",kgreen:"Ä¸",KHcy:"Ð¥",khcy:"Ñ",KJcy:"Ð",kjcy:"Ñ",Kopf:"ð",kopf:"ð",Kscr:"ð¦",kscr:"ð",lAarr:"â",Lacute:"Ä¹",lacute:"Äº",laemptyv:"â¦´",lagran:"â",Lambda:"Î",lambda:"Î»",Lang:"âª",lang:"â¨",langd:"â¦",langle:"â¨",lap:"âª",Laplacetrf:"â",laquo:"Â«",Larr:"â",lArr:"â",larr:"â",larrb:"â¤",larrbfs:"â¤",larrfs:"â¤",larrhk:"â©",larrlp:"â«",larrpl:"â¤¹",larrsim:"â¥³",larrtl:"â¢",lat:"âª«",lAtail:"â¤",latail:"â¤",late:"âª­",lates:"âª­ï¸",lBarr:"â¤",lbarr:"â¤",lbbrk:"â²",lbrace:"{",lbrack:"[",lbrke:"â¦",lbrksld:"â¦",lbrkslu:"â¦",Lcaron:"Ä½",lcaron:"Ä¾",Lcedil:"Ä»",lcedil:"Ä¼",lceil:"â",lcub:"{",Lcy:"Ð",lcy:"Ð»",ldca:"â¤¶",ldquo:"â",ldquor:"â",ldrdhar:"â¥§",ldrushar:"â¥",ldsh:"â²",lE:"â¦",le:"â¤",LeftAngleBracket:"â¨",LeftArrow:"â",Leftarrow:"â",leftarrow:"â",LeftArrowBar:"â¤",LeftArrowRightArrow:"â",leftarrowtail:"â¢",LeftCeiling:"â",LeftDoubleBracket:"â¦",LeftDownTeeVector:"â¥¡",LeftDownVector:"â",LeftDownVectorBar:"â¥",LeftFloor:"â",leftharpoondown:"â½",leftharpoonup:"â¼",leftleftarrows:"â",LeftRightArrow:"â",Leftrightarrow:"â",leftrightarrow:"â",leftrightarrows:"â",leftrightharpoons:"â",leftrightsquigarrow:"â­",LeftRightVector:"â¥",LeftTee:"â£",LeftTeeArrow:"â¤",LeftTeeVector:"â¥",leftthreetimes:"â",LeftTriangle:"â²",LeftTriangleBar:"â§",LeftTriangleEqual:"â´",LeftUpDownVector:"â¥",LeftUpTeeVector:"â¥ ",LeftUpVector:"â¿",LeftUpVectorBar:"â¥",LeftVector:"â¼",LeftVectorBar:"â¥",lEg:"âª",leg:"â",leq:"â¤",leqq:"â¦",leqslant:"â©½",les:"â©½",lescc:"âª¨",lesdot:"â©¿",lesdoto:"âª",lesdotor:"âª",lesg:"âï¸",lesges:"âª",lessapprox:"âª",lessdot:"â",lesseqgtr:"â",lesseqqgtr:"âª",LessEqualGreater:"â",LessFullEqual:"â¦",LessGreater:"â¶",lessgtr:"â¶",LessLess:"âª¡",lesssim:"â²",LessSlantEqual:"â©½",LessTilde:"â²",lfisht:"â¥¼",lfloor:"â",Lfr:"ð",lfr:"ð©",lg:"â¶",lgE:"âª",lHar:"â¥¢",lhard:"â½",lharu:"â¼",lharul:"â¥ª",lhblk:"â",LJcy:"Ð",ljcy:"Ñ",Ll:"â",ll:"âª",llarr:"â",llcorner:"â",Lleftarrow:"â",llhard:"â¥«",lltri:"âº",Lmidot:"Ä¿",lmidot:"Å",lmoust:"â°",lmoustache:"â°",lnap:"âª",lnapprox:"âª",lnE:"â¨",lne:"âª",lneq:"âª",lneqq:"â¨",lnsim:"â¦",loang:"â¬",loarr:"â½",lobrk:"â¦",LongLeftArrow:"âµ",Longleftarrow:"â¸",longleftarrow:"âµ",LongLeftRightArrow:"â·",Longleftrightarrow:"âº",longleftrightarrow:"â·",longmapsto:"â¼",LongRightArrow:"â¶",Longrightarrow:"â¹",longrightarrow:"â¶",looparrowleft:"â«",looparrowright:"â¬",lopar:"â¦",Lopf:"ð",lopf:"ð",loplus:"â¨­",lotimes:"â¨´",lowast:"â",lowbar:"_",LowerLeftArrow:"â",LowerRightArrow:"â",loz:"â",lozenge:"â",lozf:"â§«",lpar:"(",lparlt:"â¦",lrarr:"â",lrcorner:"â",lrhar:"â",lrhard:"â¥­",lrm:"â",lrtri:"â¿",lsaquo:"â¹",Lscr:"â",lscr:"ð",Lsh:"â°",lsh:"â°",lsim:"â²",lsime:"âª",lsimg:"âª",lsqb:"[",lsquo:"â",lsquor:"â",Lstrok:"Å",lstrok:"Å",LT:"<",Lt:"âª",lt:"<",ltcc:"âª¦",ltcir:"â©¹",ltdot:"â",lthree:"â",ltimes:"â",ltlarr:"â¥¶",ltquest:"â©»",ltri:"â",ltrie:"â´",ltrif:"â",ltrPar:"â¦",lurdshar:"â¥",luruhar:"â¥¦",lvertneqq:"â¨ï¸",lvnE:"â¨ï¸",macr:"Â¯",male:"â",malt:"â ",maltese:"â ",Map:"â¤",map:"â¦",mapsto:"â¦",mapstodown:"â§",mapstoleft:"â¤",mapstoup:"â¥",marker:"â®",mcomma:"â¨©",Mcy:"Ð",mcy:"Ð¼",mdash:"â",mDDot:"âº",measuredangle:"â¡",MediumSpace:"â",Mellintrf:"â³",Mfr:"ð",mfr:"ðª",mho:"â§",micro:"Âµ",mid:"â£",midast:"*",midcir:"â«°",middot:"Â·",minus:"â",minusb:"â",minusd:"â¸",minusdu:"â¨ª",MinusPlus:"â",mlcp:"â«",mldr:"â¦",mnplus:"â",models:"â§",Mopf:"ð",mopf:"ð",mp:"â",Mscr:"â³",mscr:"ð",mstpos:"â¾",Mu:"Î",mu:"Î¼",multimap:"â¸",mumap:"â¸",nabla:"â",Nacute:"Å",nacute:"Å",nang:"â â",nap:"â",napE:"â©°Ì¸",napid:"âÌ¸",napos:"Å",napprox:"â",natur:"â®",natural:"â®",naturals:"â",nbsp:"Â ",nbump:"âÌ¸",nbumpe:"âÌ¸",ncap:"â©",Ncaron:"Å",ncaron:"Å",Ncedil:"Å",ncedil:"Å",ncong:"â",ncongdot:"â©­Ì¸",ncup:"â©",Ncy:"Ð",ncy:"Ð½",ndash:"â",ne:"â ",nearhk:"â¤¤",neArr:"â",nearr:"â",nearrow:"â",nedot:"âÌ¸",NegativeMediumSpace:"â",NegativeThickSpace:"â",NegativeThinSpace:"â",NegativeVeryThinSpace:"â",nequiv:"â¢",nesear:"â¤¨",nesim:"âÌ¸",NestedGreaterGreater:"â«",NestedLessLess:"âª",NewLine:"\n",nexist:"â",nexists:"â",Nfr:"ð",nfr:"ð«",ngE:"â§Ì¸",nge:"â±",ngeq:"â±",ngeqq:"â§Ì¸",ngeqslant:"â©¾Ì¸",nges:"â©¾Ì¸",nGg:"âÌ¸",ngsim:"âµ",nGt:"â«â",ngt:"â¯",ngtr:"â¯",nGtv:"â«Ì¸",nhArr:"â",nharr:"â®",nhpar:"â«²",ni:"â",nis:"â¼",nisd:"âº",niv:"â",NJcy:"Ð",njcy:"Ñ",nlArr:"â",nlarr:"â",nldr:"â¥",nlE:"â¦Ì¸",nle:"â°",nLeftarrow:"â",nleftarrow:"â",nLeftrightarrow:"â",nleftrightarrow:"â®",nleq:"â°",nleqq:"â¦Ì¸",nleqslant:"â©½Ì¸",nles:"â©½Ì¸",nless:"â®",nLl:"âÌ¸",nlsim:"â´",nLt:"âªâ",nlt:"â®",nltri:"âª",nltrie:"â¬",nLtv:"âªÌ¸",nmid:"â¤",NoBreak:"â ",NonBreakingSpace:"Â ",Nopf:"â",nopf:"ð",Not:"â«¬",not:"Â¬",NotCongruent:"â¢",NotCupCap:"â­",NotDoubleVerticalBar:"â¦",NotElement:"â",NotEqual:"â ",NotEqualTilde:"âÌ¸",NotExists:"â",NotGreater:"â¯",NotGreaterEqual:"â±",NotGreaterFullEqual:"â§Ì¸",NotGreaterGreater:"â«Ì¸",NotGreaterLess:"â¹",NotGreaterSlantEqual:"â©¾Ì¸",NotGreaterTilde:"âµ",NotHumpDownHump:"âÌ¸",NotHumpEqual:"âÌ¸",notin:"â",notindot:"âµÌ¸",notinE:"â¹Ì¸",notinva:"â",notinvb:"â·",notinvc:"â¶",NotLeftTriangle:"âª",NotLeftTriangleBar:"â§Ì¸",NotLeftTriangleEqual:"â¬",NotLess:"â®",NotLessEqual:"â°",NotLessGreater:"â¸",NotLessLess:"âªÌ¸",NotLessSlantEqual:"â©½Ì¸",NotLessTilde:"â´",NotNestedGreaterGreater:"âª¢Ì¸",NotNestedLessLess:"âª¡Ì¸",notni:"â",notniva:"â",notnivb:"â¾",notnivc:"â½",NotPrecedes:"â",NotPrecedesEqual:"âª¯Ì¸",NotPrecedesSlantEqual:"â ",NotReverseElement:"â",NotRightTriangle:"â«",NotRightTriangleBar:"â§Ì¸",NotRightTriangleEqual:"â­",NotSquareSubset:"âÌ¸",NotSquareSubsetEqual:"â¢",NotSquareSuperset:"âÌ¸",NotSquareSupersetEqual:"â£",NotSubset:"ââ",NotSubsetEqual:"â",NotSucceeds:"â",NotSucceedsEqual:"âª°Ì¸",NotSucceedsSlantEqual:"â¡",NotSucceedsTilde:"â¿Ì¸",NotSuperset:"ââ",NotSupersetEqual:"â",NotTilde:"â",NotTildeEqual:"â",NotTildeFullEqual:"â",NotTildeTilde:"â",NotVerticalBar:"â¤",npar:"â¦",nparallel:"â¦",nparsl:"â«½â¥",npart:"âÌ¸",npolint:"â¨",npr:"â",nprcue:"â ",npre:"âª¯Ì¸",nprec:"â",npreceq:"âª¯Ì¸",nrArr:"â",nrarr:"â",nrarrc:"â¤³Ì¸",nrarrw:"âÌ¸",nRightarrow:"â",nrightarrow:"â",nrtri:"â«",nrtrie:"â­",nsc:"â",nsccue:"â¡",nsce:"âª°Ì¸",Nscr:"ð©",nscr:"ð",nshortmid:"â¤",nshortparallel:"â¦",nsim:"â",nsime:"â",nsimeq:"â",nsmid:"â¤",nspar:"â¦",nsqsube:"â¢",nsqsupe:"â£",nsub:"â",nsubE:"â«Ì¸",nsube:"â",nsubset:"ââ",nsubseteq:"â",nsubseteqq:"â«Ì¸",nsucc:"â",nsucceq:"âª°Ì¸",nsup:"â",nsupE:"â«Ì¸",nsupe:"â",nsupset:"ââ",nsupseteq:"â",nsupseteqq:"â«Ì¸",ntgl:"â¹",Ntilde:"Ã",ntilde:"Ã±",ntlg:"â¸",ntriangleleft:"âª",ntrianglelefteq:"â¬",ntriangleright:"â«",ntrianglerighteq:"â­",Nu:"Î",nu:"Î½",num:"#",numero:"â",numsp:"â",nvap:"ââ",nVDash:"â¯",nVdash:"â®",nvDash:"â­",nvdash:"â¬",nvge:"â¥â",nvgt:">â",nvHarr:"â¤",nvinfin:"â§",nvlArr:"â¤",nvle:"â¤â",nvlt:"<â",nvltrie:"â´â",nvrArr:"â¤",nvrtrie:"âµâ",nvsim:"â¼â",nwarhk:"â¤£",nwArr:"â",nwarr:"â",nwarrow:"â",nwnear:"â¤§",Oacute:"Ã",oacute:"Ã³",oast:"â",ocir:"â",Ocirc:"Ã",ocirc:"Ã´",Ocy:"Ð",ocy:"Ð¾",odash:"â",Odblac:"Å",odblac:"Å",odiv:"â¨¸",odot:"â",odsold:"â¦¼",OElig:"Å",oelig:"Å",ofcir:"â¦¿",Ofr:"ð",ofr:"ð¬",ogon:"Ë",Ograve:"Ã",ograve:"Ã²",ogt:"â§",ohbar:"â¦µ",ohm:"Î©",oint:"â®",olarr:"âº",olcir:"â¦¾",olcross:"â¦»",oline:"â¾",olt:"â§",Omacr:"Å",omacr:"Å",Omega:"Î©",omega:"Ï",Omicron:"Î",omicron:"Î¿",omid:"â¦¶",ominus:"â",Oopf:"ð",oopf:"ð ",opar:"â¦·",OpenCurlyDoubleQuote:"â",OpenCurlyQuote:"â",operp:"â¦¹",oplus:"â",Or:"â©",or:"â¨",orarr:"â»",ord:"â©",order:"â´",orderof:"â´",ordf:"Âª",ordm:"Âº",origof:"â¶",oror:"â©",orslope:"â©",orv:"â©",oS:"â",Oscr:"ðª",oscr:"â´",Oslash:"Ã",oslash:"Ã¸",osol:"â",Otilde:"Ã",otilde:"Ãµ",Otimes:"â¨·",otimes:"â",otimesas:"â¨¶",Ouml:"Ã",ouml:"Ã¶",ovbar:"â½",OverBar:"â¾",OverBrace:"â",OverBracket:"â´",OverParenthesis:"â",par:"â¥",para:"Â¶",parallel:"â¥",parsim:"â«³",parsl:"â«½",part:"â",PartialD:"â",Pcy:"Ð",pcy:"Ð¿",percnt:"%",period:".",permil:"â°",perp:"â¥",pertenk:"â±",Pfr:"ð",pfr:"ð­",Phi:"Î¦",phi:"Ï",phiv:"Ï",phmmat:"â³",phone:"â",Pi:"Î ",pi:"Ï",pitchfork:"â",piv:"Ï",planck:"â",planckh:"â",plankv:"â",plus:"+",plusacir:"â¨£",plusb:"â",pluscir:"â¨¢",plusdo:"â",plusdu:"â¨¥",pluse:"â©²",PlusMinus:"Â±",plusmn:"Â±",plussim:"â¨¦",plustwo:"â¨§",pm:"Â±",Poincareplane:"â",pointint:"â¨",Popf:"â",popf:"ð¡",pound:"Â£",Pr:"âª»",pr:"âº",prap:"âª·",prcue:"â¼",prE:"âª³",pre:"âª¯",prec:"âº",precapprox:"âª·",preccurlyeq:"â¼",Precedes:"âº",PrecedesEqual:"âª¯",PrecedesSlantEqual:"â¼",PrecedesTilde:"â¾",preceq:"âª¯",precnapprox:"âª¹",precneqq:"âªµ",precnsim:"â¨",precsim:"â¾",Prime:"â³",prime:"â²",primes:"â",prnap:"âª¹",prnE:"âªµ",prnsim:"â¨",prod:"â",Product:"â",profalar:"â®",profline:"â",profsurf:"â",prop:"â",Proportion:"â·",Proportional:"â",propto:"â",prsim:"â¾",prurel:"â°",Pscr:"ð«",pscr:"ð",Psi:"Î¨",psi:"Ï",puncsp:"â",Qfr:"ð",qfr:"ð®",qint:"â¨",Qopf:"â",qopf:"ð¢",qprime:"â",Qscr:"ð¬",qscr:"ð",quaternions:"â",quatint:"â¨",quest:"?",questeq:"â",QUOT:'"',quot:'"',rAarr:"â",race:"â½Ì±",Racute:"Å",racute:"Å",radic:"â",raemptyv:"â¦³",Rang:"â«",rang:"â©",rangd:"â¦",range:"â¦¥",rangle:"â©",raquo:"Â»",Rarr:"â ",rArr:"â",rarr:"â",rarrap:"â¥µ",rarrb:"â¥",rarrbfs:"â¤ ",rarrc:"â¤³",rarrfs:"â¤",rarrhk:"âª",rarrlp:"â¬",rarrpl:"â¥",rarrsim:"â¥´",Rarrtl:"â¤",rarrtl:"â£",rarrw:"â",rAtail:"â¤",ratail:"â¤",ratio:"â¶",rationals:"â",RBarr:"â¤",rBarr:"â¤",rbarr:"â¤",rbbrk:"â³",rbrace:"}",rbrack:"]",rbrke:"â¦",rbrksld:"â¦",rbrkslu:"â¦",Rcaron:"Å",rcaron:"Å",Rcedil:"Å",rcedil:"Å",rceil:"â",rcub:"}",Rcy:"Ð ",rcy:"Ñ",rdca:"â¤·",rdldhar:"â¥©",rdquo:"â",rdquor:"â",rdsh:"â³",Re:"â",real:"â",realine:"â",realpart:"â",reals:"â",rect:"â­",REG:"Â®",reg:"Â®",ReverseElement:"â",ReverseEquilibrium:"â",ReverseUpEquilibrium:"â¥¯",rfisht:"â¥½",rfloor:"â",Rfr:"â",rfr:"ð¯",rHar:"â¥¤",rhard:"â",rharu:"â",rharul:"â¥¬",Rho:"Î¡",rho:"Ï",rhov:"Ï±",RightAngleBracket:"â©",RightArrow:"â",Rightarrow:"â",rightarrow:"â",RightArrowBar:"â¥",RightArrowLeftArrow:"â",rightarrowtail:"â£",RightCeiling:"â",RightDoubleBracket:"â§",RightDownTeeVector:"â¥",RightDownVector:"â",RightDownVectorBar:"â¥",RightFloor:"â",rightharpoondown:"â",rightharpoonup:"â",rightleftarrows:"â",rightleftharpoons:"â",rightrightarrows:"â",rightsquigarrow:"â",RightTee:"â¢",RightTeeArrow:"â¦",RightTeeVector:"â¥",rightthreetimes:"â",RightTriangle:"â³",RightTriangleBar:"â§",RightTriangleEqual:"âµ",RightUpDownVector:"â¥",RightUpTeeVector:"â¥",RightUpVector:"â¾",RightUpVectorBar:"â¥",RightVector:"â",RightVectorBar:"â¥",ring:"Ë",risingdotseq:"â",rlarr:"â",rlhar:"â",rlm:"â",rmoust:"â±",rmoustache:"â±",rnmid:"â«®",roang:"â­",roarr:"â¾",robrk:"â§",ropar:"â¦",Ropf:"â",ropf:"ð£",roplus:"â¨®",rotimes:"â¨µ",RoundImplies:"â¥°",rpar:")",rpargt:"â¦",rppolint:"â¨",rrarr:"â",Rrightarrow:"â",rsaquo:"âº",Rscr:"â",rscr:"ð",Rsh:"â±",rsh:"â±",rsqb:"]",rsquo:"â",rsquor:"â",rthree:"â",rtimes:"â",rtri:"â¹",rtrie:"âµ",rtrif:"â¸",rtriltri:"â§",RuleDelayed:"â§´",ruluhar:"â¥¨",rx:"â",Sacute:"Å",sacute:"Å",sbquo:"â",Sc:"âª¼",sc:"â»",scap:"âª¸",Scaron:"Å ",scaron:"Å¡",sccue:"â½",scE:"âª´",sce:"âª°",Scedil:"Å",scedil:"Å",Scirc:"Å",scirc:"Å",scnap:"âªº",scnE:"âª¶",scnsim:"â©",scpolint:"â¨",scsim:"â¿",Scy:"Ð¡",scy:"Ñ",sdot:"â",sdotb:"â¡",sdote:"â©¦",searhk:"â¤¥",seArr:"â",searr:"â",searrow:"â",sect:"Â§",semi:";",seswar:"â¤©",setminus:"â",setmn:"â",sext:"â¶",Sfr:"ð",sfr:"ð°",sfrown:"â¢",sharp:"â¯",SHCHcy:"Ð©",shchcy:"Ñ",SHcy:"Ð¨",shcy:"Ñ",ShortDownArrow:"â",ShortLeftArrow:"â",shortmid:"â£",shortparallel:"â¥",ShortRightArrow:"â",ShortUpArrow:"â",shy:"Â­",Sigma:"Î£",sigma:"Ï",sigmaf:"Ï",sigmav:"Ï",sim:"â¼",simdot:"â©ª",sime:"â",simeq:"â",simg:"âª",simgE:"âª ",siml:"âª",simlE:"âª",simne:"â",simplus:"â¨¤",simrarr:"â¥²",slarr:"â",SmallCircle:"â",smallsetminus:"â",smashp:"â¨³",smeparsl:"â§¤",smid:"â£",smile:"â£",smt:"âªª",smte:"âª¬",smtes:"âª¬ï¸",SOFTcy:"Ð¬",softcy:"Ñ",sol:"/",solb:"â§",solbar:"â¿",Sopf:"ð",sopf:"ð¤",spades:"â ",spadesuit:"â ",spar:"â¥",sqcap:"â",sqcaps:"âï¸",sqcup:"â",sqcups:"âï¸",Sqrt:"â",sqsub:"â",sqsube:"â",sqsubset:"â",sqsubseteq:"â",sqsup:"â",sqsupe:"â",sqsupset:"â",sqsupseteq:"â",squ:"â¡",Square:"â¡",square:"â¡",SquareIntersection:"â",SquareSubset:"â",SquareSubsetEqual:"â",SquareSuperset:"â",SquareSupersetEqual:"â",SquareUnion:"â",squarf:"âª",squf:"âª",srarr:"â",Sscr:"ð®",sscr:"ð",ssetmn:"â",ssmile:"â£",sstarf:"â",Star:"â",star:"â",starf:"â",straightepsilon:"Ïµ",straightphi:"Ï",strns:"Â¯",Sub:"â",sub:"â",subdot:"âª½",subE:"â«",sube:"â",subedot:"â«",submult:"â«",subnE:"â«",subne:"â",subplus:"âª¿",subrarr:"â¥¹",Subset:"â",subset:"â",subseteq:"â",subseteqq:"â«",SubsetEqual:"â",subsetneq:"â",subsetneqq:"â«",subsim:"â«",subsub:"â«",subsup:"â«",succ:"â»",succapprox:"âª¸",succcurlyeq:"â½",Succeeds:"â»",SucceedsEqual:"âª°",SucceedsSlantEqual:"â½",SucceedsTilde:"â¿",succeq:"âª°",succnapprox:"âªº",succneqq:"âª¶",succnsim:"â©",succsim:"â¿",SuchThat:"â",Sum:"â",sum:"â",sung:"âª",Sup:"â",sup:"â",sup1:"Â¹",sup2:"Â²",sup3:"Â³",supdot:"âª¾",supdsub:"â«",supE:"â«",supe:"â",supedot:"â«",Superset:"â",SupersetEqual:"â",suphsol:"â",suphsub:"â«",suplarr:"â¥»",supmult:"â«",supnE:"â«",supne:"â",supplus:"â«",Supset:"â",supset:"â",supseteq:"â",supseteqq:"â«",supsetneq:"â",supsetneqq:"â«",supsim:"â«",supsub:"â«",supsup:"â«",swarhk:"â¤¦",swArr:"â",swarr:"â",swarrow:"â",swnwar:"â¤ª",szlig:"Ã",Tab:"\t",target:"â",Tau:"Î¤",tau:"Ï",tbrk:"â´",Tcaron:"Å¤",tcaron:"Å¥",Tcedil:"Å¢",tcedil:"Å£",Tcy:"Ð¢",tcy:"Ñ",tdot:"â",telrec:"â",Tfr:"ð",tfr:"ð±",there4:"â´",Therefore:"â´",therefore:"â´",Theta:"Î",theta:"Î¸",thetasym:"Ï",thetav:"Ï",thickapprox:"â",thicksim:"â¼",ThickSpace:"ââ",thinsp:"â",ThinSpace:"â",thkap:"â",thksim:"â¼",THORN:"Ã",thorn:"Ã¾",Tilde:"â¼",tilde:"Ë",TildeEqual:"â",TildeFullEqual:"â",TildeTilde:"â",times:"Ã",timesb:"â ",timesbar:"â¨±",timesd:"â¨°",tint:"â­",toea:"â¤¨",top:"â¤",topbot:"â¶",topcir:"â«±",Topf:"ð",topf:"ð¥",topfork:"â«",tosa:"â¤©",tprime:"â´",TRADE:"â¢",trade:"â¢",triangle:"âµ",triangledown:"â¿",triangleleft:"â",trianglelefteq:"â´",triangleq:"â",triangleright:"â¹",trianglerighteq:"âµ",tridot:"â¬",trie:"â",triminus:"â¨º",TripleDot:"â",triplus:"â¨¹",trisb:"â§",tritime:"â¨»",trpezium:"â¢",Tscr:"ð¯",tscr:"ð",TScy:"Ð¦",tscy:"Ñ",TSHcy:"Ð",tshcy:"Ñ",Tstrok:"Å¦",tstrok:"Å§",twixt:"â¬",twoheadleftarrow:"â",twoheadrightarrow:"â ",Uacute:"Ã",uacute:"Ãº",Uarr:"â",uArr:"â",uarr:"â",Uarrocir:"â¥",Ubrcy:"Ð",ubrcy:"Ñ",Ubreve:"Å¬",ubreve:"Å­",Ucirc:"Ã",ucirc:"Ã»",Ucy:"Ð£",ucy:"Ñ",udarr:"â",Udblac:"Å°",udblac:"Å±",udhar:"â¥®",ufisht:"â¥¾",Ufr:"ð",ufr:"ð²",Ugrave:"Ã",ugrave:"Ã¹",uHar:"â¥£",uharl:"â¿",uharr:"â¾",uhblk:"â",ulcorn:"â",ulcorner:"â",ulcrop:"â",ultri:"â¸",Umacr:"Åª",umacr:"Å«",uml:"Â¨",UnderBar:"_",UnderBrace:"â",UnderBracket:"âµ",UnderParenthesis:"â",Union:"â",UnionPlus:"â",Uogon:"Å²",uogon:"Å³",Uopf:"ð",uopf:"ð¦",UpArrow:"â",Uparrow:"â",uparrow:"â",UpArrowBar:"â¤",UpArrowDownArrow:"â",UpDownArrow:"â",Updownarrow:"â",updownarrow:"â",UpEquilibrium:"â¥®",upharpoonleft:"â¿",upharpoonright:"â¾",uplus:"â",UpperLeftArrow:"â",UpperRightArrow:"â",Upsi:"Ï",upsi:"Ï",upsih:"Ï",Upsilon:"Î¥",upsilon:"Ï",UpTee:"â¥",UpTeeArrow:"â¥",upuparrows:"â",urcorn:"â",urcorner:"â",urcrop:"â",Uring:"Å®",uring:"Å¯",urtri:"â¹",Uscr:"ð°",uscr:"ð",utdot:"â°",Utilde:"Å¨",utilde:"Å©",utri:"âµ",utrif:"â´",uuarr:"â",Uuml:"Ã",uuml:"Ã¼",uwangle:"â¦§",vangrt:"â¦",varepsilon:"Ïµ",varkappa:"Ï°",varnothing:"â",varphi:"Ï",varpi:"Ï",varpropto:"â",vArr:"â",varr:"â",varrho:"Ï±",varsigma:"Ï",varsubsetneq:"âï¸",varsubsetneqq:"â«ï¸",varsupsetneq:"âï¸",varsupsetneqq:"â«ï¸",vartheta:"Ï",vartriangleleft:"â²",vartriangleright:"â³",Vbar:"â««",vBar:"â«¨",vBarv:"â«©",Vcy:"Ð",vcy:"Ð²",VDash:"â«",Vdash:"â©",vDash:"â¨",vdash:"â¢",Vdashl:"â«¦",Vee:"â",vee:"â¨",veebar:"â»",veeeq:"â",vellip:"â®",Verbar:"â",verbar:"|",Vert:"â",vert:"|",VerticalBar:"â£",VerticalLine:"|",VerticalSeparator:"â",VerticalTilde:"â",VeryThinSpace:"â",Vfr:"ð",vfr:"ð³",vltri:"â²",vnsub:"ââ",vnsup:"ââ",Vopf:"ð",vopf:"ð§",vprop:"â",vrtri:"â³",Vscr:"ð±",vscr:"ð",vsubnE:"â«ï¸",vsubne:"âï¸",vsupnE:"â«ï¸",vsupne:"âï¸",Vvdash:"âª",vzigzag:"â¦",Wcirc:"Å´",wcirc:"Åµ",wedbar:"â©",Wedge:"â",wedge:"â§",wedgeq:"â",weierp:"â",Wfr:"ð",wfr:"ð´",Wopf:"ð",wopf:"ð¨",wp:"â",wr:"â",wreath:"â",Wscr:"ð²",wscr:"ð",xcap:"â",xcirc:"â¯",xcup:"â",xdtri:"â½",Xfr:"ð",xfr:"ðµ",xhArr:"âº",xharr:"â·",Xi:"Î",xi:"Î¾",xlArr:"â¸",xlarr:"âµ",xmap:"â¼",xnis:"â»",xodot:"â¨",Xopf:"ð",xopf:"ð©",xoplus:"â¨",xotime:"â¨",xrArr:"â¹",xrarr:"â¶",Xscr:"ð³",xscr:"ð",xsqcup:"â¨",xuplus:"â¨",xutri:"â³",xvee:"â",xwedge:"â",Yacute:"Ã",yacute:"Ã½",YAcy:"Ð¯",yacy:"Ñ",Ycirc:"Å¶",ycirc:"Å·",Ycy:"Ð«",ycy:"Ñ",yen:"Â¥",Yfr:"ð",yfr:"ð¶",YIcy:"Ð",yicy:"Ñ",Yopf:"ð",yopf:"ðª",Yscr:"ð´",yscr:"ð",YUcy:"Ð®",yucy:"Ñ",Yuml:"Å¸",yuml:"Ã¿",Zacute:"Å¹",zacute:"Åº",Zcaron:"Å½",zcaron:"Å¾",Zcy:"Ð",zcy:"Ð·",Zdot:"Å»",zdot:"Å¼",zeetrf:"â¨",ZeroWidthSpace:"â",Zeta:"Î",zeta:"Î¶",Zfr:"â¨",zfr:"ð·",ZHcy:"Ð",zhcy:"Ð¶",zigrarr:"â",Zopf:"â¤",zopf:"ð«",Zscr:"ðµ",zscr:"ð",zwj:"â",zwnj:"â"},e.NGSP_UNICODE="î",e.NAMED_ENTITIES.ngsp=e.NGSP_UNICODE}}),Bs=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/html_tags.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var n,D,r=Ze(),u=class{constructor(){let{closedByChildren:i,implicitNamespacePrefix:f,contentType:c=r.TagContentType.PARSABLE_DATA,closedByParent:F=!1,isVoid:a=!1,ignoreFirstLf:l=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.closedByChildren={},this.closedByParent=!1,this.canSelfClose=!1,i&&i.length>0&&i.forEach((h=>this.closedByChildren[h]=!0)),this.isVoid=a,this.closedByParent=F||a,this.implicitNamespacePrefix=f||null,this.contentType=c,this.ignoreFirstLf=l}isClosedByChild(i){return this.isVoid||i.toLowerCase()in this.closedByChildren}};e.HtmlTagDefinition=u,e.getHtmlTagDefinition=function s(i){return D||(n=new u,D={base:new u({isVoid:!0}),meta:new u({isVoid:!0}),area:new u({isVoid:!0}),embed:new u({isVoid:!0}),link:new u({isVoid:!0}),img:new u({isVoid:!0}),input:new u({isVoid:!0}),param:new u({isVoid:!0}),hr:new u({isVoid:!0}),br:new u({isVoid:!0}),source:new u({isVoid:!0}),track:new u({isVoid:!0}),wbr:new u({isVoid:!0}),p:new u({closedByChildren:["address","article","aside","blockquote","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","main","nav","ol","p","pre","section","table","ul"],closedByParent:!0}),thead:new u({closedByChildren:["tbody","tfoot"]}),tbody:new u({closedByChildren:["tbody","tfoot"],closedByParent:!0}),tfoot:new u({closedByChildren:["tbody"],closedByParent:!0}),tr:new u({closedByChildren:["tr"],closedByParent:!0}),td:new u({closedByChildren:["td","th"],closedByParent:!0}),th:new u({closedByChildren:["td","th"],closedByParent:!0}),col:new u({isVoid:!0}),svg:new u({implicitNamespacePrefix:"svg"}),math:new u({implicitNamespacePrefix:"math"}),li:new u({closedByChildren:["li"],closedByParent:!0}),dt:new u({closedByChildren:["dt","dd"]}),dd:new u({closedByChildren:["dt","dd"],closedByParent:!0}),rb:new u({closedByChildren:["rb","rt","rtc","rp"],closedByParent:!0}),rt:new u({closedByChildren:["rb","rt","rtc","rp"],closedByParent:!0}),rtc:new u({closedByChildren:["rb","rtc","rp"],closedByParent:!0}),rp:new u({closedByChildren:["rb","rt","rtc","rp"],closedByParent:!0}),optgroup:new u({closedByChildren:["optgroup"],closedByParent:!0}),option:new u({closedByChildren:["option","optgroup"],closedByParent:!0}),pre:new u({ignoreFirstLf:!0}),listing:new u({ignoreFirstLf:!0}),style:new u({contentType:r.TagContentType.RAW_TEXT}),script:new u({contentType:r.TagContentType.RAW_TEXT}),title:new u({contentType:r.TagContentType.ESCAPABLE_RAW_TEXT}),textarea:new u({contentType:r.TagContentType.ESCAPABLE_RAW_TEXT,ignoreFirstLf:!0})}),D[i]||n}}}),Hl=I({"node_modules/angular-html-parser/lib/compiler/src/ast_path.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});e.AstPath=class{constructor(u){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;this.path=u,this.position=n}get empty(){return!this.path||!this.path.length}get head(){return this.path[0]}get tail(){return this.path[this.path.length-1]}parentOf(u){return u&&this.path[this.path.indexOf(u)-1]}childOf(u){return this.path[this.path.indexOf(u)+1]}first(u){for(let n=this.path.length-1;n>=0;n--){let D=this.path[n];if(D instanceof u)return D}}push(u){this.path.push(u)}pop(){return this.path.pop()}}}}),bs=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/ast.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=Hl();e.Text=class{constructor(d,m,T){this.value=d,this.sourceSpan=m,this.i18n=T,this.type="text"}visit(d,m){return d.visitText(this,m)}};e.CDATA=class{constructor(d,m){this.value=d,this.sourceSpan=m,this.type="cdata"}visit(d,m){return d.visitCdata(this,m)}};e.Expansion=class{constructor(d,m,T,w,g,N){this.switchValue=d,this.type=m,this.cases=T,this.sourceSpan=w,this.switchValueSourceSpan=g,this.i18n=N}visit(d,m){return d.visitExpansion(this,m)}};e.ExpansionCase=class{constructor(d,m,T,w,g){this.value=d,this.expression=m,this.sourceSpan=T,this.valueSourceSpan=w,this.expSourceSpan=g}visit(d,m){return d.visitExpansionCase(this,m)}};e.Attribute=class{constructor(d,m,T){let w=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.name=d,this.value=m,this.sourceSpan=T,this.valueSpan=w,this.nameSpan=g,this.i18n=N,this.type="attribute"}visit(d,m){return d.visitAttribute(this,m)}};var f=class{constructor(d,m,T,w){let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,N=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,R=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,j=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.name=d,this.attrs=m,this.children=T,this.sourceSpan=w,this.startSourceSpan=g,this.endSourceSpan=N,this.nameSpan=R,this.i18n=j,this.type="element"}visit(d,m){return d.visitElement(this,m)}};e.Element=f;e.Comment=class{constructor(d,m){this.value=d,this.sourceSpan=m,this.type="comment"}visit(d,m){return d.visitComment(this,m)}};function a(d,m){let T=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,w=[],g=d.visit?N=>d.visit(N,T)||N.visit(d,T):N=>N.visit(d,T);return m.forEach((N=>{let R=g(N);R&&w.push(R)})),w}e.DocType=class{constructor(d,m){this.value=d,this.sourceSpan=m,this.type="docType"}visit(d,m){return d.visitDocType(this,m)}},e.visitAll=a;var l=class{constructor(){}visitElement(d,m){this.visitChildren(m,(T=>{T(d.attrs),T(d.children)}))}visitAttribute(d,m){}visitText(d,m){}visitCdata(d,m){}visitComment(d,m){}visitDocType(d,m){}visitExpansion(d,m){return this.visitChildren(m,(T=>{T(d.cases)}))}visitExpansionCase(d,m){}visitChildren(d,m){let T=[],w=this;return m((function g(N){N&&T.push(a(w,N,d))})),Array.prototype.concat.apply([],T)}};function h(d){let m=d.sourceSpan.start.offset,T=d.sourceSpan.end.offset;return d instanceof f&&(d.endSourceSpan?T=d.endSourceSpan.end.offset:d.children&&d.children.length&&(T=h(d.children[d.children.length-1]).end)),{start:m,end:T}}e.RecursiveVisitor=l,e.findNode=function C(d,m){let T=[];return a(new class extends l{visit(g,N){let R=h(g);if(!(R.start<=m&&m<R.end))return!0;T.push(g)}},d),new r.AstPath(T,m)}}}),zl=I({"node_modules/angular-html-parser/lib/compiler/src/assertions.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0}),e.assertArrayOfStrings=function r(D,s){if(null!=s){if(!Array.isArray(s))throw new Error(`Expected '${D}' to be an array of strings.`);for(let i=0;i<s.length;i+=1)if("string"!=typeof s[i])throw new Error(`Expected '${D}' to be an array of strings.`)}};var u=[/^\s*$/,/[<>]/,/^[{}]$/,/&(#|[a-z])/i,/^\/\//];e.assertInterpolationSymbols=function n(D,s){if(null!=s&&(!Array.isArray(s)||2!=s.length))throw new Error(`Expected '${D}' to be an array, [start, end].`);if(null!=s){let i=s[0],f=s[1];u.forEach((c=>{if(c.test(i)||c.test(f))throw new Error(`['${i}', '${f}'] contains unusable interpolation symbol.`)}))}}}}),Wl=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/interpolation_config.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=zl(),u=class{constructor(n,D){this.start=n,this.end=D}static fromArray(n){return n?(r.assertInterpolationSymbols("interpolation",n),new u(n[0],n[1])):e.DEFAULT_INTERPOLATION_CONFIG}};e.InterpolationConfig=u,e.DEFAULT_INTERPOLATION_CONFIG=new u("{{","}}")}}),Yl=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/lexer.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var s,t,r=Es(),u=Be(),n=Wl(),D=Ze();(t=s=e.TokenType||(e.TokenType={}))[t.TAG_OPEN_START=0]="TAG_OPEN_START",t[t.TAG_OPEN_END=1]="TAG_OPEN_END",t[t.TAG_OPEN_END_VOID=2]="TAG_OPEN_END_VOID",t[t.TAG_CLOSE=3]="TAG_CLOSE",t[t.TEXT=4]="TEXT",t[t.ESCAPABLE_RAW_TEXT=5]="ESCAPABLE_RAW_TEXT",t[t.RAW_TEXT=6]="RAW_TEXT",t[t.COMMENT_START=7]="COMMENT_START",t[t.COMMENT_END=8]="COMMENT_END",t[t.CDATA_START=9]="CDATA_START",t[t.CDATA_END=10]="CDATA_END",t[t.ATTR_NAME=11]="ATTR_NAME",t[t.ATTR_QUOTE=12]="ATTR_QUOTE",t[t.ATTR_VALUE=13]="ATTR_VALUE",t[t.DOC_TYPE_START=14]="DOC_TYPE_START",t[t.DOC_TYPE_END=15]="DOC_TYPE_END",t[t.EXPANSION_FORM_START=16]="EXPANSION_FORM_START",t[t.EXPANSION_CASE_VALUE=17]="EXPANSION_CASE_VALUE",t[t.EXPANSION_CASE_EXP_START=18]="EXPANSION_CASE_EXP_START",t[t.EXPANSION_CASE_EXP_END=19]="EXPANSION_CASE_EXP_END",t[t.EXPANSION_FORM_END=20]="EXPANSION_FORM_END",t[t.EOF=21]="EOF";var i=class{constructor(t,o,E){this.type=t,this.parts=o,this.sourceSpan=E}};e.Token=i;var f=class extends u.ParseError{constructor(t,o,E){super(E,t),this.tokenType=o}};e.TokenError=f;var c=class{constructor(t,o){this.tokens=t,this.errors=o}};e.TokenizeResult=c,e.tokenize=function F(t,o,E){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return new d(new u.ParseSourceFile(t,o),E,p).tokenize()};var a=/\r\n?/g;function l(t){return`Unexpected character "${t===r.$EOF?"EOF":String.fromCharCode(t)}"`}function h(t){return`Unknown entity "${t}" - use the "&#<decimal>;" or  "&#x<hex>;" syntax`}var C=class{constructor(t){this.error=t}},d=class{constructor(t,o,E){this._getTagContentType=o,this._currentTokenStart=null,this._currentTokenType=null,this._expansionCaseStack=[],this._inInterpolation=!1,this._fullNameStack=[],this.tokens=[],this.errors=[],this._tokenizeIcu=E.tokenizeExpansionForms||!1,this._interpolationConfig=E.interpolationConfig||n.DEFAULT_INTERPOLATION_CONFIG,this._leadingTriviaCodePoints=E.leadingTriviaChars&&E.leadingTriviaChars.map((A=>A.codePointAt(0)||0)),this._canSelfClose=E.canSelfClose||!1,this._allowHtmComponentClosingTags=E.allowHtmComponentClosingTags||!1;let p=E.range||{endPos:t.content.length,startPos:0,startLine:0,startCol:0};this._cursor=E.escapedString?new k(t,p):new x(t,p);try{this._cursor.init()}catch(A){this.handleError(A)}}_processCarriageReturns(t){return t.replace(a,"\n")}tokenize(){for(;this._cursor.peek()!==r.$EOF;){let t=this._cursor.clone();try{if(this._attemptCharCode(r.$LT))if(this._attemptCharCode(r.$BANG))this._attemptStr("[CDATA[")?this._consumeCdata(t):this._attemptStr("--")?this._consumeComment(t):this._attemptStrCaseInsensitive("doctype")?this._consumeDocType(t):this._consumeBogusComment(t);else if(this._attemptCharCode(r.$SLASH))this._consumeTagClose(t);else{let o=this._cursor.clone();this._attemptCharCode(r.$QUESTION)?(this._cursor=o,this._consumeBogusComment(t)):this._consumeTagOpen(t)}else this._tokenizeIcu&&this._tokenizeExpansionForm()||this._consumeText()}catch(o){this.handleError(o)}}return this._beginToken(s.EOF),this._endToken([]),new c(function O(t){let E,o=[];for(let p=0;p<t.length;p++){let A=t[p];E&&E.type==s.TEXT&&A.type==s.TEXT?(E.parts[0]+=A.parts[0],E.sourceSpan.end=A.sourceSpan.end):(E=A,o.push(E))}return o}(this.tokens),this.errors)}_tokenizeExpansionForm(){if(this.isExpansionFormStart())return this._consumeExpansionFormStart(),!0;if(function R(t){return t===r.$EQ||r.isAsciiLetter(t)||r.isDigit(t)}(this._cursor.peek())&&this._isInExpansionForm())return this._consumeExpansionCaseStart(),!0;if(this._cursor.peek()===r.$RBRACE){if(this._isInExpansionCase())return this._consumeExpansionCaseEnd(),!0;if(this._isInExpansionForm())return this._consumeExpansionFormEnd(),!0}return!1}_beginToken(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._cursor.clone();this._currentTokenStart=o,this._currentTokenType=t}_endToken(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._cursor.clone();if(null===this._currentTokenStart)throw new f("Programming error - attempted to end a token when there was no start to the token",this._currentTokenType,this._cursor.getSpan(o));if(null===this._currentTokenType)throw new f("Programming error - attempted to end a token which has no token type",null,this._cursor.getSpan(this._currentTokenStart));let E=new i(this._currentTokenType,t,this._cursor.getSpan(this._currentTokenStart,this._leadingTriviaCodePoints));return this.tokens.push(E),this._currentTokenStart=null,this._currentTokenType=null,E}_createError(t,o){this._isInExpansionForm()&&(t+=' (Do you have an unescaped "{" in your template? Use "{{ \'{\' }}") to escape it.)');let E=new f(t,this._currentTokenType,o);return this._currentTokenStart=null,this._currentTokenType=null,new C(E)}handleError(t){if(t instanceof $&&(t=this._createError(t.msg,this._cursor.getSpan(t.cursor))),!(t instanceof C))throw t;this.errors.push(t.error)}_attemptCharCode(t){return this._cursor.peek()===t&&(this._cursor.advance(),!0)}_attemptCharCodeCaseInsensitive(t){return!!function j(t,o){return _(t)==_(o)}(this._cursor.peek(),t)&&(this._cursor.advance(),!0)}_requireCharCode(t){let o=this._cursor.clone();if(!this._attemptCharCode(t))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(o))}_attemptStr(t){let o=t.length;if(this._cursor.charsLeft()<o)return!1;let E=this._cursor.clone();for(let p=0;p<o;p++)if(!this._attemptCharCode(t.charCodeAt(p)))return this._cursor=E,!1;return!0}_attemptStrCaseInsensitive(t){for(let o=0;o<t.length;o++)if(!this._attemptCharCodeCaseInsensitive(t.charCodeAt(o)))return!1;return!0}_requireStr(t){let o=this._cursor.clone();if(!this._attemptStr(t))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(o))}_requireStrCaseInsensitive(t){let o=this._cursor.clone();if(!this._attemptStrCaseInsensitive(t))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(o))}_attemptCharCodeUntilFn(t){for(;!t(this._cursor.peek());)this._cursor.advance()}_requireCharCodeUntilFn(t,o){let E=this._cursor.clone();if(this._attemptCharCodeUntilFn(t),this._cursor.clone().diff(E)<o)throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(E))}_attemptUntilChar(t){for(;this._cursor.peek()!==t;)this._cursor.advance()}_readChar(t){if(t&&this._cursor.peek()===r.$AMPERSAND)return this._decodeEntity();{let o=String.fromCodePoint(this._cursor.peek());return this._cursor.advance(),o}}_decodeEntity(){let t=this._cursor.clone();if(this._cursor.advance(),!this._attemptCharCode(r.$HASH)){let o=this._cursor.clone();if(this._attemptCharCodeUntilFn(N),this._cursor.peek()!=r.$SEMICOLON)return this._cursor=o,"&";let E=this._cursor.getChars(o);this._cursor.advance();let p=D.NAMED_ENTITIES[E];if(!p)throw this._createError(h(E),this._cursor.getSpan(t));return p}{let o=this._attemptCharCode(r.$x)||this._attemptCharCode(r.$X),E=this._cursor.clone();if(this._attemptCharCodeUntilFn(g),this._cursor.peek()!=r.$SEMICOLON)throw this._createError(l(this._cursor.peek()),this._cursor.getSpan());let p=this._cursor.getChars(E);this._cursor.advance();try{let A=parseInt(p,o?16:10);return String.fromCharCode(A)}catch{throw this._createError(h(this._cursor.getChars(t)),this._cursor.getSpan())}}}_consumeRawText(t,o){this._beginToken(t?s.ESCAPABLE_RAW_TEXT:s.RAW_TEXT);let E=[];for(;;){let p=this._cursor.clone(),A=o();if(this._cursor=p,A)break;E.push(this._readChar(t))}return this._endToken([this._processCarriageReturns(E.join(""))])}_consumeComment(t){this._beginToken(s.COMMENT_START,t),this._endToken([]),this._consumeRawText(!1,(()=>this._attemptStr("--\x3e"))),this._beginToken(s.COMMENT_END),this._requireStr("--\x3e"),this._endToken([])}_consumeBogusComment(t){this._beginToken(s.COMMENT_START,t),this._endToken([]),this._consumeRawText(!1,(()=>this._cursor.peek()===r.$GT)),this._beginToken(s.COMMENT_END),this._cursor.advance(),this._endToken([])}_consumeCdata(t){this._beginToken(s.CDATA_START,t),this._endToken([]),this._consumeRawText(!1,(()=>this._attemptStr("]]>"))),this._beginToken(s.CDATA_END),this._requireStr("]]>"),this._endToken([])}_consumeDocType(t){this._beginToken(s.DOC_TYPE_START,t),this._endToken([]),this._consumeRawText(!1,(()=>this._cursor.peek()===r.$GT)),this._beginToken(s.DOC_TYPE_END),this._cursor.advance(),this._endToken([])}_consumePrefixAndName(){let E,t=this._cursor.clone(),o="";for(;this._cursor.peek()!==r.$COLON&&!w(this._cursor.peek());)this._cursor.advance();return this._cursor.peek()===r.$COLON?(o=this._cursor.getChars(t),this._cursor.advance(),E=this._cursor.clone()):E=t,this._requireCharCodeUntilFn(T,""===o?0:1),[o,this._cursor.getChars(E)]}_consumeTagOpen(t){let o,E,p,A=this.tokens.length,P=this._cursor.clone(),M=[];try{if(!r.isAsciiLetter(this._cursor.peek()))throw this._createError(l(this._cursor.peek()),this._cursor.getSpan(t));for(p=this._consumeTagOpenStart(t),E=p.parts[0],o=p.parts[1],this._attemptCharCodeUntilFn(m);this._cursor.peek()!==r.$SLASH&&this._cursor.peek()!==r.$GT;){let[V,X]=this._consumeAttributeName();if(this._attemptCharCodeUntilFn(m),this._attemptCharCode(r.$EQ)){this._attemptCharCodeUntilFn(m);let H=this._consumeAttributeValue();M.push({prefix:V,name:X,value:H})}else M.push({prefix:V,name:X});this._attemptCharCodeUntilFn(m)}this._consumeTagOpenEnd()}catch(V){if(V instanceof C)return this._cursor=P,p&&(this.tokens.length=A),this._beginToken(s.TEXT,t),void this._endToken(["<"]);throw V}if(this._canSelfClose&&this.tokens[this.tokens.length-1].type===s.TAG_OPEN_END_VOID)return;let z=this._getTagContentType(o,E,this._fullNameStack.length>0,M);this._handleFullNameStackForTagOpen(E,o),z===D.TagContentType.RAW_TEXT?this._consumeRawTextWithTagClose(E,o,!1):z===D.TagContentType.ESCAPABLE_RAW_TEXT&&this._consumeRawTextWithTagClose(E,o,!0)}_consumeRawTextWithTagClose(t,o,E){this._consumeRawText(E,(()=>!!(this._attemptCharCode(r.$LT)&&this._attemptCharCode(r.$SLASH)&&(this._attemptCharCodeUntilFn(m),this._attemptStrCaseInsensitive(t?`${t}:${o}`:o)))&&(this._attemptCharCodeUntilFn(m),this._attemptCharCode(r.$GT)))),this._beginToken(s.TAG_CLOSE),this._requireCharCodeUntilFn((A=>A===r.$GT),3),this._cursor.advance(),this._endToken([t,o]),this._handleFullNameStackForTagClose(t,o)}_consumeTagOpenStart(t){this._beginToken(s.TAG_OPEN_START,t);let o=this._consumePrefixAndName();return this._endToken(o)}_consumeAttributeName(){let t=this._cursor.peek();if(t===r.$SQ||t===r.$DQ)throw this._createError(l(t),this._cursor.getSpan());this._beginToken(s.ATTR_NAME);let o=this._consumePrefixAndName();return this._endToken(o),o}_consumeAttributeValue(){let t;if(this._cursor.peek()===r.$SQ||this._cursor.peek()===r.$DQ){this._beginToken(s.ATTR_QUOTE);let o=this._cursor.peek();this._cursor.advance(),this._endToken([String.fromCodePoint(o)]),this._beginToken(s.ATTR_VALUE);let E=[];for(;this._cursor.peek()!==o;)E.push(this._readChar(!0));t=this._processCarriageReturns(E.join("")),this._endToken([t]),this._beginToken(s.ATTR_QUOTE),this._cursor.advance(),this._endToken([String.fromCodePoint(o)])}else{this._beginToken(s.ATTR_VALUE);let o=this._cursor.clone();this._requireCharCodeUntilFn(T,1),t=this._processCarriageReturns(this._cursor.getChars(o)),this._endToken([t])}return t}_consumeTagOpenEnd(){let t=this._attemptCharCode(r.$SLASH)?s.TAG_OPEN_END_VOID:s.TAG_OPEN_END;this._beginToken(t),this._requireCharCode(r.$GT),this._endToken([])}_consumeTagClose(t){if(this._beginToken(s.TAG_CLOSE,t),this._attemptCharCodeUntilFn(m),this._allowHtmComponentClosingTags&&this._attemptCharCode(r.$SLASH))this._attemptCharCodeUntilFn(m),this._requireCharCode(r.$GT),this._endToken([]);else{let[o,E]=this._consumePrefixAndName();this._attemptCharCodeUntilFn(m),this._requireCharCode(r.$GT),this._endToken([o,E]),this._handleFullNameStackForTagClose(o,E)}}_consumeExpansionFormStart(){this._beginToken(s.EXPANSION_FORM_START),this._requireCharCode(r.$LBRACE),this._endToken([]),this._expansionCaseStack.push(s.EXPANSION_FORM_START),this._beginToken(s.RAW_TEXT);let t=this._readUntil(r.$COMMA);this._endToken([t]),this._requireCharCode(r.$COMMA),this._attemptCharCodeUntilFn(m),this._beginToken(s.RAW_TEXT);let o=this._readUntil(r.$COMMA);this._endToken([o]),this._requireCharCode(r.$COMMA),this._attemptCharCodeUntilFn(m)}_consumeExpansionCaseStart(){this._beginToken(s.EXPANSION_CASE_VALUE);let t=this._readUntil(r.$LBRACE).trim();this._endToken([t]),this._attemptCharCodeUntilFn(m),this._beginToken(s.EXPANSION_CASE_EXP_START),this._requireCharCode(r.$LBRACE),this._endToken([]),this._attemptCharCodeUntilFn(m),this._expansionCaseStack.push(s.EXPANSION_CASE_EXP_START)}_consumeExpansionCaseEnd(){this._beginToken(s.EXPANSION_CASE_EXP_END),this._requireCharCode(r.$RBRACE),this._endToken([]),this._attemptCharCodeUntilFn(m),this._expansionCaseStack.pop()}_consumeExpansionFormEnd(){this._beginToken(s.EXPANSION_FORM_END),this._requireCharCode(r.$RBRACE),this._endToken([]),this._expansionCaseStack.pop()}_consumeText(){let t=this._cursor.clone();this._beginToken(s.TEXT,t);let o=[];do{this._interpolationConfig&&this._attemptStr(this._interpolationConfig.start)?(o.push(this._interpolationConfig.start),this._inInterpolation=!0):this._interpolationConfig&&this._inInterpolation&&this._attemptStr(this._interpolationConfig.end)?(o.push(this._interpolationConfig.end),this._inInterpolation=!1):o.push(this._readChar(!0))}while(!this._isTextEnd());this._endToken([this._processCarriageReturns(o.join(""))])}_isTextEnd(){return!!(this._cursor.peek()===r.$LT||this._cursor.peek()===r.$EOF||this._tokenizeIcu&&!this._inInterpolation&&(this.isExpansionFormStart()||this._cursor.peek()===r.$RBRACE&&this._isInExpansionCase()))}_readUntil(t){let o=this._cursor.clone();return this._attemptUntilChar(t),this._cursor.getChars(o)}_isInExpansionCase(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===s.EXPANSION_CASE_EXP_START}_isInExpansionForm(){return this._expansionCaseStack.length>0&&this._expansionCaseStack[this._expansionCaseStack.length-1]===s.EXPANSION_FORM_START}isExpansionFormStart(){if(this._cursor.peek()!==r.$LBRACE)return!1;if(this._interpolationConfig){let t=this._cursor.clone(),o=this._attemptStr(this._interpolationConfig.start);return this._cursor=t,!o}return!0}_handleFullNameStackForTagOpen(t,o){let E=D.mergeNsAndName(t,o);(0===this._fullNameStack.length||this._fullNameStack[this._fullNameStack.length-1]===E)&&this._fullNameStack.push(E)}_handleFullNameStackForTagClose(t,o){let E=D.mergeNsAndName(t,o);0!==this._fullNameStack.length&&this._fullNameStack[this._fullNameStack.length-1]===E&&this._fullNameStack.pop()}};function m(t){return!r.isWhitespace(t)||t===r.$EOF}function T(t){return r.isWhitespace(t)||t===r.$GT||t===r.$SLASH||t===r.$SQ||t===r.$DQ||t===r.$EQ}function w(t){return(t<r.$a||r.$z<t)&&(t<r.$A||r.$Z<t)&&(t<r.$0||t>r.$9)}function g(t){return t==r.$SEMICOLON||t==r.$EOF||!r.isAsciiHexDigit(t)}function N(t){return t==r.$SEMICOLON||t==r.$EOF||!r.isAsciiLetter(t)}function _(t){return t>=r.$a&&t<=r.$z?t-r.$a+r.$A:t}var x=class{constructor(t,o){if(t instanceof x)this.file=t.file,this.input=t.input,this.end=t.end,this.state=Object.assign({},t.state);else{if(!o)throw new Error("Programming error: the range argument must be provided with a file argument.");this.file=t,this.input=t.content,this.end=o.endPos,this.state={peek:-1,offset:o.startPos,line:o.startLine,column:o.startCol}}}clone(){return new x(this)}peek(){return this.state.peek}charsLeft(){return this.end-this.state.offset}diff(t){return this.state.offset-t.state.offset}advance(){this.advanceState(this.state)}init(){this.updatePeek(this.state)}getSpan(t,o){if(t=t||this,o)for(t=t.clone();this.diff(t)>0&&-1!==o.indexOf(t.peek());)t.advance();return new u.ParseSourceSpan(new u.ParseLocation(t.file,t.state.offset,t.state.line,t.state.column),new u.ParseLocation(this.file,this.state.offset,this.state.line,this.state.column))}getChars(t){return this.input.substring(t.state.offset,this.state.offset)}charAt(t){return this.input.charCodeAt(t)}advanceState(t){if(t.offset>=this.end)throw this.state=t,new $('Unexpected character "EOF"',this);let o=this.charAt(t.offset);o===r.$LF?(t.line++,t.column=0):r.isNewLine(o)||t.column++,t.offset++,this.updatePeek(t)}updatePeek(t){t.peek=t.offset>=this.end?r.$EOF:this.charAt(t.offset)}},k=class extends x{constructor(t,o){t instanceof k?(super(t),this.internalState=Object.assign({},t.internalState)):(super(t,o),this.internalState=this.state)}advance(){this.state=this.internalState,super.advance(),this.processEscapeSequence()}init(){super.init(),this.processEscapeSequence()}clone(){return new k(this)}getChars(t){let o=t.clone(),E="";for(;o.internalState.offset<this.internalState.offset;)E+=String.fromCodePoint(o.peek()),o.advance();return E}processEscapeSequence(){let t=()=>this.internalState.peek;if(t()===r.$BACKSLASH)if(this.internalState=Object.assign({},this.state),this.advanceState(this.internalState),t()===r.$n)this.state.peek=r.$LF;else if(t()===r.$r)this.state.peek=r.$CR;else if(t()===r.$v)this.state.peek=r.$VTAB;else if(t()===r.$t)this.state.peek=r.$TAB;else if(t()===r.$b)this.state.peek=r.$BSPACE;else if(t()===r.$f)this.state.peek=r.$FF;else if(t()===r.$u)if(this.advanceState(this.internalState),t()===r.$LBRACE){this.advanceState(this.internalState);let o=this.clone(),E=0;for(;t()!==r.$RBRACE;)this.advanceState(this.internalState),E++;this.state.peek=this.decodeHexDigits(o,E)}else{let o=this.clone();this.advanceState(this.internalState),this.advanceState(this.internalState),this.advanceState(this.internalState),this.state.peek=this.decodeHexDigits(o,4)}else if(t()===r.$x){this.advanceState(this.internalState);let o=this.clone();this.advanceState(this.internalState),this.state.peek=this.decodeHexDigits(o,2)}else if(r.isOctalDigit(t())){let o="",E=0,p=this.clone();for(;r.isOctalDigit(t())&&E<3;)p=this.clone(),o+=String.fromCodePoint(t()),this.advanceState(this.internalState),E++;this.state.peek=parseInt(o,8),this.internalState=p.internalState}else r.isNewLine(this.internalState.peek)?(this.advanceState(this.internalState),this.state=this.internalState):this.state.peek=this.internalState.peek}decodeHexDigits(t,o){let E=this.input.substr(t.internalState.offset,o),p=parseInt(E,16);if(isNaN(p))throw t.state=t.internalState,new $("Invalid hexadecimal escape sequence",t);return p}},$=class{constructor(t,o){this.msg=t,this.cursor=o}};e.CursorError=$}}),ls=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/parser.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=Be(),u=bs(),n=Yl(),D=Ze(),s=class extends r.ParseError{constructor(a,l,h){super(l,h),this.elementName=a}static create(a,l,h){return new s(a,l,h)}};e.TreeError=s;var i=class{constructor(a,l){this.rootNodes=a,this.errors=l}};e.ParseTreeResult=i;e.Parser=class{constructor(a){this.getTagDefinition=a}parse(a,l,h){let C=arguments.length>3&&void 0!==arguments[3]&&arguments[3],d=arguments.length>4?arguments[4]:void 0,m=x=>function(k){for(var $=arguments.length,t=new Array($>1?$-1:0),o=1;o<$;o++)t[o-1]=arguments[o];return x(k.toLowerCase(),...t)},T=C?this.getTagDefinition:m(this.getTagDefinition),w=x=>T(x).contentType,g=C?d:m(d),N=d?(x,k,$,t)=>{let o=g(x,k,$,t);return void 0!==o?o:w(x)}:w,R=n.tokenize(a,l,N,h),j=h&&h.canSelfClose||!1,_=h&&h.allowHtmComponentClosingTags||!1,O=new c(R.tokens,T,j,_,C).build();return new i(O.rootNodes,R.errors.concat(O.errors))}};var c=class{constructor(a,l,h,C,d){this.tokens=a,this.getTagDefinition=l,this.canSelfClose=h,this.allowHtmComponentClosingTags=C,this.isTagNameCaseSensitive=d,this._index=-1,this._rootNodes=[],this._errors=[],this._elementStack=[],this._advance()}build(){for(;this._peek.type!==n.TokenType.EOF;)this._peek.type===n.TokenType.TAG_OPEN_START?this._consumeStartTag(this._advance()):this._peek.type===n.TokenType.TAG_CLOSE?(this._closeVoidElement(),this._consumeEndTag(this._advance())):this._peek.type===n.TokenType.CDATA_START?(this._closeVoidElement(),this._consumeCdata(this._advance())):this._peek.type===n.TokenType.COMMENT_START?(this._closeVoidElement(),this._consumeComment(this._advance())):this._peek.type===n.TokenType.TEXT||this._peek.type===n.TokenType.RAW_TEXT||this._peek.type===n.TokenType.ESCAPABLE_RAW_TEXT?(this._closeVoidElement(),this._consumeText(this._advance())):this._peek.type===n.TokenType.EXPANSION_FORM_START?this._consumeExpansion(this._advance()):this._peek.type===n.TokenType.DOC_TYPE_START?this._consumeDocType(this._advance()):this._advance();return new i(this._rootNodes,this._errors)}_advance(){let a=this._peek;return this._index<this.tokens.length-1&&this._index++,this._peek=this.tokens[this._index],a}_advanceIf(a){return this._peek.type===a?this._advance():null}_consumeCdata(a){let l=this._advance(),h=this._getText(l),C=this._advanceIf(n.TokenType.CDATA_END);this._addToParent(new u.CDATA(h,new r.ParseSourceSpan(a.sourceSpan.start,(C||l).sourceSpan.end)))}_consumeComment(a){let l=this._advanceIf(n.TokenType.RAW_TEXT),h=this._advanceIf(n.TokenType.COMMENT_END),C=null!=l?l.parts[0].trim():null,d=new r.ParseSourceSpan(a.sourceSpan.start,(h||l||a).sourceSpan.end);this._addToParent(new u.Comment(C,d))}_consumeDocType(a){let l=this._advanceIf(n.TokenType.RAW_TEXT),h=this._advanceIf(n.TokenType.DOC_TYPE_END),C=null!=l?l.parts[0].trim():null,d=new r.ParseSourceSpan(a.sourceSpan.start,(h||l||a).sourceSpan.end);this._addToParent(new u.DocType(C,d))}_consumeExpansion(a){let l=this._advance(),h=this._advance(),C=[];for(;this._peek.type===n.TokenType.EXPANSION_CASE_VALUE;){let m=this._parseExpansionCase();if(!m)return;C.push(m)}if(this._peek.type!==n.TokenType.EXPANSION_FORM_END)return void this._errors.push(s.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '}'."));let d=new r.ParseSourceSpan(a.sourceSpan.start,this._peek.sourceSpan.end);this._addToParent(new u.Expansion(l.parts[0],h.parts[0],C,d,l.sourceSpan)),this._advance()}_parseExpansionCase(){let a=this._advance();if(this._peek.type!==n.TokenType.EXPANSION_CASE_EXP_START)return this._errors.push(s.create(null,this._peek.sourceSpan,"Invalid ICU message. Missing '{'.")),null;let l=this._advance(),h=this._collectExpansionExpTokens(l);if(!h)return null;let C=this._advance();h.push(new n.Token(n.TokenType.EOF,[],C.sourceSpan));let d=new c(h,this.getTagDefinition,this.canSelfClose,this.allowHtmComponentClosingTags,this.isTagNameCaseSensitive).build();if(d.errors.length>0)return this._errors=this._errors.concat(d.errors),null;let m=new r.ParseSourceSpan(a.sourceSpan.start,C.sourceSpan.end),T=new r.ParseSourceSpan(l.sourceSpan.start,C.sourceSpan.end);return new u.ExpansionCase(a.parts[0],d.rootNodes,m,a.sourceSpan,T)}_collectExpansionExpTokens(a){let l=[],h=[n.TokenType.EXPANSION_CASE_EXP_START];for(;;){if((this._peek.type===n.TokenType.EXPANSION_FORM_START||this._peek.type===n.TokenType.EXPANSION_CASE_EXP_START)&&h.push(this._peek.type),this._peek.type===n.TokenType.EXPANSION_CASE_EXP_END){if(!F(h,n.TokenType.EXPANSION_CASE_EXP_START))return this._errors.push(s.create(null,a.sourceSpan,"Invalid ICU message. Missing '}'.")),null;if(h.pop(),0==h.length)return l}if(this._peek.type===n.TokenType.EXPANSION_FORM_END){if(!F(h,n.TokenType.EXPANSION_FORM_START))return this._errors.push(s.create(null,a.sourceSpan,"Invalid ICU message. Missing '}'.")),null;h.pop()}if(this._peek.type===n.TokenType.EOF)return this._errors.push(s.create(null,a.sourceSpan,"Invalid ICU message. Missing '}'.")),null;l.push(this._advance())}}_getText(a){let l=a.parts[0];if(l.length>0&&"\n"==l[0]){let h=this._getParentElement();null!=h&&0==h.children.length&&this.getTagDefinition(h.name).ignoreFirstLf&&(l=l.substring(1))}return l}_consumeText(a){let l=this._getText(a);l.length>0&&this._addToParent(new u.Text(l,a.sourceSpan))}_closeVoidElement(){let a=this._getParentElement();a&&this.getTagDefinition(a.name).isVoid&&this._elementStack.pop()}_consumeStartTag(a){let l=a.parts[0],h=a.parts[1],C=[];for(;this._peek.type===n.TokenType.ATTR_NAME;)C.push(this._consumeAttr(this._advance()));let d=this._getElementFullName(l,h,this._getParentElement()),m=!1;if(this._peek.type===n.TokenType.TAG_OPEN_END_VOID){this._advance(),m=!0;let R=this.getTagDefinition(d);this.canSelfClose||R.canSelfClose||null!==D.getNsPrefix(d)||R.isVoid||this._errors.push(s.create(d,a.sourceSpan,`Only void and foreign elements can be self closed "${a.parts[1]}"`))}else this._peek.type===n.TokenType.TAG_OPEN_END&&(this._advance(),m=!1);let T=this._peek.sourceSpan.start,w=new r.ParseSourceSpan(a.sourceSpan.start,T),g=new r.ParseSourceSpan(a.sourceSpan.start.moveBy(1),a.sourceSpan.end),N=new u.Element(d,C,[],w,w,void 0,g);this._pushElement(N),m&&(this._popElement(d),N.endSourceSpan=w)}_pushElement(a){let l=this._getParentElement();l&&this.getTagDefinition(l.name).isClosedByChild(a.name)&&this._elementStack.pop(),this._addToParent(a),this._elementStack.push(a)}_consumeEndTag(a){let l=this.allowHtmComponentClosingTags&&0===a.parts.length?null:this._getElementFullName(a.parts[0],a.parts[1],this._getParentElement());if(this._getParentElement()&&(this._getParentElement().endSourceSpan=a.sourceSpan),l&&this.getTagDefinition(l).isVoid)this._errors.push(s.create(l,a.sourceSpan,`Void elements do not have end tags "${a.parts[1]}"`));else if(!this._popElement(l)){let h=`Unexpected closing tag "${l}". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;this._errors.push(s.create(l,a.sourceSpan,h))}}_popElement(a){for(let l=this._elementStack.length-1;l>=0;l--){let h=this._elementStack[l];if(!a||(D.getNsPrefix(h.name)?h.name==a:h.name.toLowerCase()==a.toLowerCase()))return this._elementStack.splice(l,this._elementStack.length-l),!0;if(!this.getTagDefinition(h.name).closedByParent)return!1}return!1}_consumeAttr(a){let d,m,l=D.mergeNsAndName(a.parts[0],a.parts[1]),h=a.sourceSpan.end,C="";if(this._peek.type===n.TokenType.ATTR_QUOTE&&(m=this._advance().sourceSpan.start),this._peek.type===n.TokenType.ATTR_VALUE){let T=this._advance();C=T.parts[0],h=T.sourceSpan.end,d=T.sourceSpan}return this._peek.type===n.TokenType.ATTR_QUOTE&&(h=this._advance().sourceSpan.end,d=new r.ParseSourceSpan(m,h)),new u.Attribute(l,C,new r.ParseSourceSpan(a.sourceSpan.start,h),d,a.sourceSpan)}_getParentElement(){return this._elementStack.length>0?this._elementStack[this._elementStack.length-1]:null}_getParentElementSkippingContainers(){let a=null;for(let l=this._elementStack.length-1;l>=0;l--){if(!D.isNgContainer(this._elementStack[l].name))return{parent:this._elementStack[l],container:a};a=this._elementStack[l]}return{parent:null,container:a}}_addToParent(a){let l=this._getParentElement();null!=l?l.children.push(a):this._rootNodes.push(a)}_insertBeforeContainer(a,l,h){if(l){if(a){let C=a.children.indexOf(l);a.children[C]=h}else this._rootNodes.push(h);h.children.push(l),this._elementStack.splice(this._elementStack.indexOf(l),0,h)}else this._addToParent(h),this._elementStack.push(h)}_getElementFullName(a,l,h){return""===a&&(""===(a=this.getTagDefinition(l).implicitNamespacePrefix||"")&&null!=h&&(a=D.getNsPrefix(h.name))),D.mergeNsAndName(a,l)}};function F(a,l){return a.length>0&&a[a.length-1]===l}}}),Ql=I({"node_modules/angular-html-parser/lib/compiler/src/ml_parser/html_parser.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=Bs(),u=ls(),n=ls();e.ParseTreeResult=n.ParseTreeResult,e.TreeError=n.TreeError;var D=class extends u.Parser{constructor(){super(r.getHtmlTagDefinition)}parse(s,i,f){let c=arguments.length>3&&void 0!==arguments[3]&&arguments[3],F=arguments.length>4?arguments[4]:void 0;return super.parse(s,i,f,c,F)}};e.HtmlParser=D}}),ws=I({"node_modules/angular-html-parser/lib/angular-html-parser/src/index.js"(e){q(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ql(),u=Ze();e.TagContentType=u.TagContentType;var n=null;e.parse=function s(i){let f=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{canSelfClose:c=!1,allowHtmComponentClosingTags:F=!1,isTagNameCaseSensitive:a=!1,getTagContentType:l}=f;return(n||(n=new r.HtmlParser),n).parse(i,"angular-html-parser",{tokenizeExpansionForms:!1,interpolationConfig:void 0,canSelfClose:c,allowHtmComponentClosingTags:F},a,l)}}});q();var{ParseSourceSpan:Qe,ParseLocation:cs,ParseSourceFile:Kl}=Be(),Jl=ol(),Zl=Cs(),ec=Dl(),{inferParserByLanguage:rc}=xl(),uc=kl(),Vr=Ml(),hs=jl(),{hasPragma:tc}=Ul(),{Node:nc}=Gl(),{parseIeConditionalComment:sc}=Vl(),{locStart:ic,locEnd:ac}=Xl();function oc(e,r,u){let{canSelfClose:n,normalizeTagName:D,normalizeAttributeName:s,allowHtmComponentClosingTags:i,isTagNameCaseSensitive:f,getTagContentType:c}=r,F=ws(),{RecursiveVisitor:a,visitAll:l}=bs(),{ParseSourceSpan:h}=Be(),{getHtmlTagDefinition:C}=Bs(),{rootNodes:d,errors:m}=F.parse(e,{canSelfClose:n,allowHtmComponentClosingTags:i,isTagNameCaseSensitive:f,getTagContentType:c});if("vue"===u.parser)if(d.some((O=>"docType"===O.type&&"html"===O.value||"element"===O.type&&"html"===O.name.toLowerCase()))){n=!0,D=!0,s=!0,i=!0,f=!1;let O=F.parse(e,{canSelfClose:n,allowHtmComponentClosingTags:i,isTagNameCaseSensitive:f});d=O.rootNodes,m=O.errors}else{let O=x=>{if(!x||"element"!==x.type||"template"!==x.name)return!1;let k=x.attrs.find((t=>"lang"===t.name)),$=k&&k.value;return!$||"html"===rc($,u)};if(d.some(O)){let x,k=()=>F.parse(e,{canSelfClose:n,allowHtmComponentClosingTags:i,isTagNameCaseSensitive:f}),$=()=>x||(x=k()),t=o=>$().rootNodes.find((E=>{let{startSourceSpan:p}=E;return p&&p.start.offset===o.startSourceSpan.start.offset}));for(let o=0;o<d.length;o++){let E=d[o],{endSourceSpan:p,startSourceSpan:A}=E;if(null===p)m=$().errors,d[o]=t(E)||E;else if(O(E)){let M=$(),z=A.end.offset,V=p.start.offset;for(let X of M.errors){let{offset:H}=X.span.start;if(z<H&&H<V){m=[X];break}}d[o]=t(E)||E}}}}if(m.length>0){let{msg:_,span:{start:O,end:x}}=m[0];throw ec(_,{start:{line:O.line+1,column:O.col+1},end:{line:x.line+1,column:x.col+1}})}let T=_=>{let O=_.name.startsWith(":")?_.name.slice(1).split(":")[0]:null,x=_.nameSpan.toString(),k=null!==O&&x.startsWith(`${O}:`),$=k?x.slice(O.length+1):x;_.name=$,_.namespace=O,_.hasExplicitNamespace=k},g=(_,O)=>{let x=_.toLowerCase();return O(x)?x:_};return l(new class extends a{visit(_){(_=>{switch(_.type){case"element":T(_);for(let O of _.attrs)T(O),O.valueSpan?(O.value=O.valueSpan.toString(),/["']/.test(O.value[0])&&(O.value=O.value.slice(1,-1))):O.value=null;break;case"comment":_.value=_.sourceSpan.toString().slice(4,-3);break;case"text":_.value=_.sourceSpan.toString()}})(_),(_=>{if("element"===_.type){let O=C(f?_.name:_.name.toLowerCase());!_.namespace||_.namespace===O.implicitNamespacePrefix||hs(_)?_.tagDefinition=O:_.tagDefinition=C("")}})(_),(_=>{if("element"===_.type&&(D&&(!_.namespace||_.namespace===_.tagDefinition.implicitNamespacePrefix||hs(_))&&(_.name=g(_.name,(O=>O in uc))),s)){let O=Vr[_.name]||Object.create(null);for(let x of _.attrs)x.namespace||(x.name=g(x.name,(k=>_.name in Vr&&(k in Vr["*"]||k in O))))}})(_),(_=>{_.sourceSpan&&_.endSourceSpan&&(_.sourceSpan=new h(_.sourceSpan.start,_.endSourceSpan.end))})(_)}},d),d}function Ns(e,r,u){let n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],{frontMatter:D,content:s}=n?Jl(e):{frontMatter:null,content:e},i=new Kl(e,r.filepath),f=new cs(i,0,0,0),c=f.moveBy(e.length),F={type:"root",sourceSpan:new Qe(f,c),children:oc(s,u,r)};if(D){let h=new cs(i,0,0,0),C=h.moveBy(D.raw.length);D.sourceSpan=new Qe(h,C),F.children.unshift(D)}let a=new nc(F),l=(h,C)=>{let{offset:d}=C,w=Ns(e.slice(0,d).replace(/[^\n\r]/g," ")+h,r,u,!1);w.sourceSpan=new Qe(C,Zl(w.children).sourceSpan.end);let g=w.children[0];return g.length===d?w.children.shift():(g.sourceSpan=new Qe(g.sourceSpan.start.moveBy(d),g.sourceSpan.end),g.value=g.value.slice(d)),w};return a.walk((h=>{if("comment"===h.type){let C=sc(h,l);C&&h.parent.replaceChild(h,C)}})),a}function Ke(){let{name:e,canSelfClose:r=!1,normalizeTagName:u=!1,normalizeAttributeName:n=!1,allowHtmComponentClosingTags:D=!1,isTagNameCaseSensitive:s=!1,getTagContentType:i}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{parse:(f,c,F)=>Ns(f,Object.assign({parser:e},F),{canSelfClose:r,normalizeTagName:u,normalizeAttributeName:n,allowHtmComponentClosingTags:D,isTagNameCaseSensitive:s,getTagContentType:i}),hasPragma:tc,astFormat:"html",locStart:ic,locEnd:ac}}Os.exports={parsers:{html:Ke({name:"html",canSelfClose:!0,normalizeTagName:!0,normalizeAttributeName:!0,allowHtmComponentClosingTags:!0}),angular:Ke({name:"angular",canSelfClose:!0}),vue:Ke({name:"vue",canSelfClose:!0,isTagNameCaseSensitive:!0,getTagContentType:(e,r,u,n)=>{if("html"!==e.toLowerCase()&&!u&&("template"!==e||n.some((D=>{let{name:s,value:i}=D;return"lang"===s&&"html"!==i&&""!==i&&void 0!==i}))))return ws().TagContentType.RAW_TEXT}}),lwc:Ke({name:"lwc"})}}}));return Dc()}))}}),require_standalone=(0,_chunk_NNAAFZ4U_mjs__WEBPACK_IMPORTED_MODULE_1__.E)({"node_modules/prettier/standalone.js"(exports,module){!function(e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&__webpack_require__.amdO)define(e);else{(typeof globalThis<"u"?globalThis:typeof __webpack_require__.g<"u"?__webpack_require__.g:typeof self<"u"?self:this||{}).prettier=e()}}((function(){var xe=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),pt=xe(((r0,pu)=>{var ir=function(e){return e&&e.Math==Math&&e};pu.exports=ir("object"==typeof globalThis&&globalThis)||ir("object"==typeof window&&window)||ir("object"==typeof self&&self)||ir("object"==typeof __webpack_require__.g&&__webpack_require__.g)||function(){return this}()||Function("return this")()})),Dt=xe(((n0,fu)=>{fu.exports=function(e){try{return!!e()}catch{return!0}}})),yt=xe(((u0,Du)=>{var Mo=Dt();Du.exports=!Mo((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))})),ar=xe(((s0,mu)=>{var Ro=Dt();mu.exports=!Ro((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))})),At=xe(((i0,du)=>{var $o=ar(),or=Function.prototype.call;du.exports=$o?or.bind(or):function(){return or.apply(or,arguments)}})),vu=xe((hu=>{var gu={}.propertyIsEnumerable,yu=Object.getOwnPropertyDescriptor,Vo=yu&&!gu.call({1:2},1);hu.f=Vo?function(r){var t=yu(this,r);return!!t&&t.enumerable}:gu})),lr=xe(((o0,Cu)=>{Cu.exports=function(e,r){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:r}}})),mt=xe(((l0,Au)=>{var Eu=ar(),Fu=Function.prototype,Wr=Fu.call,Wo=Eu&&Fu.bind.bind(Wr,Wr);Au.exports=Eu?Wo:function(e){return function(){return Wr.apply(e,arguments)}}})),Vt=xe(((c0,xu)=>{var Su=mt(),Ho=Su({}.toString),Go=Su("".slice);xu.exports=function(e){return Go(Ho(e),8,-1)}})),Tu=xe(((p0,bu)=>{var Uo=mt(),Jo=Dt(),zo=Vt(),Hr=Object,Xo=Uo("".split);bu.exports=Jo((function(){return!Hr("z").propertyIsEnumerable(0)}))?function(e){return"String"==zo(e)?Xo(e,""):Hr(e)}:Hr})),cr=xe(((f0,Bu)=>{Bu.exports=function(e){return null==e}})),Gr=xe(((D0,Nu)=>{var Ko=cr(),Yo=TypeError;Nu.exports=function(e){if(Ko(e))throw Yo("Can't call method on "+e);return e}})),pr=xe(((m0,wu)=>{var Qo=Tu(),Zo=Gr();wu.exports=function(e){return Qo(Zo(e))}})),Jr=xe(((d0,_u)=>{var Ur="object"==typeof document&&document.all,el=typeof Ur>"u"&&void 0!==Ur;_u.exports={all:Ur,IS_HTMLDDA:el}})),ot=xe(((g0,Iu)=>{var Pu=Jr(),tl=Pu.all;Iu.exports=Pu.IS_HTMLDDA?function(e){return"function"==typeof e||e===tl}:function(e){return"function"==typeof e}})),St=xe(((y0,Ou)=>{var ku=ot(),Lu=Jr(),rl=Lu.all;Ou.exports=Lu.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:ku(e)||e===rl}:function(e){return"object"==typeof e?null!==e:ku(e)}})),Wt=xe(((h0,ju)=>{var zr=pt(),nl=ot();ju.exports=function(e,r){return arguments.length<2?function(e){return nl(e)?e:void 0}(zr[e]):zr[e]&&zr[e][r]}})),Xr=xe(((v0,qu)=>{var sl=mt();qu.exports=sl({}.isPrototypeOf)})),Ru=xe(((C0,Mu)=>{var il=Wt();Mu.exports=il("navigator","userAgent")||""})),Ju=xe(((E0,Uu)=>{var dt,fr,Gu=pt(),Kr=Ru(),$u=Gu.process,Vu=Gu.Deno,Wu=$u&&$u.versions||Vu&&Vu.version,Hu=Wu&&Wu.v8;Hu&&(fr=(dt=Hu.split("."))[0]>0&&dt[0]<4?1:+(dt[0]+dt[1])),!fr&&Kr&&((!(dt=Kr.match(/Edge\/(\d+)/))||dt[1]>=74)&&((dt=Kr.match(/Chrome\/(\d+)/))&&(fr=+dt[1]))),Uu.exports=fr})),Yr=xe(((F0,Xu)=>{var zu=Ju(),al=Dt();Xu.exports=!!Object.getOwnPropertySymbols&&!al((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&zu&&zu<41}))})),Qr=xe(((A0,Ku)=>{var ol=Yr();Ku.exports=ol&&!Symbol.sham&&"symbol"==typeof Symbol.iterator})),Zr=xe(((S0,Yu)=>{var ll=Wt(),cl=ot(),pl=Xr(),fl=Qr(),Dl=Object;Yu.exports=fl?function(e){return"symbol"==typeof e}:function(e){var r=ll("Symbol");return cl(r)&&pl(r.prototype,Dl(e))}})),Dr=xe(((x0,Qu)=>{var ml=String;Qu.exports=function(e){try{return ml(e)}catch{return"Object"}}})),Ht=xe(((b0,Zu)=>{var dl=ot(),gl=Dr(),yl=TypeError;Zu.exports=function(e){if(dl(e))return e;throw yl(gl(e)+" is not a function")}})),mr=xe(((T0,es)=>{var hl=Ht(),vl=cr();es.exports=function(e,r){var t=e[r];return vl(t)?void 0:hl(t)}})),rs=xe(((B0,ts)=>{var en=At(),tn=ot(),rn=St(),Cl=TypeError;ts.exports=function(e,r){var t,s;if("string"===r&&tn(t=e.toString)&&!rn(s=en(t,e))||tn(t=e.valueOf)&&!rn(s=en(t,e))||"string"!==r&&tn(t=e.toString)&&!rn(s=en(t,e)))return s;throw Cl("Can't convert object to primitive value")}})),us=xe(((N0,ns)=>{ns.exports=!1})),dr=xe(((w0,is)=>{var ss=pt(),El=Object.defineProperty;is.exports=function(e,r){try{El(ss,e,{value:r,configurable:!0,writable:!0})}catch{ss[e]=r}return r}})),gr=xe(((_0,os)=>{var Fl=pt(),Al=dr(),as="__core-js_shared__",Sl=Fl[as]||Al(as,{});os.exports=Sl})),nn=xe(((P0,cs)=>{var xl=us(),ls=gr();(cs.exports=function(e,r){return ls[e]||(ls[e]=void 0!==r?r:{})})("versions",[]).push({version:"3.26.1",mode:xl?"pure":"global",copyright:"Â© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.1/LICENSE",source:"https://github.com/zloirock/core-js"})})),yr=xe(((I0,ps)=>{var bl=Gr(),Tl=Object;ps.exports=function(e){return Tl(bl(e))}})),Ct=xe(((k0,fs)=>{var Bl=mt(),Nl=yr(),wl=Bl({}.hasOwnProperty);fs.exports=Object.hasOwn||function(r,t){return wl(Nl(r),t)}})),un=xe(((L0,Ds)=>{var _l=mt(),Pl=0,Il=Math.random(),kl=_l(1..toString);Ds.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+kl(++Pl+Il,36)}})),bt=xe(((O0,hs)=>{var Ll=pt(),Ol=nn(),ms=Ct(),jl=un(),ds=Yr(),ys=Qr(),It=Ol("wks"),xt=Ll.Symbol,gs=xt&&xt.for,ql=ys?xt:xt&&xt.withoutSetter||jl;hs.exports=function(e){if(!ms(It,e)||!ds&&"string"!=typeof It[e]){var r="Symbol."+e;ds&&ms(xt,e)?It[e]=xt[e]:It[e]=ys&&gs?gs(r):ql(r)}return It[e]}})),Fs=xe(((j0,Es)=>{var Ml=At(),vs=St(),Cs=Zr(),Rl=mr(),$l=rs(),Vl=bt(),Wl=TypeError,Hl=Vl("toPrimitive");Es.exports=function(e,r){if(!vs(e)||Cs(e))return e;var s,t=Rl(e,Hl);if(t){if(void 0===r&&(r="default"),s=Ml(t,e,r),!vs(s)||Cs(s))return s;throw Wl("Can't convert object to primitive value")}return void 0===r&&(r="number"),$l(e,r)}})),hr=xe(((q0,As)=>{var Gl=Fs(),Ul=Zr();As.exports=function(e){var r=Gl(e,"string");return Ul(r)?r:r+""}})),bs=xe(((M0,xs)=>{var Jl=pt(),Ss=St(),sn=Jl.document,zl=Ss(sn)&&Ss(sn.createElement);xs.exports=function(e){return zl?sn.createElement(e):{}}})),an=xe(((R0,Ts)=>{var Xl=yt(),Kl=Dt(),Yl=bs();Ts.exports=!Xl&&!Kl((function(){return 7!=Object.defineProperty(Yl("div"),"a",{get:function(){return 7}}).a}))})),on=xe((Ns=>{var Ql=yt(),Zl=At(),ec=vu(),tc=lr(),rc=pr(),nc=hr(),uc=Ct(),sc=an(),Bs=Object.getOwnPropertyDescriptor;Ns.f=Ql?Bs:function(r,t){if(r=rc(r),t=nc(t),sc)try{return Bs(r,t)}catch{}if(uc(r,t))return tc(!Zl(ec.f,r,t),r[t])}})),_s=xe(((V0,ws)=>{var ic=yt(),ac=Dt();ws.exports=ic&&ac((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))})),Tt=xe(((W0,Ps)=>{var oc=St(),lc=String,cc=TypeError;Ps.exports=function(e){if(oc(e))return e;throw cc(lc(e)+" is not an object")}})),kt=xe((ks=>{var pc=yt(),fc=an(),Dc=_s(),vr=Tt(),Is=hr(),mc=TypeError,ln=Object.defineProperty,dc=Object.getOwnPropertyDescriptor,cn="enumerable",pn="configurable",fn="writable";ks.f=pc?Dc?function(r,t,s){if(vr(r),t=Is(t),vr(s),"function"==typeof r&&"prototype"===t&&"value"in s&&fn in s&&!s[fn]){var a=dc(r,t);a&&a[fn]&&(r[t]=s.value,s={configurable:pn in s?s[pn]:a[pn],enumerable:cn in s?s[cn]:a[cn],writable:!1})}return ln(r,t,s)}:ln:function(r,t,s){if(vr(r),t=Is(t),vr(s),fc)try{return ln(r,t,s)}catch{}if("get"in s||"set"in s)throw mc("Accessors not supported");return"value"in s&&(r[t]=s.value),r}})),Dn=xe(((G0,Ls)=>{var gc=yt(),yc=kt(),hc=lr();Ls.exports=gc?function(e,r,t){return yc.f(e,r,hc(1,t))}:function(e,r,t){return e[r]=t,e}})),qs=xe(((U0,js)=>{var mn=yt(),vc=Ct(),Os=Function.prototype,Cc=mn&&Object.getOwnPropertyDescriptor,dn=vc(Os,"name"),Ec=dn&&"something"===function(){}.name,Fc=dn&&(!mn||mn&&Cc(Os,"name").configurable);js.exports={EXISTS:dn,PROPER:Ec,CONFIGURABLE:Fc}})),yn=xe(((J0,Ms)=>{var Ac=mt(),Sc=ot(),gn=gr(),xc=Ac(Function.toString);Sc(gn.inspectSource)||(gn.inspectSource=function(e){return xc(e)}),Ms.exports=gn.inspectSource})),Vs=xe(((z0,$s)=>{var bc=pt(),Tc=ot(),Rs=bc.WeakMap;$s.exports=Tc(Rs)&&/native code/.test(String(Rs))})),Gs=xe(((X0,Hs)=>{var Bc=nn(),Nc=un(),Ws=Bc("keys");Hs.exports=function(e){return Ws[e]||(Ws[e]=Nc(e))}})),hn=xe(((K0,Us)=>{Us.exports={}})),Ks=xe(((Y0,Xs)=>{var Cr,Gt,Er,gt,Bt,wc=Vs(),zs=pt(),_c=St(),Pc=Dn(),vn=Ct(),Cn=gr(),Ic=Gs(),kc=hn(),Js="Object already initialized",En=zs.TypeError,Lc=zs.WeakMap;wc||Cn.state?((gt=Cn.state||(Cn.state=new Lc)).get=gt.get,gt.has=gt.has,gt.set=gt.set,Cr=function(e,r){if(gt.has(e))throw En(Js);return r.facade=e,gt.set(e,r),r},Gt=function(e){return gt.get(e)||{}},Er=function(e){return gt.has(e)}):(kc[Bt=Ic("state")]=!0,Cr=function(e,r){if(vn(e,Bt))throw En(Js);return r.facade=e,Pc(e,Bt,r),r},Gt=function(e){return vn(e,Bt)?e[Bt]:{}},Er=function(e){return vn(e,Bt)}),Xs.exports={set:Cr,get:Gt,has:Er,enforce:function(e){return Er(e)?Gt(e):Cr(e,{})},getterFor:function(e){return function(r){var t;if(!_c(r)||(t=Gt(r)).type!==e)throw En("Incompatible receiver, "+e+" required");return t}}}})),An=xe(((Q0,Qs)=>{var qc=Dt(),Mc=ot(),Fr=Ct(),Fn=yt(),Rc=qs().CONFIGURABLE,$c=yn(),Ys=Ks(),Vc=Ys.enforce,Wc=Ys.get,Ar=Object.defineProperty,Hc=Fn&&!qc((function(){return 8!==Ar((function(){}),"length",{value:8}).length})),Gc=String(String).split("String"),Uc=Qs.exports=function(e,r,t){"Symbol("===String(r).slice(0,7)&&(r="["+String(r).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(r="get "+r),t&&t.setter&&(r="set "+r),(!Fr(e,"name")||Rc&&e.name!==r)&&(Fn?Ar(e,"name",{value:r,configurable:!0}):e.name=r),Hc&&t&&Fr(t,"arity")&&e.length!==t.arity&&Ar(e,"length",{value:t.arity});try{t&&Fr(t,"constructor")&&t.constructor?Fn&&Ar(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch{}var s=Vc(e);return Fr(s,"source")||(s.source=Gc.join("string"==typeof r?r:"")),e};Function.prototype.toString=Uc((function(){return Mc(this)&&Wc(this).source||$c(this)}),"toString")})),ei=xe(((Z0,Zs)=>{var Jc=ot(),zc=kt(),Xc=An(),Kc=dr();Zs.exports=function(e,r,t,s){s||(s={});var a=s.enumerable,n=void 0!==s.name?s.name:r;if(Jc(t)&&Xc(t,n,s),s.global)a?e[r]=t:Kc(r,t);else{try{s.unsafe?e[r]&&(a=!0):delete e[r]}catch{}a?e[r]=t:zc.f(e,r,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}})),ri=xe(((ey,ti)=>{var Yc=Math.ceil,Qc=Math.floor;ti.exports=Math.trunc||function(r){var t=+r;return(t>0?Qc:Yc)(t)}})),Sr=xe(((ty,ni)=>{var Zc=ri();ni.exports=function(e){var r=+e;return r!=r||0===r?0:Zc(r)}})),si=xe(((ry,ui)=>{var ep=Sr(),tp=Math.max,rp=Math.min;ui.exports=function(e,r){var t=ep(e);return t<0?tp(t+r,0):rp(t,r)}})),ai=xe(((ny,ii)=>{var np=Sr(),up=Math.min;ii.exports=function(e){return e>0?up(np(e),9007199254740991):0}})),Lt=xe(((uy,oi)=>{var sp=ai();oi.exports=function(e){return sp(e.length)}})),pi=xe(((sy,ci)=>{var ip=pr(),ap=si(),op=Lt(),li=function(e){return function(r,t,s){var i,a=ip(r),n=op(a),u=ap(s,n);if(e&&t!=t){for(;n>u;)if((i=a[u++])!=i)return!0}else for(;n>u;u++)if((e||u in a)&&a[u]===t)return e||u||0;return!e&&-1}};ci.exports={includes:li(!0),indexOf:li(!1)}})),mi=xe(((iy,Di)=>{var lp=mt(),Sn=Ct(),cp=pr(),pp=pi().indexOf,fp=hn(),fi=lp([].push);Di.exports=function(e,r){var n,t=cp(e),s=0,a=[];for(n in t)!Sn(fp,n)&&Sn(t,n)&&fi(a,n);for(;r.length>s;)Sn(t,n=r[s++])&&(~pp(a,n)||fi(a,n));return a}})),gi=xe(((ay,di)=>{di.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]})),hi=xe((yi=>{var Dp=mi(),dp=gi().concat("length","prototype");yi.f=Object.getOwnPropertyNames||function(r){return Dp(r,dp)}})),Ci=xe((vi=>{vi.f=Object.getOwnPropertySymbols})),Fi=xe(((cy,Ei)=>{var gp=Wt(),yp=mt(),hp=hi(),vp=Ci(),Cp=Tt(),Ep=yp([].concat);Ei.exports=gp("Reflect","ownKeys")||function(r){var t=hp.f(Cp(r)),s=vp.f;return s?Ep(t,s(r)):t}})),xi=xe(((py,Si)=>{var Ai=Ct(),Fp=Fi(),Ap=on(),Sp=kt();Si.exports=function(e,r,t){for(var s=Fp(r),a=Sp.f,n=Ap.f,u=0;u<s.length;u++){var i=s[u];!Ai(e,i)&&(!t||!Ai(t,i))&&a(e,i,n(r,i))}}})),Ti=xe(((fy,bi)=>{var xp=Dt(),bp=ot(),Tp=/#|\.prototype\./,Ut=function(e,r){var t=Np[Bp(e)];return t==_p||t!=wp&&(bp(r)?xp(r):!!r)},Bp=Ut.normalize=function(e){return String(e).replace(Tp,".").toLowerCase()},Np=Ut.data={},wp=Ut.NATIVE="N",_p=Ut.POLYFILL="P";bi.exports=Ut})),Jt=xe(((Dy,Bi)=>{var xn=pt(),Pp=on().f,Ip=Dn(),kp=ei(),Lp=dr(),Op=xi(),jp=Ti();Bi.exports=function(e,r){var u,i,l,p,y,t=e.target,s=e.global,a=e.stat;if(u=s?xn:a?xn[t]||Lp(t,{}):(xn[t]||{}).prototype)for(i in r){if(p=r[i],e.dontCallGetSet?l=(y=Pp(u,i))&&y.value:l=u[i],!jp(s?i:t+(a?".":"#")+i,e.forced)&&void 0!==l){if(typeof p==typeof l)continue;Op(p,l)}(e.sham||l&&l.sham)&&Ip(p,"sham",!0),kp(u,i,p,e)}}})),bn=xe(((my,Ni)=>{var qp=Vt();Ni.exports=Array.isArray||function(r){return"Array"==qp(r)}})),_i=xe(((dy,wi)=>{var Mp=TypeError;wi.exports=function(e){if(e>9007199254740991)throw Mp("Maximum allowed index exceeded");return e}})),Ii=xe(((gy,Pi)=>{var $p=Vt(),Vp=mt();Pi.exports=function(e){if("Function"===$p(e))return Vp(e)}})),Tn=xe(((yy,Li)=>{var ki=Ii(),Wp=Ht(),Hp=ar(),Gp=ki(ki.bind);Li.exports=function(e,r){return Wp(e),void 0===r?e:Hp?Gp(e,r):function(){return e.apply(r,arguments)}}})),Bn=xe(((hy,ji)=>{var Up=bn(),Jp=Lt(),zp=_i(),Xp=Tn(),Oi=function(e,r,t,s,a,n,u,i){for(var h,g,l=a,p=0,y=!!u&&Xp(u,i);p<s;)p in t&&(h=y?y(t[p],p,r):t[p],n>0&&Up(h)?(g=Jp(h),l=Oi(e,r,h,g,l,n-1)-1):(zp(l+1),e[l]=h),l++),p++;return l};ji.exports=Oi})),Ri=xe(((vy,Mi)=>{var qi={};qi[bt()("toStringTag")]="z",Mi.exports="[object z]"===String(qi)})),Nn=xe(((Cy,$i)=>{var Qp=Ri(),Zp=ot(),xr=Vt(),tf=bt()("toStringTag"),rf=Object,nf="Arguments"==xr(function(){return arguments}());$i.exports=Qp?xr:function(e){var r,t,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,r){try{return e[r]}catch{}}(r=rf(e),tf))?t:nf?xr(r):"Object"==(s=xr(r))&&Zp(r.callee)?"Arguments":s}})),Ji=xe(((Ey,Ui)=>{var sf=mt(),af=Dt(),Vi=ot(),of=Nn(),lf=Wt(),cf=yn(),Wi=function(){},pf=[],Hi=lf("Reflect","construct"),wn=/^\s*(?:class|function)\b/,ff=sf(wn.exec),Df=!wn.exec(Wi),zt=function(r){if(!Vi(r))return!1;try{return Hi(Wi,pf,r),!0}catch{return!1}},Gi=function(r){if(!Vi(r))return!1;switch(of(r)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return Df||!!ff(wn,cf(r))}catch{return!0}};Gi.sham=!0,Ui.exports=!Hi||af((function(){var e;return zt(zt.call)||!zt(Object)||!zt((function(){e=!0}))||e}))?Gi:zt})),Yi=xe(((Fy,Ki)=>{var zi=bn(),mf=Ji(),df=St(),yf=bt()("species"),Xi=Array;Ki.exports=function(e){var r;return zi(e)&&(r=e.constructor,mf(r)&&(r===Xi||zi(r.prototype))?r=void 0:df(r)&&(null===(r=r[yf])&&(r=void 0))),void 0===r?Xi:r}})),_n=xe(((Ay,Qi)=>{var hf=Yi();Qi.exports=function(e,r){return new(hf(e))(0===r?0:r)}})),Zi=xe((()=>{var vf=Jt(),Cf=Bn(),Ef=Ht(),Ff=yr(),Af=Lt(),Sf=_n();vf({target:"Array",proto:!0},{flatMap:function(r){var a,t=Ff(this),s=Af(t);return Ef(r),(a=Sf(t,0)).length=Cf(a,t,t,s,0,1,r,arguments.length>1?arguments[1]:void 0),a}})})),Pn=xe(((by,ea)=>{ea.exports={}})),ra=xe(((Ty,ta)=>{var xf=bt(),bf=Pn(),Tf=xf("iterator"),Bf=Array.prototype;ta.exports=function(e){return void 0!==e&&(bf.Array===e||Bf[Tf]===e)}})),In=xe(((By,ua)=>{var Nf=Nn(),na=mr(),wf=cr(),_f=Pn(),If=bt()("iterator");ua.exports=function(e){if(!wf(e))return na(e,If)||na(e,"@@iterator")||_f[Nf(e)]}})),ia=xe(((Ny,sa)=>{var kf=At(),Lf=Ht(),Of=Tt(),jf=Dr(),qf=In(),Mf=TypeError;sa.exports=function(e,r){var t=arguments.length<2?qf(e):r;if(Lf(t))return Of(kf(t,e));throw Mf(jf(e)+" is not iterable")}})),la=xe(((wy,oa)=>{var Rf=At(),aa=Tt(),$f=mr();oa.exports=function(e,r,t){var s,a;aa(e);try{if(!(s=$f(e,"return"))){if("throw"===r)throw t;return t}s=Rf(s,e)}catch(n){a=!0,s=n}if("throw"===r)throw t;if(a)throw s;return aa(s),t}})),ma=xe(((_y,Da)=>{var Vf=Tn(),Wf=At(),Hf=Tt(),Gf=Dr(),Uf=ra(),Jf=Lt(),ca=Xr(),zf=ia(),Xf=In(),pa=la(),Kf=TypeError,br=function(e,r){this.stopped=e,this.result=r},fa=br.prototype;Da.exports=function(e,r,t){var p,y,h,g,c,f,F,s=t&&t.that,a=!(!t||!t.AS_ENTRIES),n=!(!t||!t.IS_RECORD),u=!(!t||!t.IS_ITERATOR),i=!(!t||!t.INTERRUPTED),l=Vf(r,s),_=function(E){return p&&pa(p,"normal",E),new br(!0,E)},w=function(E){return a?(Hf(E),i?l(E[0],E[1],_):l(E[0],E[1])):i?l(E,_):l(E)};if(n)p=e.iterator;else if(u)p=e;else{if(!(y=Xf(e)))throw Kf(Gf(e)+" is not iterable");if(Uf(y)){for(h=0,g=Jf(e);g>h;h++)if((c=w(e[h]))&&ca(fa,c))return c;return new br(!1)}p=zf(e,y)}for(f=n?e.next:p.next;!(F=Wf(f,p)).done;){try{c=w(F.value)}catch(E){pa(p,"throw",E)}if("object"==typeof c&&c&&ca(fa,c))return c}return new br(!1)}})),ga=xe(((Py,da)=>{var Yf=hr(),Qf=kt(),Zf=lr();da.exports=function(e,r,t){var s=Yf(r);s in e?Qf.f(e,s,Zf(0,t)):e[s]=t}})),ya=xe((()=>{var eD=Jt(),tD=ma(),rD=ga();eD({target:"Object",stat:!0},{fromEntries:function(r){var t={};return tD(r,(function(s,a){rD(t,s,a)}),{AS_ENTRIES:!0}),t}})})),Ca=xe(((Ly,va)=>{var ha=An(),nD=kt();va.exports=function(e,r,t){return t.get&&ha(t.get,r,{getter:!0}),t.set&&ha(t.set,r,{setter:!0}),nD.f(e,r,t)}})),Fa=xe(((Oy,Ea)=>{var uD=Tt();Ea.exports=function(){var e=uD(this),r="";return e.hasIndices&&(r+="d"),e.global&&(r+="g"),e.ignoreCase&&(r+="i"),e.multiline&&(r+="m"),e.dotAll&&(r+="s"),e.unicode&&(r+="u"),e.unicodeSets&&(r+="v"),e.sticky&&(r+="y"),r}})),xa=xe((()=>{var sD=pt(),iD=yt(),aD=Ca(),oD=Fa(),lD=Dt(),Aa=sD.RegExp,Sa=Aa.prototype;iD&&lD((function(){var e=!0;try{Aa(".","d")}catch{e=!1}var r={},t="",s=e?"dgimsy":"gimsy",a=function(l,p){Object.defineProperty(r,l,{get:function(){return t+=p,!0}})},n={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var u in e&&(n.hasIndices="d"),n)a(u,n[u]);return Object.getOwnPropertyDescriptor(Sa,"flags").get.call(r)!==s||t!==s}))&&aD(Sa,"flags",{configurable:!0,get:oD})})),ba=xe((()=>{var pD=Jt(),kn=pt();pD({global:!0,forced:kn.globalThis!==kn},{globalThis:kn})})),Ta=xe((()=>{ba()})),Ba=xe((()=>{var fD=Jt(),DD=Bn(),mD=yr(),dD=Lt(),gD=Sr(),yD=_n();fD({target:"Array",proto:!0},{flat:function(){var r=arguments.length?arguments[0]:void 0,t=mD(this),s=dD(t),a=yD(t,0);return a.length=DD(a,t,t,s,0,void 0===r?1:gD(r)),a}})})),e0=xe(((Uy,jo)=>{var hD=["cliName","cliCategory","cliDescription"],vD=["_"],CD=["languageId"];function Hn(e,r){if(null==e)return{};var s,a,t=function ED(e,r){if(null==e)return{};var a,n,t={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],!(r.indexOf(a)>=0)&&(t[a]=e[a]);return t}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)s=n[a],!(r.indexOf(s)>=0)&&Object.prototype.propertyIsEnumerable.call(e,s)&&(t[s]=e[s])}return t}Zi(),ya(),xa(),Ta(),Ba();var wt,FD=Object.create,_r=Object.defineProperty,AD=Object.getOwnPropertyDescriptor,Gn=Object.getOwnPropertyNames,SD=Object.getPrototypeOf,xD=Object.prototype.hasOwnProperty,ht=(e,r)=>function(){return e&&(r=(0,e[Gn(e)[0]])(e=0)),r},te=(e,r)=>function(){return r||(0,e[Gn(e)[0]])((r={exports:{}}).exports,r),r.exports},Kt=(e,r)=>{for(var t in r)_r(e,t,{get:r[t],enumerable:!0})},Pa=(e,r,t,s)=>{if(r&&"object"==typeof r||"function"==typeof r)for(let a of Gn(r))!xD.call(e,a)&&a!==t&&_r(e,a,{get:()=>r[a],enumerable:!(s=AD(r,a))||s.enumerable});return e},ft=e=>Pa(_r({},"__esModule",{value:!0}),e),ne=ht({"<define:process>"(){wt={env:{},argv:[]}}}),Ia=te({"package.json"(e,r){r.exports={version:"2.8.7"}}}),TD=te({"node_modules/diff/lib/diff/base.js"(e){function r(){}function t(a,n,u,i,l){for(var p=0,y=n.length,h=0,g=0;p<y;p++){var c=n[p];if(c.removed){if(c.value=a.join(i.slice(g,g+c.count)),g+=c.count,p&&n[p-1].added){var F=n[p-1];n[p-1]=n[p],n[p]=F}}else{if(!c.added&&l){var f=u.slice(h,h+c.count);f=f.map((function(w,E){var N=i[g+E];return N.length>w.length?N:w})),c.value=a.join(f)}else c.value=a.join(u.slice(h,h+c.count));h+=c.count,c.added||(g+=c.count)}}var _=n[y-1];return y>1&&"string"==typeof _.value&&(_.added||_.removed)&&a.equals("",_.value)&&(n[y-2].value+=_.value,n.pop()),n}ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.default=r,r.prototype={diff:function(n,u){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=i.callback;"function"==typeof i&&(l=i,i={}),this.options=i;var p=this;function y(N){return l?(setTimeout((function(){l(void 0,N)}),0),!0):N}n=this.castInput(n),u=this.castInput(u),n=this.removeEmpty(this.tokenize(n));var h=(u=this.removeEmpty(this.tokenize(u))).length,g=n.length,c=1,f=h+g,F=[{newPos:-1,components:[]}],_=this.extractCommon(F[0],u,n,0);if(F[0].newPos+1>=h&&_+1>=g)return y([{value:this.join(u),count:u.length}]);function w(){for(var N=-1*c;N<=c;N+=2){var x=void 0,I=F[N-1],P=F[N+1],$=(P?P.newPos:0)-N;I&&(F[N-1]=void 0);var D=I&&I.newPos+1<h,T=P&&0<=$&&$<g;if(D||T){if(!D||T&&I.newPos<P.newPos?(x={newPos:(a=P).newPos,components:a.components.slice(0)},p.pushComponent(x.components,void 0,!0)):((x=I).newPos++,p.pushComponent(x.components,!0,void 0)),$=p.extractCommon(x,u,n,N),x.newPos+1>=h&&$+1>=g)return y(t(p,x.components,u,n,p.useLongestToken));F[N]=x}else F[N]=void 0}var a;c++}if(l)!function N(){setTimeout((function(){if(c>f)return l();w()||N()}),0)}();else for(;c<=f;){var E=w();if(E)return E}},pushComponent:function(n,u,i){var l=n[n.length-1];l&&l.added===u&&l.removed===i?n[n.length-1]={count:l.count+1,added:u,removed:i}:n.push({count:1,added:u,removed:i})},extractCommon:function(n,u,i,l){for(var p=u.length,y=i.length,h=n.newPos,g=h-l,c=0;h+1<p&&g+1<y&&this.equals(u[h+1],i[g+1]);)h++,g++,c++;return c&&n.components.push({count:c}),n.newPos=h,g},equals:function(n,u){return this.options.comparator?this.options.comparator(n,u):n===u||this.options.ignoreCase&&n.toLowerCase()===u.toLowerCase()},removeEmpty:function(n){for(var u=[],i=0;i<n.length;i++)n[i]&&u.push(n[i]);return u},castInput:function(n){return n},tokenize:function(n){return n.split("")},join:function(n){return n.join("")}}}}),BD=te({"node_modules/diff/lib/diff/array.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.diffArrays=function a(n,u,i){return s.diff(n,u,i)},e.arrayDiff=void 0;var s=new(function t(n){return n&&n.__esModule?n:{default:n}}(TD()).default);e.arrayDiff=s,s.tokenize=function(n){return n.slice()},s.join=s.removeEmpty=function(n){return n}}}),Un=te({"src/document/doc-builders.js"(e,r){function t(C){return{type:"concat",parts:C}}function s(C){return{type:"indent",contents:C}}function a(C,o){return{type:"align",contents:o,n:C}}function n(C){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return{type:"group",id:o.id,contents:C,break:Boolean(o.shouldBreak),expandedStates:o.expandedStates}}ne();var F={type:"break-parent"},w={type:"line",hard:!0},E={type:"line",hard:!0,literal:!0},I=t([w,F]),P=t([E,F]),$={type:"cursor",placeholder:Symbol("cursor")};r.exports={concat:t,join:function D(C,o){let d=[];for(let v=0;v<o.length;v++)0!==v&&d.push(C),d.push(o[v]);return t(d)},line:{type:"line"},softline:{type:"line",soft:!0},hardline:I,literalline:P,group:n,conditionalGroup:function p(C,o){return n(C[0],Object.assign(Object.assign({},o),{},{expandedStates:C}))},fill:function y(C){return{type:"fill",parts:C}},lineSuffix:function c(C){return{type:"line-suffix",contents:C}},lineSuffixBoundary:{type:"line-suffix-boundary"},cursor:$,breakParent:F,ifBreak:function h(C,o){return{type:"if-break",breakContents:C,flatContents:o,groupId:(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).groupId}},trim:{type:"trim"},indent:s,indentIfBreak:function g(C,o){return{type:"indent-if-break",contents:C,groupId:o.groupId,negate:o.negate}},align:a,addAlignmentToDoc:function T(C,o,d){let v=C;if(o>0){for(let S=0;S<Math.floor(o/d);++S)v=s(v);v=a(o%d,v),v=a(Number.NEGATIVE_INFINITY,v)}return v},markAsRoot:function i(C){return a({type:"root"},C)},dedentToRoot:function u(C){return a(Number.NEGATIVE_INFINITY,C)},dedent:function l(C){return a(-1,C)},hardlineWithoutBreakParent:w,literallineWithoutBreakParent:E,label:function m(C,o){return{type:"label",label:C,contents:o}}}}}),Jn=te({"src/common/end-of-line.js"(e,r){ne(),r.exports={guessEndOfLine:function t(u){let i=u.indexOf("\r");return i>=0?"\n"===u.charAt(i+1)?"crlf":"cr":"lf"},convertEndOfLineToChars:function s(u){switch(u){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}},countEndOfLineChars:function a(u,i){let l;switch(i){case"\n":l=/\n/g;break;case"\r":l=/\r/g;break;case"\r\n":l=/\r\n/g;break;default:throw new Error(`Unexpected "eol" ${JSON.stringify(i)}.`)}let p=u.match(l);return p?p.length:0},normalizeEndOfLine:function n(u){return u.replace(/\r\n?/g,"\n")}}}}),lt=te({"src/utils/get-last.js"(e,r){ne();r.exports=s=>s[s.length-1]}});var wD=ht({"node_modules/strip-ansi/node_modules/ansi-regex/index.js"(){ne()}});function _D(e){if("string"!=typeof e)throw new TypeError(`Expected a \`string\`, got \`${typeof e}\``);return e.replace(function ND(){let{onlyFirst:e=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)","(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(r,e?void 0:"g")}(),"")}var PD=ht({"node_modules/strip-ansi/index.js"(){ne(),wD()}});function ID(e){return!!Number.isInteger(e)&&(e>=4352&&(e<=4447||9001===e||9002===e||11904<=e&&e<=12871&&12351!==e||12880<=e&&e<=19903||19968<=e&&e<=42182||43360<=e&&e<=43388||44032<=e&&e<=55203||63744<=e&&e<=64255||65040<=e&&e<=65049||65072<=e&&e<=65131||65281<=e&&e<=65376||65504<=e&&e<=65510||110592<=e&&e<=110593||127488<=e&&e<=127569||131072<=e&&e<=262141))}var kD=ht({"node_modules/is-fullwidth-code-point/index.js"(){ne()}}),LD=te({"node_modules/emoji-regex/index.js"(e,r){ne(),r.exports=function(){return/\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g}}}),ka={};function OD(e){if("string"!=typeof e||0===e.length||0===(e=_D(e)).length)return 0;e=e.replace((0,La.default)(),"  ");let r=0;for(let t=0;t<e.length;t++){let s=e.codePointAt(t);s<=31||s>=127&&s<=159||s>=768&&s<=879||(s>65535&&t++,r+=ID(s)?2:1)}return r}Kt(ka,{default:()=>OD});var La,jD=ht({"node_modules/string-width/index.js"(){var e,r,t;ne(),PD(),kD(),e=LD(),t=null!=e?FD(SD(e)):{},La=Pa(!r&&e&&e.__esModule?t:_r(t,"default",{value:e,enumerable:!0}),e)}}),Oa=te({"src/utils/get-string-width.js"(e,r){ne();var t=(jD(),ft(ka)).default,s=/[^\x20-\x7F]/;r.exports=function a(n){return n?s.test(n)?t(n):n.length:0}}}),Yt=te({"src/document/doc-utils.js"(e,r){ne();var t=lt(),{literalline:s,join:a}=Un(),n=o=>Array.isArray(o)||o&&"concat"===o.type,u=o=>{if(Array.isArray(o))return o;if("concat"!==o.type&&"fill"!==o.type)throw new Error("Expect doc type to be `concat` or `fill`.");return o.parts},i={};function l(o,d,v,S){let b=[o];for(;b.length>0;){let B=b.pop();if(B!==i){if(v&&b.push(B,i),!d||!1!==d(B))if(n(B)||"fill"===B.type){let k=u(B);for(let R=k.length-1;R>=0;--R)b.push(k[R])}else if("if-break"===B.type)B.flatContents&&b.push(B.flatContents),B.breakContents&&b.push(B.breakContents);else if("group"===B.type&&B.expandedStates)if(S)for(let M=B.expandedStates.length-1;M>=0;--M)b.push(B.expandedStates[M]);else b.push(B.contents);else B.contents&&b.push(B.contents)}else v(b.pop())}}function p(o,d){let v=new Map;return S(o);function S(B){if(v.has(B))return v.get(B);let k=function b(B){if(Array.isArray(B))return d(B.map(S));if("concat"===B.type||"fill"===B.type){let k=B.parts.map(S);return d(Object.assign(Object.assign({},B),{},{parts:k}))}if("if-break"===B.type){let k=B.breakContents&&S(B.breakContents),M=B.flatContents&&S(B.flatContents);return d(Object.assign(Object.assign({},B),{},{breakContents:k,flatContents:M}))}if("group"===B.type&&B.expandedStates){let k=B.expandedStates.map(S),M=k[0];return d(Object.assign(Object.assign({},B),{},{contents:M,expandedStates:k}))}if(B.contents){let k=S(B.contents);return d(Object.assign(Object.assign({},B),{},{contents:k}))}return d(B)}(B);return v.set(B,k),k}}function y(o,d,v){let S=v,b=!1;return l(o,(function B(k){let M=d(k);if(void 0!==M&&(b=!0,S=M),b)return!1})),S}function h(o){if("group"===o.type&&o.break||"line"===o.type&&o.hard||"break-parent"===o.type)return!0}function c(o){if(o.length>0){let d=t(o);!d.expandedStates&&!d.break&&(d.break="propagated")}return null}function F(o){return"line"!==o.type||o.hard?"if-break"===o.type?o.flatContents||"":o:o.soft?"":" "}var w=(o,d)=>o&&"line"===o.type&&o.hard&&d&&"break-parent"===d.type;function E(o){if(!o)return o;if(n(o)||"fill"===o.type){let d=u(o);for(;d.length>1&&w(...d.slice(-2));)d.length-=2;if(d.length>0){let v=E(t(d));d[d.length-1]=v}return Array.isArray(o)?d:Object.assign(Object.assign({},o),{},{parts:d})}switch(o.type){case"align":case"indent":case"indent-if-break":case"group":case"line-suffix":case"label":{let d=E(o.contents);return Object.assign(Object.assign({},o),{},{contents:d})}case"if-break":{let d=E(o.breakContents),v=E(o.flatContents);return Object.assign(Object.assign({},o),{},{breakContents:d,flatContents:v})}}return o}function I(o){return p(o,(d=>function x(o){switch(o.type){case"fill":if(o.parts.every((v=>""===v)))return"";break;case"group":if(!(o.contents||o.id||o.break||o.expandedStates))return"";if("group"===o.contents.type&&o.contents.id===o.id&&o.contents.break===o.break&&o.contents.expandedStates===o.expandedStates)return o.contents;break;case"align":case"indent":case"indent-if-break":case"line-suffix":if(!o.contents)return"";break;case"if-break":if(!o.flatContents&&!o.breakContents)return""}if(!n(o))return o;let d=[];for(let v of u(o)){if(!v)continue;let[S,...b]=n(v)?u(v):[v];"string"==typeof S&&"string"==typeof t(d)?d[d.length-1]+=S:d.push(S),d.push(...b)}return 0===d.length?"":1===d.length?d[0]:Array.isArray(o)?d:Object.assign(Object.assign({},o),{},{parts:d})}(d)))}function P(o){let d=[],v=o.filter(Boolean);for(;v.length>0;){let S=v.shift();if(S){if(n(S)){v.unshift(...u(S));continue}if(d.length>0&&"string"==typeof t(d)&&"string"==typeof S){d[d.length-1]+=S;continue}d.push(S)}}return d}function T(o){return a(arguments.length>1&&void 0!==arguments[1]?arguments[1]:s,o.split("\n")).parts}function m(o){if("line"===o.type)return!0}r.exports={isConcat:n,getDocParts:u,willBreak:function g(o){return y(o,h,!1)},traverseDoc:l,findInDoc:y,mapDoc:p,propagateBreaks:function f(o){let d=new Set,v=[];l(o,(function S(B){if("break-parent"===B.type&&c(v),"group"===B.type){if(v.push(B),d.has(B))return!1;d.add(B)}}),(function b(B){"group"===B.type&&v.pop().break&&c(v)}),!0)},removeLines:function _(o){return p(o,F)},stripTrailingHardline:function N(o){return E(I(o))},normalizeParts:P,normalizeDoc:function $(o){return p(o,(d=>Array.isArray(d)?P(d):d.parts?Object.assign(Object.assign({},d),{},{parts:P(d.parts)}):d))},cleanDoc:I,replaceTextEndOfLine:T,replaceEndOfLine:function D(o){return p(o,(d=>"string"==typeof d&&d.includes("\n")?T(d):d))},canBreak:function C(o){return y(o,m,!1)}}}}),qD=te({"src/document/doc-printer.js"(e,r){ne();var y,{convertEndOfLineToChars:t}=Jn(),s=lt(),a=Oa(),{fill:n,cursor:u,indent:i}=Un(),{isConcat:l,getDocParts:p}=Yt();function f(x,I){return _(x,{type:"indent"},I)}function F(x,I,P){return I===Number.NEGATIVE_INFINITY?x.root||{value:"",length:0,queue:[]}:I<0?_(x,{type:"dedent"},P):I?"root"===I.type?Object.assign(Object.assign({},x),{},{root:x}):_(x,{type:"string"==typeof I?"stringAlign":"numberAlign",n:I},P):x}function _(x,I,P){let $="dedent"===I.type?x.queue.slice(0,-1):[...x.queue,I],D="",T=0,m=0,C=0;for(let k of $)switch(k.type){case"indent":v(),P.useTabs?o(1):d(P.tabWidth);break;case"stringAlign":v(),D+=k.n,T+=k.n.length;break;case"numberAlign":m+=1,C+=k.n;break;default:throw new Error(`Unexpected type '${k.type}'`)}return b(),Object.assign(Object.assign({},x),{},{value:D,length:T,queue:$});function o(k){D+="\t".repeat(k),T+=P.tabWidth*k}function d(k){D+=" ".repeat(k),T+=k}function v(){P.useTabs?function S(){m>0&&o(m),B()}():b()}function b(){C>0&&d(C),B()}function B(){m=0,C=0}}function w(x){if(0===x.length)return 0;let I=0;for(;x.length>0&&"string"==typeof s(x)&&/^[\t ]*$/.test(s(x));)I+=x.pop().length;if(x.length>0&&"string"==typeof s(x)){let P=s(x).replace(/[\t ]*$/,"");I+=s(x).length-P.length,x[x.length-1]=P}return I}function E(x,I,P,$,D){let T=I.length,m=[x],C=[];for(;P>=0;){if(0===m.length){if(0===T)return!0;m.push(I[--T]);continue}let{mode:o,doc:d}=m.pop();if("string"==typeof d)C.push(d),P-=a(d);else if(l(d)||"fill"===d.type){let v=p(d);for(let S=v.length-1;S>=0;S--)m.push({mode:o,doc:v[S]})}else switch(d.type){case"indent":case"align":case"indent-if-break":case"label":m.push({mode:o,doc:d.contents});break;case"trim":P+=w(C);break;case"group":{if(D&&d.break)return!1;let v=d.break?1:o,S=d.expandedStates&&1===v?s(d.expandedStates):d.contents;m.push({mode:v,doc:S});break}case"if-break":{let S=1===(d.groupId?y[d.groupId]||2:o)?d.breakContents:d.flatContents;S&&m.push({mode:o,doc:S});break}case"line":if(1===o||d.hard)return!0;d.soft||(C.push(" "),P--);break;case"line-suffix":$=!0;break;case"line-suffix-boundary":if($)return!1}}return!1}r.exports={printDocToString:function N(x,I){y={};let P=I.printWidth,$=t(I.endOfLine),D=0,T=[{ind:{value:"",length:0,queue:[]},mode:1,doc:x}],m=[],C=!1,o=[];for(;T.length>0;){let{ind:v,mode:S,doc:b}=T.pop();if("string"==typeof b){let B="\n"!==$?b.replace(/\n/g,$):b;m.push(B),D+=a(B)}else if(l(b)){let B=p(b);for(let k=B.length-1;k>=0;k--)T.push({ind:v,mode:S,doc:B[k]})}else switch(b.type){case"cursor":m.push(u.placeholder);break;case"indent":T.push({ind:f(v,I),mode:S,doc:b.contents});break;case"align":T.push({ind:F(v,b.n,I),mode:S,doc:b.contents});break;case"trim":D-=w(m);break;case"group":switch(S){case 2:if(!C){T.push({ind:v,mode:b.break?1:2,doc:b.contents});break}case 1:{C=!1;let B={ind:v,mode:2,doc:b.contents},k=P-D,M=o.length>0;if(!b.break&&E(B,T,k,M))T.push(B);else if(b.expandedStates){let R=s(b.expandedStates);if(b.break){T.push({ind:v,mode:1,doc:R});break}for(let q=1;q<b.expandedStates.length+1;q++){if(q>=b.expandedStates.length){T.push({ind:v,mode:1,doc:R});break}{let L={ind:v,mode:2,doc:b.expandedStates[q]};if(E(L,T,k,M)){T.push(L);break}}}}else T.push({ind:v,mode:1,doc:b.contents});break}}b.id&&(y[b.id]=s(T).mode);break;case"fill":{let B=P-D,{parts:k}=b;if(0===k.length)break;let[M,R]=k,q={ind:v,mode:2,doc:M},J={ind:v,mode:1,doc:M},L=E(q,[],B,o.length>0,!0);if(1===k.length){L?T.push(q):T.push(J);break}let Q={ind:v,mode:2,doc:R},V={ind:v,mode:1,doc:R};if(2===k.length){L?T.push(Q,q):T.push(V,J);break}k.splice(0,2);let j={ind:v,mode:S,doc:n(k)};E({ind:v,mode:2,doc:[M,R,k[0]]},[],B,o.length>0,!0)?T.push(j,Q,q):L?T.push(j,V,q):T.push(j,V,J);break}case"if-break":case"indent-if-break":{let B=b.groupId?y[b.groupId]:S;if(1===B){let k="if-break"===b.type?b.breakContents:b.negate?b.contents:i(b.contents);k&&T.push({ind:v,mode:S,doc:k})}if(2===B){let k="if-break"===b.type?b.flatContents:b.negate?i(b.contents):b.contents;k&&T.push({ind:v,mode:S,doc:k})}break}case"line-suffix":o.push({ind:v,mode:S,doc:b.contents});break;case"line-suffix-boundary":o.length>0&&T.push({ind:v,mode:S,doc:{type:"line",hard:!0}});break;case"line":switch(S){case 2:if(!b.hard){b.soft||(m.push(" "),D+=1);break}C=!0;case 1:if(o.length>0){T.push({ind:v,mode:S,doc:b},...o.reverse()),o.length=0;break}b.literal?v.root?(m.push($,v.root.value),D=v.root.length):(m.push($),D=0):(D-=w(m),m.push($+v.value),D=v.length)}break;case"label":T.push({ind:v,mode:S,doc:b.contents})}0===T.length&&o.length>0&&(T.push(...o.reverse()),o.length=0)}let d=m.indexOf(u.placeholder);if(-1!==d){let v=m.indexOf(u.placeholder,d+1),S=m.slice(0,d).join(""),b=m.slice(d+1,v).join("");return{formatted:S+b+m.slice(v+1).join(""),cursorNodeStart:S.length,cursorNodeText:b}}return{formatted:m.join("")}}}}}),MD=te({"src/document/doc-debug.js"(e,r){ne();var{isConcat:t,getDocParts:s}=Yt();function a(u){if(!u)return"";if(t(u)){let i=[];for(let l of s(u))if(t(l))i.push(...a(l).parts);else{let p=a(l);""!==p&&i.push(p)}return{type:"concat",parts:i}}return"if-break"===u.type?Object.assign(Object.assign({},u),{},{breakContents:a(u.breakContents),flatContents:a(u.flatContents)}):"group"===u.type?Object.assign(Object.assign({},u),{},{contents:a(u.contents),expandedStates:u.expandedStates&&u.expandedStates.map(a)}):"fill"===u.type?{type:"fill",parts:u.parts.map(a)}:u.contents?Object.assign(Object.assign({},u),{},{contents:a(u.contents)}):u}r.exports={printDocToDebug:function n(u){let i=Object.create(null),l=new Set;return function p(h,g,c){if("string"==typeof h)return JSON.stringify(h);if(t(h)){let f=s(h).map(p).filter(Boolean);return 1===f.length?f[0]:`[${f.join(", ")}]`}if("line"===h.type){let f=Array.isArray(c)&&c[g+1]&&"break-parent"===c[g+1].type;return h.literal?f?"literalline":"literallineWithoutBreakParent":h.hard?f?"hardline":"hardlineWithoutBreakParent":h.soft?"softline":"line"}if("break-parent"===h.type)return Array.isArray(c)&&c[g-1]&&"line"===c[g-1].type&&c[g-1].hard?void 0:"breakParent";if("trim"===h.type)return"trim";if("indent"===h.type)return"indent("+p(h.contents)+")";if("align"===h.type)return h.n===Number.NEGATIVE_INFINITY?"dedentToRoot("+p(h.contents)+")":h.n<0?"dedent("+p(h.contents)+")":"root"===h.n.type?"markAsRoot("+p(h.contents)+")":"align("+JSON.stringify(h.n)+", "+p(h.contents)+")";if("if-break"===h.type)return"ifBreak("+p(h.breakContents)+(h.flatContents?", "+p(h.flatContents):"")+(h.groupId?(h.flatContents?"":', ""')+`, { groupId: ${y(h.groupId)} }`:"")+")";if("indent-if-break"===h.type){let f=[];h.negate&&f.push("negate: true"),h.groupId&&f.push(`groupId: ${y(h.groupId)}`);let F=f.length>0?`, { ${f.join(", ")} }`:"";return`indentIfBreak(${p(h.contents)}${F})`}if("group"===h.type){let f=[];h.break&&"propagated"!==h.break&&f.push("shouldBreak: true"),h.id&&f.push(`id: ${y(h.id)}`);let F=f.length>0?`, { ${f.join(", ")} }`:"";return h.expandedStates?`conditionalGroup([${h.expandedStates.map((_=>p(_))).join(",")}]${F})`:`group(${p(h.contents)}${F})`}if("fill"===h.type)return`fill([${h.parts.map((f=>p(f))).join(", ")}])`;if("line-suffix"===h.type)return"lineSuffix("+p(h.contents)+")";if("line-suffix-boundary"===h.type)return"lineSuffixBoundary";if("label"===h.type)return`label(${JSON.stringify(h.label)}, ${p(h.contents)})`;throw new Error("Unknown doc type "+h.type)}(a(u));function y(h){if("symbol"!=typeof h)return JSON.stringify(String(h));if(h in i)return i[h];let g=String(h).slice(7,-1)||"symbol";for(let c=0;;c++){let f=g+(c>0?` #${c}`:"");if(!l.has(f))return l.add(f),i[h]=`Symbol.for(${JSON.stringify(f)})`}}}}}}),qe=te({"src/document/index.js"(e,r){ne(),r.exports={builders:Un(),printer:qD(),utils:Yt(),debug:MD()}}}),ja={};function RD(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}Kt(ja,{default:()=>RD});var $D=ht({"node_modules/escape-string-regexp/index.js"(){ne()}}),qa=te({"node_modules/semver/internal/debug.js"(e,r){ne();var t="object"==typeof wt&&wt.env&&wt.env.NODE_DEBUG&&/\bsemver\b/i.test(wt.env.NODE_DEBUG)?function(){for(var s=arguments.length,a=new Array(s),n=0;n<s;n++)a[n]=arguments[n];return console.error("SEMVER",...a)}:()=>{};r.exports=t}}),Ma=te({"node_modules/semver/internal/constants.js"(e,r){ne();var a=Number.MAX_SAFE_INTEGER||9007199254740991;r.exports={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:a,MAX_SAFE_COMPONENT_LENGTH:16}}}),VD=te({"node_modules/semver/internal/re.js"(e,r){ne();var{MAX_SAFE_COMPONENT_LENGTH:t}=Ma(),s=qa(),a=(e=r.exports={}).re=[],n=e.src=[],u=e.t={},i=0,l=(p,y,h)=>{let g=i++;s(p,g,y),u[p]=g,n[g]=y,a[g]=new RegExp(y,h?"g":void 0)};l("NUMERICIDENTIFIER","0|[1-9]\\d*"),l("NUMERICIDENTIFIERLOOSE","[0-9]+"),l("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),l("MAINVERSION",`(${n[u.NUMERICIDENTIFIER]})\\.(${n[u.NUMERICIDENTIFIER]})\\.(${n[u.NUMERICIDENTIFIER]})`),l("MAINVERSIONLOOSE",`(${n[u.NUMERICIDENTIFIERLOOSE]})\\.(${n[u.NUMERICIDENTIFIERLOOSE]})\\.(${n[u.NUMERICIDENTIFIERLOOSE]})`),l("PRERELEASEIDENTIFIER",`(?:${n[u.NUMERICIDENTIFIER]}|${n[u.NONNUMERICIDENTIFIER]})`),l("PRERELEASEIDENTIFIERLOOSE",`(?:${n[u.NUMERICIDENTIFIERLOOSE]}|${n[u.NONNUMERICIDENTIFIER]})`),l("PRERELEASE",`(?:-(${n[u.PRERELEASEIDENTIFIER]}(?:\\.${n[u.PRERELEASEIDENTIFIER]})*))`),l("PRERELEASELOOSE",`(?:-?(${n[u.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${n[u.PRERELEASEIDENTIFIERLOOSE]})*))`),l("BUILDIDENTIFIER","[0-9A-Za-z-]+"),l("BUILD",`(?:\\+(${n[u.BUILDIDENTIFIER]}(?:\\.${n[u.BUILDIDENTIFIER]})*))`),l("FULLPLAIN",`v?${n[u.MAINVERSION]}${n[u.PRERELEASE]}?${n[u.BUILD]}?`),l("FULL",`^${n[u.FULLPLAIN]}$`),l("LOOSEPLAIN",`[v=\\s]*${n[u.MAINVERSIONLOOSE]}${n[u.PRERELEASELOOSE]}?${n[u.BUILD]}?`),l("LOOSE",`^${n[u.LOOSEPLAIN]}$`),l("GTLT","((?:<|>)?=?)"),l("XRANGEIDENTIFIERLOOSE",`${n[u.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),l("XRANGEIDENTIFIER",`${n[u.NUMERICIDENTIFIER]}|x|X|\\*`),l("XRANGEPLAIN",`[v=\\s]*(${n[u.XRANGEIDENTIFIER]})(?:\\.(${n[u.XRANGEIDENTIFIER]})(?:\\.(${n[u.XRANGEIDENTIFIER]})(?:${n[u.PRERELEASE]})?${n[u.BUILD]}?)?)?`),l("XRANGEPLAINLOOSE",`[v=\\s]*(${n[u.XRANGEIDENTIFIERLOOSE]})(?:\\.(${n[u.XRANGEIDENTIFIERLOOSE]})(?:\\.(${n[u.XRANGEIDENTIFIERLOOSE]})(?:${n[u.PRERELEASELOOSE]})?${n[u.BUILD]}?)?)?`),l("XRANGE",`^${n[u.GTLT]}\\s*${n[u.XRANGEPLAIN]}$`),l("XRANGELOOSE",`^${n[u.GTLT]}\\s*${n[u.XRANGEPLAINLOOSE]}$`),l("COERCE",`(^|[^\\d])(\\d{1,${t}})(?:\\.(\\d{1,${t}}))?(?:\\.(\\d{1,${t}}))?(?:$|[^\\d])`),l("COERCERTL",n[u.COERCE],!0),l("LONETILDE","(?:~>?)"),l("TILDETRIM",`(\\s*)${n[u.LONETILDE]}\\s+`,!0),e.tildeTrimReplace="$1~",l("TILDE",`^${n[u.LONETILDE]}${n[u.XRANGEPLAIN]}$`),l("TILDELOOSE",`^${n[u.LONETILDE]}${n[u.XRANGEPLAINLOOSE]}$`),l("LONECARET","(?:\\^)"),l("CARETTRIM",`(\\s*)${n[u.LONECARET]}\\s+`,!0),e.caretTrimReplace="$1^",l("CARET",`^${n[u.LONECARET]}${n[u.XRANGEPLAIN]}$`),l("CARETLOOSE",`^${n[u.LONECARET]}${n[u.XRANGEPLAINLOOSE]}$`),l("COMPARATORLOOSE",`^${n[u.GTLT]}\\s*(${n[u.LOOSEPLAIN]})$|^$`),l("COMPARATOR",`^${n[u.GTLT]}\\s*(${n[u.FULLPLAIN]})$|^$`),l("COMPARATORTRIM",`(\\s*)${n[u.GTLT]}\\s*(${n[u.LOOSEPLAIN]}|${n[u.XRANGEPLAIN]})`,!0),e.comparatorTrimReplace="$1$2$3",l("HYPHENRANGE",`^\\s*(${n[u.XRANGEPLAIN]})\\s+-\\s+(${n[u.XRANGEPLAIN]})\\s*$`),l("HYPHENRANGELOOSE",`^\\s*(${n[u.XRANGEPLAINLOOSE]})\\s+-\\s+(${n[u.XRANGEPLAINLOOSE]})\\s*$`),l("STAR","(<|>)?=?\\s*\\*"),l("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),l("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")}}),WD=te({"node_modules/semver/internal/parse-options.js"(e,r){ne();var t=["includePrerelease","loose","rtl"];r.exports=a=>a?"object"!=typeof a?{loose:!0}:t.filter((n=>a[n])).reduce(((n,u)=>(n[u]=!0,n)),{}):{}}}),HD=te({"node_modules/semver/internal/identifiers.js"(e,r){ne();var t=/^[0-9]+$/,s=(n,u)=>{let i=t.test(n),l=t.test(u);return i&&l&&(n=+n,u=+u),n===u?0:i&&!l?-1:l&&!i?1:n<u?-1:1};r.exports={compareIdentifiers:s,rcompareIdentifiers:(n,u)=>s(u,n)}}}),GD=te({"node_modules/semver/classes/semver.js"(e,r){ne();var t=qa(),{MAX_LENGTH:s,MAX_SAFE_INTEGER:a}=Ma(),{re:n,t:u}=VD(),i=WD(),{compareIdentifiers:l}=HD(),p=class{constructor(y,h){if(h=i(h),y instanceof p){if(y.loose===!!h.loose&&y.includePrerelease===!!h.includePrerelease)return y;y=y.version}else if("string"!=typeof y)throw new TypeError(`Invalid Version: ${y}`);if(y.length>s)throw new TypeError(`version is longer than ${s} characters`);t("SemVer",y,h),this.options=h,this.loose=!!h.loose,this.includePrerelease=!!h.includePrerelease;let g=y.trim().match(h.loose?n[u.LOOSE]:n[u.FULL]);if(!g)throw new TypeError(`Invalid Version: ${y}`);if(this.raw=y,this.major=+g[1],this.minor=+g[2],this.patch=+g[3],this.major>a||this.major<0)throw new TypeError("Invalid major version");if(this.minor>a||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>a||this.patch<0)throw new TypeError("Invalid patch version");g[4]?this.prerelease=g[4].split(".").map((c=>{if(/^[0-9]+$/.test(c)){let f=+c;if(f>=0&&f<a)return f}return c})):this.prerelease=[],this.build=g[5]?g[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(y){if(t("SemVer.compare",this.version,this.options,y),!(y instanceof p)){if("string"==typeof y&&y===this.version)return 0;y=new p(y,this.options)}return y.version===this.version?0:this.compareMain(y)||this.comparePre(y)}compareMain(y){return y instanceof p||(y=new p(y,this.options)),l(this.major,y.major)||l(this.minor,y.minor)||l(this.patch,y.patch)}comparePre(y){if(y instanceof p||(y=new p(y,this.options)),this.prerelease.length&&!y.prerelease.length)return-1;if(!this.prerelease.length&&y.prerelease.length)return 1;if(!this.prerelease.length&&!y.prerelease.length)return 0;let h=0;do{let g=this.prerelease[h],c=y.prerelease[h];if(t("prerelease compare",h,g,c),void 0===g&&void 0===c)return 0;if(void 0===c)return 1;if(void 0===g)return-1;if(g!==c)return l(g,c)}while(++h)}compareBuild(y){y instanceof p||(y=new p(y,this.options));let h=0;do{let g=this.build[h],c=y.build[h];if(t("prerelease compare",h,g,c),void 0===g&&void 0===c)return 0;if(void 0===c)return 1;if(void 0===g)return-1;if(g!==c)return l(g,c)}while(++h)}inc(y,h){switch(y){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",h);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",h);break;case"prepatch":this.prerelease.length=0,this.inc("patch",h),this.inc("pre",h);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",h),this.inc("pre",h);break;case"major":(0!==this.minor||0!==this.patch||0===this.prerelease.length)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(0!==this.patch||0===this.prerelease.length)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let g=this.prerelease.length;for(;--g>=0;)"number"==typeof this.prerelease[g]&&(this.prerelease[g]++,g=-2);-1===g&&this.prerelease.push(0)}h&&(0===l(this.prerelease[0],h)?isNaN(this.prerelease[1])&&(this.prerelease=[h,0]):this.prerelease=[h,0]);break;default:throw new Error(`invalid increment argument: ${y}`)}return this.format(),this.raw=this.version,this}};r.exports=p}}),zn=te({"node_modules/semver/functions/compare.js"(e,r){ne();var t=GD();r.exports=(a,n,u)=>new t(a,u).compare(new t(n,u))}}),UD=te({"node_modules/semver/functions/lt.js"(e,r){ne();var t=zn();r.exports=(a,n,u)=>t(a,n,u)<0}}),JD=te({"node_modules/semver/functions/gte.js"(e,r){ne();var t=zn();r.exports=(a,n,u)=>t(a,n,u)>=0}}),zD=te({"src/utils/arrayify.js"(e,r){ne(),r.exports=(t,s)=>Object.entries(t).map((a=>{let[n,u]=a;return Object.assign({[s]:n},u)}))}}),XD=te({"node_modules/outdent/lib/index.js"(e,r){function t(){for(var E=[],N=0;N<arguments.length;N++)E[N]=arguments[N]}function s(){return typeof WeakMap<"u"?new WeakMap:function a(){return{add:t,delete:t,get:t,set:t,has:function(E){return!1}}}()}ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.outdent=void 0;var n=Object.prototype.hasOwnProperty,u=function(E,N){return n.call(E,N)};function i(E,N){for(var x in N)u(N,x)&&(E[x]=N[x]);return E}var l=/^[ \t]*(?:\r\n|\r|\n)/,p=/(?:\r\n|\r|\n)[ \t]*$/,y=/^(?:[\r\n]|$)/,h=/(?:\r\n|\r|\n)([ \t]*)(?:[^ \t\r\n]|$)/,g=/^[ \t]*[\r\n][ \t\r\n]*$/;function c(E,N,x){var I=0,P=E[0].match(h);P&&(I=P[1].length);var D=new RegExp("(\\r\\n|\\r|\\n).{0,"+I+"}","g");N&&(E=E.slice(1));var T=x.newline,m=x.trimLeadingNewline,C=x.trimTrailingNewline,o="string"==typeof T,d=E.length;return E.map((function(S,b){return S=S.replace(D,"$1"),0===b&&m&&(S=S.replace(l,"")),b===d-1&&C&&(S=S.replace(p,"")),o&&(S=S.replace(/\r\n|\n|\r/g,(function(B){return T}))),S}))}var w=function _(E){var N=s(),x=s(),P=i((function I($){for(var D=[],T=1;T<arguments.length;T++)D[T-1]=arguments[T];if(function F(E){return u(E,"raw")&&u(E,"length")}($)){var m=$,C=(D[0]===I||D[0]===w)&&g.test(m[0])&&y.test(m[1]),o=C?x:N,d=o.get(m);if(d||(d=c(m,C,E),o.set(m,d)),0===D.length)return d[0];var v=function f(E,N){for(var x="",I=0,P=E.length;I<P;I++)x+=E[I],I<P-1&&(x+=N[I]);return x}(d,C?D.slice(1):D);return v}return _(i(i({},E),$||{}))}),{string:function($){return c([$],!1,E)[0]}});return P}({trimLeadingNewline:!0,trimTrailingNewline:!0});if(e.outdent=w,e.default=w,typeof r<"u")try{r.exports=w,Object.defineProperty(w,"__esModule",{value:!0}),w.default=w,w.outdent=w}catch{}}}),KD=te({"src/main/core-options.js"(e,r){ne();var{outdent:t}=XD(),s="Config",a="Editor",u="Other",l="Global",p="Special",y={cursorOffset:{since:"1.4.0",category:p,type:"int",default:-1,range:{start:-1,end:Number.POSITIVE_INFINITY,step:1},description:t`
      Print (to stderr) where a cursor at the given position would move to after formatting.
      This option cannot be used with --range-start and --range-end.
    `,cliCategory:a},endOfLine:{since:"1.15.0",category:l,type:"choice",default:[{since:"1.15.0",value:"auto"},{since:"2.0.0",value:"lf"}],description:"Which end of line characters to apply.",choices:[{value:"lf",description:"Line Feed only (\\n), common on Linux and macOS as well as inside git repos"},{value:"crlf",description:"Carriage Return + Line Feed characters (\\r\\n), common on Windows"},{value:"cr",description:"Carriage Return character only (\\r), used very rarely"},{value:"auto",description:t`
          Maintain existing
          (mixed values within one file are normalised by looking at what's used after the first line)
        `}]},filepath:{since:"1.4.0",category:p,type:"path",description:"Specify the input filepath. This will be used to do parser inference.",cliName:"stdin-filepath",cliCategory:u,cliDescription:"Path to the file to pretend that stdin comes from."},insertPragma:{since:"1.8.0",category:p,type:"boolean",default:!1,description:"Insert @format pragma into file's first docblock comment.",cliCategory:u},parser:{since:"0.0.10",category:l,type:"choice",default:[{since:"0.0.10",value:"babylon"},{since:"1.13.0",value:void 0}],description:"Which parser to use.",exception:h=>"string"==typeof h||"function"==typeof h,choices:[{value:"flow",description:"Flow"},{value:"babel",since:"1.16.0",description:"JavaScript"},{value:"babel-flow",since:"1.16.0",description:"Flow"},{value:"babel-ts",since:"2.0.0",description:"TypeScript"},{value:"typescript",since:"1.4.0",description:"TypeScript"},{value:"acorn",since:"2.6.0",description:"JavaScript"},{value:"espree",since:"2.2.0",description:"JavaScript"},{value:"meriyah",since:"2.2.0",description:"JavaScript"},{value:"css",since:"1.7.1",description:"CSS"},{value:"less",since:"1.7.1",description:"Less"},{value:"scss",since:"1.7.1",description:"SCSS"},{value:"json",since:"1.5.0",description:"JSON"},{value:"json5",since:"1.13.0",description:"JSON5"},{value:"json-stringify",since:"1.13.0",description:"JSON.stringify"},{value:"graphql",since:"1.5.0",description:"GraphQL"},{value:"markdown",since:"1.8.0",description:"Markdown"},{value:"mdx",since:"1.15.0",description:"MDX"},{value:"vue",since:"1.10.0",description:"Vue"},{value:"yaml",since:"1.14.0",description:"YAML"},{value:"glimmer",since:"2.3.0",description:"Ember / Handlebars"},{value:"html",since:"1.15.0",description:"HTML"},{value:"angular",since:"1.15.0",description:"Angular"},{value:"lwc",since:"1.17.0",description:"Lightning Web Components"}]},plugins:{since:"1.10.0",type:"path",array:!0,default:[{value:[]}],category:l,description:"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.",exception:h=>"string"==typeof h||"object"==typeof h,cliName:"plugin",cliCategory:s},pluginSearchDirs:{since:"1.13.0",type:"path",array:!0,default:[{value:[]}],category:l,description:t`
      Custom directory that contains prettier plugins in node_modules subdirectory.
      Overrides default behavior when plugins are searched relatively to the location of Prettier.
      Multiple values are accepted.
    `,exception:h=>"string"==typeof h||"object"==typeof h,cliName:"plugin-search-dir",cliCategory:s},printWidth:{since:"0.0.0",category:l,type:"int",default:80,description:"The line length where Prettier will try wrap.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},rangeEnd:{since:"1.4.0",category:p,type:"int",default:Number.POSITIVE_INFINITY,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:t`
      Format code ending at a given character offset (exclusive).
      The range will extend forwards to the end of the selected statement.
      This option cannot be used with --cursor-offset.
    `,cliCategory:a},rangeStart:{since:"1.4.0",category:p,type:"int",default:0,range:{start:0,end:Number.POSITIVE_INFINITY,step:1},description:t`
      Format code starting at a given character offset.
      The range will extend backwards to the start of the first line containing the selected statement.
      This option cannot be used with --cursor-offset.
    `,cliCategory:a},requirePragma:{since:"1.7.0",category:p,type:"boolean",default:!1,description:t`
      Require either '@prettier' or '@format' to be present in the file's first docblock comment
      in order for it to be formatted.
    `,cliCategory:u},tabWidth:{type:"int",category:l,default:2,description:"Number of spaces per indentation level.",range:{start:0,end:Number.POSITIVE_INFINITY,step:1}},useTabs:{since:"1.0.0",category:l,type:"boolean",default:!1,description:"Indent with tabs instead of spaces."},embeddedLanguageFormatting:{since:"2.1.0",category:l,type:"choice",default:[{since:"2.1.0",value:"auto"}],description:"Control how Prettier formats quoted code embedded in the file.",choices:[{value:"auto",description:"Format embedded code if Prettier can automatically identify it."},{value:"off",description:"Never automatically format embedded code."}]}};r.exports={CATEGORY_CONFIG:s,CATEGORY_EDITOR:a,CATEGORY_FORMAT:"Format",CATEGORY_OTHER:u,CATEGORY_OUTPUT:"Output",CATEGORY_GLOBAL:l,CATEGORY_SPECIAL:p,options:y}}}),Xn=te({"src/main/support.js"(e,r){ne();var t={compare:zn(),lt:UD(),gte:JD()},s=zD(),a=Ia().version,n=KD().options;r.exports={getSupportInfo:function u(){let{plugins:l=[],showUnreleased:p=!1,showDeprecated:y=!1,showInternal:h=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},g=a.split("-",1)[0],c=l.flatMap((E=>E.languages||[])).filter(F),f=s(Object.assign({},...l.map((E=>{let{options:N}=E;return N})),n),"name").filter((E=>F(E)&&_(E))).sort(((E,N)=>E.name===N.name?0:E.name<N.name?-1:1)).map((function w(E){return h?E:Hn(E,hD)})).map((E=>{E=Object.assign({},E),Array.isArray(E.default)&&(E.default=1===E.default.length?E.default[0].value:E.default.filter(F).sort(((x,I)=>t.compare(I.since,x.since)))[0].value),Array.isArray(E.choices)&&(E.choices=E.choices.filter((x=>F(x)&&_(x))),"parser"===E.name&&function i(l,p,y){let h=new Set(l.choices.map((g=>g.value)));for(let g of p)if(g.parsers)for(let c of g.parsers)if(!h.has(c)){h.add(c);let f=y.find((_=>_.parsers&&_.parsers[c])),F=g.name;f&&f.name&&(F+=` (plugin: ${f.name})`),l.choices.push({value:c,description:F})}}(E,c,l));let N=Object.fromEntries(l.filter((x=>x.defaultOptions&&void 0!==x.defaultOptions[E.name])).map((x=>[x.name,x.defaultOptions[E.name]])));return Object.assign(Object.assign({},E),{},{pluginDefaults:N})}));return{languages:c,options:f};function F(E){return p||!("since"in E)||E.since&&t.gte(g,E.since)}function _(E){return y||!("deprecated"in E)||E.deprecated&&t.lt(g,E.deprecated)}}}}}),Kn=te({"src/utils/is-non-empty-array.js"(e,r){ne(),r.exports=function t(s){return Array.isArray(s)&&s.length>0}}}),Pr=te({"src/utils/text/skip.js"(e,r){function t(i){return(l,p,y)=>{let h=y&&y.backwards;if(!1===p)return!1;let{length:g}=l,c=p;for(;c>=0&&c<g;){let f=l.charAt(c);if(i instanceof RegExp){if(!i.test(f))return c}else if(!i.includes(f))return c;h?c--:c++}return(-1===c||c===g)&&c}}ne();var s=t(/\s/),a=t(" \t"),n=t(",; \t"),u=t(/[^\n\r]/);r.exports={skipWhitespace:s,skipSpaces:a,skipToLineEnd:n,skipEverythingButNewLine:u}}}),Ra=te({"src/utils/text/skip-inline-comment.js"(e,r){ne(),r.exports=function t(s,a){if(!1===a)return!1;if("/"===s.charAt(a)&&"*"===s.charAt(a+1))for(let n=a+2;n<s.length;++n)if("*"===s.charAt(n)&&"/"===s.charAt(n+1))return n+2;return a}}}),$a=te({"src/utils/text/skip-trailing-comment.js"(e,r){ne();var{skipEverythingButNewLine:t}=Pr();r.exports=function s(a,n){return!1!==n&&("/"===a.charAt(n)&&"/"===a.charAt(n+1)?t(a,n):n)}}}),Va=te({"src/utils/text/skip-newline.js"(e,r){ne(),r.exports=function t(s,a,n){let u=n&&n.backwards;if(!1===a)return!1;let i=s.charAt(a);if(u){if("\r"===s.charAt(a-1)&&"\n"===i)return a-2;if("\n"===i||"\r"===i||"\u2028"===i||"\u2029"===i)return a-1}else{if("\r"===i&&"\n"===s.charAt(a+1))return a+2;if("\n"===i||"\r"===i||"\u2028"===i||"\u2029"===i)return a+1}return a}}}),YD=te({"src/utils/text/get-next-non-space-non-comment-character-index-with-start-index.js"(e,r){ne();var t=Ra(),s=Va(),a=$a(),{skipSpaces:n}=Pr();r.exports=function u(i,l){let p=null,y=l;for(;y!==p;)p=y,y=n(i,y),y=t(i,y),y=a(i,y),y=s(i,y);return y}}}),Ue=te({"src/common/util.js"(e,r){ne();var{default:t}=($D(),ft(ja)),s=lt(),{getSupportInfo:a}=Xn(),n=Kn(),u=Oa(),{skipWhitespace:i,skipSpaces:l,skipToLineEnd:p,skipEverythingButNewLine:y}=Pr(),h=Ra(),g=$a(),c=Va(),f=YD();function w(V,j){let Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},ie=l(V,Y.backwards?j-1:j,Y);return ie!==c(V,ie,Y)}function x(V,j){let Y=null,ie=j;for(;ie!==Y;)Y=ie,ie=p(V,ie),ie=h(V,ie),ie=l(V,ie);return ie=g(V,ie),ie=c(V,ie),!1!==ie&&w(V,ie)}function P(V,j,Y){return f(V,Y(j))}function T(V,j){let ie=0;for(let ee=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;ee<V.length;++ee)"\t"===V[ee]?ie=ie+j-ie%j:ie++;return ie}function C(V,j){let Y={quote:'"',regex:/"/g,escaped:"&quot;"},ie={quote:"'",regex:/'/g,escaped:"&apos;"},ee="'"===j?ie:Y,ce=ee===ie?Y:ie,W=ee;if(V.includes(ee.quote)||V.includes(ce.quote)){W=(V.match(ee.regex)||[]).length>(V.match(ce.regex)||[]).length?ce:ee}return W}function d(V,j,Y){let ie='"'===j?"'":'"',ce=V.replace(/\\(.)|(["'])/gs,((W,K,de)=>K===ie?K:de===j?"\\"+de:de||(Y&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(K)?K:"\\"+K)));return j+ce+j}function B(V,j){(V.comments||(V.comments=[])).push(j),j.printed=!1,j.nodeDescription=function Q(V){let j=V.type||V.kind||"(unknown type)",Y=String(V.name||V.id&&("object"==typeof V.id?V.id.name:V.id)||V.key&&("object"==typeof V.key?V.key.name:V.key)||V.value&&("object"==typeof V.value?"":String(V.value))||V.operator||"");return Y.length>20&&(Y=Y.slice(0,19)+"â¦"),j+(Y?" "+Y:"")}(V)}r.exports={inferParserByLanguage:function q(V,j){let{languages:Y}=a({plugins:j.plugins}),ie=Y.find((ee=>{let{name:ce}=ee;return ce.toLowerCase()===V}))||Y.find((ee=>{let{aliases:ce}=ee;return Array.isArray(ce)&&ce.includes(V)}))||Y.find((ee=>{let{extensions:ce}=ee;return Array.isArray(ce)&&ce.includes(`.${V}`)}));return ie&&ie.parsers[0]},getStringWidth:u,getMaxContinuousCount:function S(V,j){let Y=V.match(new RegExp(`(${t(j)})+`,"g"));return null===Y?0:Y.reduce(((ie,ee)=>Math.max(ie,ee.length/j.length)),0)},getMinNotPresentContinuousCount:function b(V,j){let Y=V.match(new RegExp(`(${t(j)})+`,"g"));if(null===Y)return 0;let ie=new Map,ee=0;for(let ce of Y){let W=ce.length/j.length;ie.set(W,!0),W>ee&&(ee=W)}for(let ce=1;ce<ee;ce++)if(!ie.get(ce))return ce;return ee+1},getPenultimate:V=>V[V.length-2],getLast:s,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:f,getNextNonSpaceNonCommentCharacterIndex:P,getNextNonSpaceNonCommentCharacter:function $(V,j,Y){return V.charAt(P(V,j,Y))},skip:function _(V){return(j,Y,ie)=>{let ee=ie&&ie.backwards;if(!1===Y)return!1;let{length:ce}=j,W=Y;for(;W>=0&&W<ce;){let K=j.charAt(W);if(V instanceof RegExp){if(!V.test(K))return W}else if(!V.includes(K))return W;ee?W--:W++}return(-1===W||W===ce)&&W}},skipWhitespace:i,skipSpaces:l,skipToLineEnd:p,skipEverythingButNewLine:y,skipInlineComment:h,skipTrailingComment:g,skipNewline:c,isNextLineEmptyAfterIndex:x,isNextLineEmpty:function I(V,j,Y){return x(V,Y(j))},isPreviousLineEmpty:function N(V,j,Y){let ie=Y(j)-1;return ie=l(V,ie,{backwards:!0}),ie=c(V,ie,{backwards:!0}),ie=l(V,ie,{backwards:!0}),ie!==c(V,ie,{backwards:!0})},hasNewline:w,hasNewlineInRange:function E(V,j,Y){for(let ie=j;ie<Y;++ie)if("\n"===V.charAt(ie))return!0;return!1},hasSpaces:function D(V,j){let Y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return l(V,Y.backwards?j-1:j,Y)!==j},getAlignmentSize:T,getIndentSize:function m(V,j){let Y=V.lastIndexOf("\n");return-1===Y?0:T(V.slice(Y+1).match(/^[\t ]*/)[0],j)},getPreferredQuote:C,printString:function o(V,j){let Y=V.slice(1,-1);return d(Y,"json"===j.parser||"json5"===j.parser&&"preserve"===j.quoteProps&&!j.singleQuote?'"':j.__isInHtmlAttribute?"'":C(Y,j.singleQuote?"'":'"').quote,!("css"===j.parser||"less"===j.parser||"scss"===j.parser||j.__embeddedInHtml))},printNumber:function v(V){return V.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(\d)/,"$1$2$3").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},makeString:d,addLeadingComment:function k(V,j){j.leading=!0,j.trailing=!1,B(V,j)},addDanglingComment:function M(V,j,Y){j.leading=!1,j.trailing=!1,Y&&(j.marker=Y),B(V,j)},addTrailingComment:function R(V,j){j.leading=!1,j.trailing=!0,B(V,j)},isFrontMatterNode:function J(V){return V&&"front-matter"===V.type},isNonEmptyArray:n,createGroupIdMapper:function L(V){let j=new WeakMap;return function(Y){return j.has(Y)||j.set(Y,Symbol(V)),j.get(Y)}}}}}),Wa={};function Ha(e,r){for(var t=0,s=e.length-1;s>=0;s--){var a=e[s];"."===a?e.splice(s,1):".."===a?(e.splice(s,1),t++):t&&(e.splice(s,1),t--)}if(r)for(;t--;t)e.unshift("..");return e}function wr(){for(var e="",r=!1,t=arguments.length-1;t>=-1&&!r;t--){var s=t>=0?arguments[t]:"/";if("string"!=typeof s)throw new TypeError("Arguments to path.resolve must be strings");s&&(e=s+"/"+e,r="/"===s.charAt(0))}return(r?"/":"")+(e=Ha(Zn(e.split("/"),(function(a){return!!a})),!r).join("/"))||"."}function Yn(e){var r=Qn(e),t="/"===Ya(e,-1);return!(e=Ha(Zn(e.split("/"),(function(s){return!!s})),!r).join("/"))&&!r&&(e="."),e&&t&&(e+="/"),(r?"/":"")+e}function Qn(e){return"/"===e.charAt(0)}function Ga(){return Yn(Zn(Array.prototype.slice.call(arguments,0),(function(r,t){if("string"!=typeof r)throw new TypeError("Arguments to path.join must be strings");return r})).join("/"))}function Ua(e,r){function t(p){for(var y=0;y<p.length&&""===p[y];y++);for(var h=p.length-1;h>=0&&""===p[h];h--);return y>h?[]:p.slice(y,h-y+1)}e=wr(e).substr(1),r=wr(r).substr(1);for(var s=t(e.split("/")),a=t(r.split("/")),n=Math.min(s.length,a.length),u=n,i=0;i<n;i++)if(s[i]!==a[i]){u=i;break}var l=[];for(i=u;i<s.length;i++)l.push("..");return(l=l.concat(a.slice(u))).join("/")}function Ja(e){var r=Ir(e),t=r[0],s=r[1];return t||s?(s&&(s=s.substr(0,s.length-1)),t+s):"."}function za(e,r){var t=Ir(e)[2];return r&&t.substr(-1*r.length)===r&&(t=t.substr(0,t.length-r.length)),t}function Xa(e){return Ir(e)[3]}function Zn(e,r){if(e.filter)return e.filter(r);for(var t=[],s=0;s<e.length;s++)r(e[s],s,e)&&t.push(e[s]);return t}Kt(Wa,{basename:()=>za,default:()=>Ka,delimiter:()=>Mn,dirname:()=>Ja,extname:()=>Xa,isAbsolute:()=>Qn,join:()=>Ga,normalize:()=>Yn,relative:()=>Ua,resolve:()=>wr,sep:()=>qn});var Na,Ir,qn,Mn,Ka,Ya,QD=ht({"node-modules-polyfills:path"(){ne(),Na=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,Ir=function(e){return Na.exec(e).slice(1)},Ka={extname:Xa,basename:za,dirname:Ja,sep:qn="/",delimiter:Mn=":",relative:Ua,join:Ga,isAbsolute:Qn,normalize:Yn,resolve:wr},Ya=function(e,r,t){return e.substr(r,t)}}}),ZD=te({"node-modules-polyfills-commonjs:path"(e,r){ne();var t=(QD(),ft(Wa));if(t&&t.default){r.exports=t.default;for(let s in t)r.exports[s]=t[s]}else t&&(r.exports=t)}}),Qt=te({"src/common/errors.js"(e,r){ne();var t=class extends Error{},s=class extends Error{},a=class extends Error{},n=class extends Error{};r.exports={ConfigError:t,DebugError:s,UndefinedParserError:a,ArgExpansionBailout:n}}}),vt={};function em(e,r){function t(){this.constructor=e}Br(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}function tm(e,r){var t={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&r.indexOf(s)<0&&(t[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(s=Object.getOwnPropertySymbols(e);a<s.length;a++)r.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(e,s[a])&&(t[s[a]]=e[s[a]])}return t}function rm(e,r,t,s){var u,a=arguments.length,n=a<3?r:null===s?s=Object.getOwnPropertyDescriptor(r,t):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,r,t,s);else for(var i=e.length-1;i>=0;i--)(u=e[i])&&(n=(a<3?u(n):a>3?u(r,t,n):u(r,t))||n);return a>3&&n&&Object.defineProperty(r,t,n),n}function nm(e,r){return function(t,s){r(t,s,e)}}function um(e,r){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,r)}function sm(e,r,t,s){return new(t||(t=Promise))((function(n,u){function i(y){try{p(s.next(y))}catch(h){u(h)}}function l(y){try{p(s.throw(y))}catch(h){u(h)}}function p(y){y.done?n(y.value):function a(n){return n instanceof t?n:new t((function(u){u(n)}))}(y.value).then(i,l)}p((s=s.apply(e,r||[])).next())}))}function im(e,r){var s,a,n,u,t={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return u={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(u[Symbol.iterator]=function(){return this}),u;function i(p){return function(y){return function l(p){if(s)throw new TypeError("Generator is already executing.");for(;t;)try{if(s=1,a&&(n=2&p[0]?a.return:p[0]?a.throw||((n=a.return)&&n.call(a),0):a.next)&&!(n=n.call(a,p[1])).done)return n;switch(a=0,n&&(p=[2&p[0],n.value]),p[0]){case 0:case 1:n=p;break;case 4:return t.label++,{value:p[1],done:!1};case 5:t.label++,a=p[1],p=[0];continue;case 7:p=t.ops.pop(),t.trys.pop();continue;default:if(!(n=(n=t.trys).length>0&&n[n.length-1])&&(6===p[0]||2===p[0])){t=0;continue}if(3===p[0]&&(!n||p[1]>n[0]&&p[1]<n[3])){t.label=p[1];break}if(6===p[0]&&t.label<n[1]){t.label=n[1],n=p;break}if(n&&t.label<n[2]){t.label=n[2],t.ops.push(p);break}n[2]&&t.ops.pop(),t.trys.pop();continue}p=r.call(e,t)}catch(y){p=[6,y],a=0}finally{s=n=0}if(5&p[0])throw p[1];return{value:p[0]?p[1]:void 0,done:!0}}([p,y])}}}function am(e,r,t,s){void 0===s&&(s=t),e[s]=r[t]}function om(e,r){for(var t in e)"default"!==t&&!r.hasOwnProperty(t)&&(r[t]=e[t])}function Rn(e){var r="function"==typeof Symbol&&Symbol.iterator,t=r&&e[r],s=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&s>=e.length&&(e=void 0),{value:e&&e[s++],done:!e}}};throw new TypeError(r?"Object is not iterable.":"Symbol.iterator is not defined.")}function Qa(e,r){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var a,u,s=t.call(e),n=[];try{for(;(void 0===r||r-- >0)&&!(a=s.next()).done;)n.push(a.value)}catch(i){u={error:i}}finally{try{a&&!a.done&&(t=s.return)&&t.call(s)}finally{if(u)throw u.error}}return n}function lm(){for(var e=[],r=0;r<arguments.length;r++)e=e.concat(Qa(arguments[r]));return e}function cm(){for(var e=0,r=0,t=arguments.length;r<t;r++)e+=arguments[r].length;var s=Array(e),a=0;for(r=0;r<t;r++)for(var n=arguments[r],u=0,i=n.length;u<i;u++,a++)s[a]=n[u];return s}function Xt(e){return this instanceof Xt?(this.v=e,this):new Xt(e)}function pm(e,r,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a,s=t.apply(e,r||[]),n=[];return a={},u("next"),u("throw"),u("return"),a[Symbol.asyncIterator]=function(){return this},a;function u(g){s[g]&&(a[g]=function(c){return new Promise((function(f,F){n.push([g,c,f,F])>1||i(g,c)}))})}function i(g,c){try{!function l(g){g.value instanceof Xt?Promise.resolve(g.value.v).then(p,y):h(n[0][2],g)}(s[g](c))}catch(f){h(n[0][3],f)}}function p(g){i("next",g)}function y(g){i("throw",g)}function h(g,c){g(c),n.shift(),n.length&&i(n[0][0],n[0][1])}}function fm(e){var r,t;return r={},s("next"),s("throw",(function(a){throw a})),s("return"),r[Symbol.iterator]=function(){return this},r;function s(a,n){r[a]=e[a]?function(u){return(t=!t)?{value:Xt(e[a](u)),done:"return"===a}:n?n(u):u}:n}}function Dm(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=Rn(e),t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t);function s(n){t[n]=e[n]&&function(u){return new Promise((function(i,l){(function a(n,u,i,l){Promise.resolve(l).then((function(p){n({value:p,done:i})}),u)})(i,l,(u=e[n](u)).done,u.value)}))}}}function mm(e,r){return Object.defineProperty?Object.defineProperty(e,"raw",{value:r}):e.raw=r,e}function dm(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)Object.hasOwnProperty.call(e,t)&&(r[t]=e[t]);return r.default=e,r}function gm(e){return e&&e.__esModule?e:{default:e}}function ym(e,r){if(!r.has(e))throw new TypeError("attempted to get private field on non-instance");return r.get(e)}function hm(e,r,t){if(!r.has(e))throw new TypeError("attempted to set private field on non-instance");return r.set(e,t),t}Kt(vt,{__assign:()=>Nr,__asyncDelegator:()=>fm,__asyncGenerator:()=>pm,__asyncValues:()=>Dm,__await:()=>Xt,__awaiter:()=>sm,__classPrivateFieldGet:()=>ym,__classPrivateFieldSet:()=>hm,__createBinding:()=>am,__decorate:()=>rm,__exportStar:()=>om,__extends:()=>em,__generator:()=>im,__importDefault:()=>gm,__importStar:()=>dm,__makeTemplateObject:()=>mm,__metadata:()=>um,__param:()=>nm,__read:()=>Qa,__rest:()=>tm,__spread:()=>lm,__spreadArrays:()=>cm,__values:()=>Rn});var Br,Nr,Et=ht({"node_modules/tslib/tslib.es6.js"(){ne(),Br=function(e,r){return(Br=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var a in s)s.hasOwnProperty(a)&&(t[a]=s[a])})(e,r)},Nr=function(){return Nr=Object.assign||function(r){for(var t,s=1,a=arguments.length;s<a;s++)for(var n in t=arguments[s])Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n]);return r},Nr.apply(this,arguments)}}}),Za=te({"node_modules/vnopts/lib/descriptors/api.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.apiDescriptor={key:r=>/^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(r)?r:JSON.stringify(r),value(r){if(null===r||"object"!=typeof r)return JSON.stringify(r);if(Array.isArray(r))return`[${r.map((s=>e.apiDescriptor.value(s))).join(", ")}]`;let t=Object.keys(r);return 0===t.length?"{}":`{ ${t.map((s=>`${e.apiDescriptor.key(s)}: ${e.apiDescriptor.value(r[s])}`)).join(", ")} }`},pair:r=>{let{key:t,value:s}=r;return e.apiDescriptor.value({[t]:s})}}}}),vm=te({"node_modules/vnopts/lib/descriptors/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),(Et(),ft(vt)).__exportStar(Za(),e)}}),kr=te({"scripts/build/shims/chalk.cjs"(e,r){ne();var t=s=>s;t.grey=t,t.red=t,t.bold=t,t.yellow=t,t.blue=t,t.default=t,r.exports=t}}),eo=te({"node_modules/vnopts/lib/handlers/deprecated/common.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=kr();e.commonDeprecatedHandler=(t,s,a)=>{let{descriptor:n}=a,u=[`${r.default.yellow("string"==typeof t?n.key(t):n.pair(t))} is deprecated`];return s&&u.push(`we now treat it as ${r.default.blue("string"==typeof s?n.key(s):n.pair(s))}`),u.join("; ")+"."}}}),Cm=te({"node_modules/vnopts/lib/handlers/deprecated/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),(Et(),ft(vt)).__exportStar(eo(),e)}}),Em=te({"node_modules/vnopts/lib/handlers/invalid/common.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=kr();e.commonInvalidHandler=(t,s,a)=>[`Invalid ${r.default.red(a.descriptor.key(t))} value.`,`Expected ${r.default.blue(a.schemas[t].expected(a))},`,`but received ${r.default.red(a.descriptor.value(s))}.`].join(" ")}}),to=te({"node_modules/vnopts/lib/handlers/invalid/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),(Et(),ft(vt)).__exportStar(Em(),e)}}),Fm=te({"node_modules/vnopts/node_modules/leven/index.js"(e,r){ne();var t=[],s=[];r.exports=function(a,n){if(a===n)return 0;var u=a;a.length>n.length&&(a=n,n=u);var i=a.length,l=n.length;if(0===i)return l;if(0===l)return i;for(;i>0&&a.charCodeAt(~-i)===n.charCodeAt(~-l);)i--,l--;if(0===i)return l;for(var p=0;p<i&&a.charCodeAt(p)===n.charCodeAt(p);)p++;if(l-=p,0===(i-=p))return l;for(var y,h,g,c,f=0,F=0;f<i;)s[p+f]=a.charCodeAt(p+f),t[f]=++f;for(;F<l;)for(y=n.charCodeAt(p+F),g=F++,h=F,f=0;f<i;f++)c=y===s[p+f]?g:g+1,g=t[f],h=t[f]=g>h?c>h?h+1:c:c>g?g+1:c;return h}}}),ro=te({"node_modules/vnopts/lib/handlers/unknown/leven.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=kr(),t=Fm();e.levenUnknownHandler=(s,a,n)=>{let{descriptor:u,logger:i,schemas:l}=n,p=[`Ignored unknown option ${r.default.yellow(u.pair({key:s,value:a}))}.`],y=Object.keys(l).sort().find((h=>t(s,h)<3));y&&p.push(`Did you mean ${r.default.blue(u.key(y))}?`),i.warn(p.join(" "))}}}),Am=te({"node_modules/vnopts/lib/handlers/unknown/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),(Et(),ft(vt)).__exportStar(ro(),e)}}),Sm=te({"node_modules/vnopts/lib/handlers/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=(Et(),ft(vt));r.__exportStar(Cm(),e),r.__exportStar(to(),e),r.__exportStar(Am(),e)}}),Ft=te({"node_modules/vnopts/lib/schema.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=["default","expected","validate","deprecated","forward","redirect","overlap","preprocess","postprocess"];function t(n,u){let i=new n(u),l=Object.create(i);for(let p of r)p in u&&(l[p]=a(u[p],i,s.prototype[p].length));return l}e.createSchema=t;var s=class{constructor(n){this.name=n.name}static create(n){return t(this,n)}default(n){}expected(n){return"nothing"}validate(n,u){return!1}deprecated(n,u){return!1}forward(n,u){}redirect(n,u){}overlap(n,u,i){return n}preprocess(n,u){return n}postprocess(n,u){return n}};function a(n,u,i){return"function"==typeof n?function(){for(var l=arguments.length,p=new Array(l),y=0;y<l;y++)p[y]=arguments[y];return n(...p.slice(0,i-1),u,...p.slice(i-1))}:()=>n}e.Schema=s}}),xm=te({"node_modules/vnopts/lib/schemas/alias.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ft(),t=class extends r.Schema{constructor(s){super(s),this._sourceName=s.sourceName}expected(s){return s.schemas[this._sourceName].expected(s)}validate(s,a){return a.schemas[this._sourceName].validate(s,a)}redirect(s,a){return this._sourceName}};e.AliasSchema=t}}),bm=te({"node_modules/vnopts/lib/schemas/any.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ft(),t=class extends r.Schema{expected(){return"anything"}validate(){return!0}};e.AnySchema=t}}),Tm=te({"node_modules/vnopts/lib/schemas/array.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=(Et(),ft(vt)),t=Ft(),s=class extends t.Schema{constructor(n){var{valueSchema:u,name:i=u.name}=n,l=r.__rest(n,["valueSchema","name"]);super(Object.assign({},l,{name:i})),this._valueSchema=u}expected(n){return`an array of ${this._valueSchema.expected(n)}`}validate(n,u){if(!Array.isArray(n))return!1;let i=[];for(let l of n){let p=u.normalizeValidateResult(this._valueSchema.validate(l,u),l);!0!==p&&i.push(p.value)}return 0===i.length||{value:i}}deprecated(n,u){let i=[];for(let l of n){let p=u.normalizeDeprecatedResult(this._valueSchema.deprecated(l,u),l);!1!==p&&i.push(...p.map((y=>{let{value:h}=y;return{value:[h]}})))}return i}forward(n,u){let i=[];for(let l of n){let p=u.normalizeForwardResult(this._valueSchema.forward(l,u),l);i.push(...p.map(a))}return i}redirect(n,u){let i=[],l=[];for(let p of n){let y=u.normalizeRedirectResult(this._valueSchema.redirect(p,u),p);"remain"in y&&i.push(y.remain),l.push(...y.redirect.map(a))}return 0===i.length?{redirect:l}:{redirect:l,remain:i}}overlap(n,u){return n.concat(u)}};function a(n){let{from:u,to:i}=n;return{from:[u],to:i}}e.ArraySchema=s}}),Bm=te({"node_modules/vnopts/lib/schemas/boolean.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ft(),t=class extends r.Schema{expected(){return"true or false"}validate(s){return"boolean"==typeof s}};e.BooleanSchema=t}}),eu=te({"node_modules/vnopts/lib/utils.js"(e){function y(c,f){return"string"==typeof c||"key"in c?{from:f,to:c}:"from"in c?{from:c.from,to:c.to}:{from:f,to:c.to}}function h(c,f){return void 0===c?[]:Array.isArray(c)?c.map((F=>y(F,f))):[y(c,f)]}ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.recordFromArray=function r(c,f){let F=Object.create(null);for(let _ of c){let w=_[f];if(F[w])throw new Error(`Duplicate ${f} ${JSON.stringify(w)}`);F[w]=_}return F},e.mapFromArray=function t(c,f){let F=new Map;for(let _ of c){let w=_[f];if(F.has(w))throw new Error(`Duplicate ${f} ${JSON.stringify(w)}`);F.set(w,_)}return F},e.createAutoChecklist=function s(){let c=Object.create(null);return f=>{let F=JSON.stringify(f);return!!c[F]||(c[F]=!0,!1)}},e.partition=function a(c,f){let F=[],_=[];for(let w of c)f(w)?F.push(w):_.push(w);return[F,_]},e.isInt=function n(c){return c===Math.floor(c)},e.comparePrimitive=function u(c,f){if(c===f)return 0;let F=typeof c,_=typeof f,w=["undefined","object","boolean","number","string"];return F!==_?w.indexOf(F)-w.indexOf(_):"string"!==F?Number(c)-Number(f):c.localeCompare(f)},e.normalizeDefaultResult=function i(c){return void 0===c?{}:c},e.normalizeValidateResult=function l(c,f){return!0===c||(!1===c?{value:f}:c)},e.normalizeDeprecatedResult=function p(c,f){return!1!==c&&(!0===c?!!(arguments.length>2&&void 0!==arguments[2]&&arguments[2])||[{value:f}]:"value"in c?[c]:0!==c.length&&c)},e.normalizeTransferResult=y,e.normalizeForwardResult=h,e.normalizeRedirectResult=function g(c,f){let F=h("object"==typeof c&&"redirect"in c?c.redirect:c,f);return 0===F.length?{remain:f,redirect:F}:"object"==typeof c&&"remain"in c?{remain:c.remain,redirect:F}:{redirect:F}}}}),Nm=te({"node_modules/vnopts/lib/schemas/choice.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ft(),t=eu(),s=class extends r.Schema{constructor(a){super(a),this._choices=t.mapFromArray(a.choices.map((n=>n&&"object"==typeof n?n:{value:n})),"value")}expected(a){let{descriptor:n}=a,u=Array.from(this._choices.keys()).map((p=>this._choices.get(p))).filter((p=>!p.deprecated)).map((p=>p.value)).sort(t.comparePrimitive).map(n.value),i=u.slice(0,-2),l=u.slice(-2);return i.concat(l.join(" or ")).join(", ")}validate(a){return this._choices.has(a)}deprecated(a){let n=this._choices.get(a);return!(!n||!n.deprecated)&&{value:a}}forward(a){let n=this._choices.get(a);return n?n.forward:void 0}redirect(a){let n=this._choices.get(a);return n?n.redirect:void 0}};e.ChoiceSchema=s}}),no=te({"node_modules/vnopts/lib/schemas/number.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ft(),t=class extends r.Schema{expected(){return"a number"}validate(s,a){return"number"==typeof s}};e.NumberSchema=t}}),wm=te({"node_modules/vnopts/lib/schemas/integer.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=eu(),t=no(),s=class extends t.NumberSchema{expected(){return"an integer"}validate(a,n){return!0===n.normalizeValidateResult(super.validate(a,n),a)&&r.isInt(a)}};e.IntegerSchema=s}}),_m=te({"node_modules/vnopts/lib/schemas/string.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Ft(),t=class extends r.Schema{expected(){return"a string"}validate(s){return"string"==typeof s}};e.StringSchema=t}}),Pm=te({"node_modules/vnopts/lib/schemas/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=(Et(),ft(vt));r.__exportStar(xm(),e),r.__exportStar(bm(),e),r.__exportStar(Tm(),e),r.__exportStar(Bm(),e),r.__exportStar(Nm(),e),r.__exportStar(wm(),e),r.__exportStar(no(),e),r.__exportStar(_m(),e)}}),Im=te({"node_modules/vnopts/lib/defaults.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Za(),t=eo(),s=to(),a=ro();e.defaultDescriptor=r.apiDescriptor,e.defaultUnknownHandler=a.levenUnknownHandler,e.defaultInvalidHandler=s.commonInvalidHandler,e.defaultDeprecatedHandler=t.commonDeprecatedHandler}}),km=te({"node_modules/vnopts/lib/normalize.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Im(),t=eu();e.normalize=(a,n,u)=>new s(n,u).normalize(a);var s=class{constructor(a,n){let{logger:u=console,descriptor:i=r.defaultDescriptor,unknown:l=r.defaultUnknownHandler,invalid:p=r.defaultInvalidHandler,deprecated:y=r.defaultDeprecatedHandler}=n||{};this._utils={descriptor:i,logger:u||{warn:()=>{}},schemas:t.recordFromArray(a,"name"),normalizeDefaultResult:t.normalizeDefaultResult,normalizeDeprecatedResult:t.normalizeDeprecatedResult,normalizeForwardResult:t.normalizeForwardResult,normalizeRedirectResult:t.normalizeRedirectResult,normalizeValidateResult:t.normalizeValidateResult},this._unknownHandler=l,this._invalidHandler=p,this._deprecatedHandler=y,this.cleanHistory()}cleanHistory(){this._hasDeprecationWarned=t.createAutoChecklist()}normalize(a){let n={},u=[a],i=()=>{for(;0!==u.length;){let l=u.shift(),p=this._applyNormalization(l,n);u.push(...p)}};i();for(let l of Object.keys(this._utils.schemas)){let p=this._utils.schemas[l];if(!(l in n)){let y=t.normalizeDefaultResult(p.default(this._utils));"value"in y&&u.push({[l]:y.value})}}i();for(let l of Object.keys(this._utils.schemas)){let p=this._utils.schemas[l];l in n&&(n[l]=p.postprocess(n[l],this._utils))}return n}_applyNormalization(a,n){let u=[],[i,l]=t.partition(Object.keys(a),(p=>p in this._utils.schemas));for(let p of i){let y=this._utils.schemas[p],h=y.preprocess(a[p],this._utils),g=t.normalizeValidateResult(y.validate(h,this._utils),h);if(!0!==g){let{value:w}=g,E=this._invalidHandler(p,w,this._utils);throw"string"==typeof E?new Error(E):E}let c=w=>{let{from:E,to:N}=w;u.push("string"==typeof N?{[N]:E}:{[N.key]:N.value})},f=w=>{let{value:E,redirectTo:N}=w,x=t.normalizeDeprecatedResult(y.deprecated(E,this._utils),h,!0);if(!1!==x)if(!0===x)this._hasDeprecationWarned(p)||this._utils.logger.warn(this._deprecatedHandler(p,N,this._utils));else for(let{value:I}of x){let P={key:p,value:I};if(!this._hasDeprecationWarned(P)){let $="string"==typeof N?{key:N,value:I}:N;this._utils.logger.warn(this._deprecatedHandler(P,$,this._utils))}}};t.normalizeForwardResult(y.forward(h,this._utils),h).forEach(c);let _=t.normalizeRedirectResult(y.redirect(h,this._utils),h);if(_.redirect.forEach(c),"remain"in _){let w=_.remain;n[p]=p in n?y.overlap(n[p],w,this._utils):w,f({value:w})}for(let{from:w,to:E}of _.redirect)f({value:w,redirectTo:E})}for(let p of l){let y=a[p],h=this._unknownHandler(p,y,this._utils);if(h)for(let g of Object.keys(h)){let c={[g]:h[g]};g in this._utils.schemas?u.push(c):Object.assign(n,c)}}return u}};e.Normalizer=s}}),Lm=te({"node_modules/vnopts/lib/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=(Et(),ft(vt));r.__exportStar(vm(),e),r.__exportStar(Sm(),e),r.__exportStar(Pm(),e),r.__exportStar(km(),e),r.__exportStar(Ft(),e)}}),Om=te({"src/main/options-normalizer.js"(e,r){ne();var u,t=Lm(),s=lt(),a={key:g=>1===g.length?`-${g}`:`--${g}`,value:g=>t.apiDescriptor.value(g),pair:g=>{let{key:c,value:f}=g;return!1===f?`--no-${c}`:!0===f?a.key(c):""===f?`${a.key(c)} without an argument`:`${a.key(c)}=${f}`}},n=g=>{let{colorsModule:c,levenshteinDistance:f}=g;return class extends t.ChoiceSchema{constructor(_){let{name:w,flags:E}=_;super({name:w,choices:E}),this._flags=[...E].sort()}preprocess(_,w){if("string"==typeof _&&_.length>0&&!this._flags.includes(_)){let E=this._flags.find((N=>f(N,_)<3));if(E)return w.logger.warn([`Unknown flag ${c.yellow(w.descriptor.value(_))},`,`did you mean ${c.blue(w.descriptor.value(E))}?`].join(" ")),E}return _}expected(){return"a flag"}}};function i(g,c){let{logger:f=!1,isCLI:F=!1,passThrough:_=!1,colorsModule:w=null,levenshteinDistance:E=null}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},N=_?Array.isArray(_)?(T,m)=>_.includes(T)?{[T]:m}:void 0:(T,m)=>({[T]:m}):(T,m,C)=>{let v=Hn(C.schemas,vD);return t.levenUnknownHandler(T,m,Object.assign(Object.assign({},C),{},{schemas:v}))},x=F?a:t.apiDescriptor,I=function l(g,c){let{isCLI:f,colorsModule:F,levenshteinDistance:_}=c,w=[];f&&w.push(t.AnySchema.create({name:"_"}));for(let E of g)w.push(p(E,{isCLI:f,optionInfos:g,colorsModule:F,levenshteinDistance:_})),E.alias&&f&&w.push(t.AliasSchema.create({name:E.alias,sourceName:E.name}));return w}(c,{isCLI:F,colorsModule:w,levenshteinDistance:E}),P=new t.Normalizer(I,{logger:f,unknown:N,descriptor:x}),$=!1!==f;$&&u&&(P._hasDeprecationWarned=u);let D=P.normalize(g);return $&&(u=P._hasDeprecationWarned),F&&!1===D["plugin-search"]&&(D["plugin-search-dir"]=!1),D}function p(g,c){let{isCLI:f,optionInfos:F,colorsModule:_,levenshteinDistance:w}=c,{name:E}=g;if("plugin-search-dir"===E||"pluginSearchDirs"===E)return t.AnySchema.create({name:E,preprocess:P=>(!1===P||(P=Array.isArray(P)?P:[P]),P),validate:P=>!1===P||P.every(($=>"string"==typeof $)),expected:()=>"false or paths to plugin search dir"});let x,N={name:E},I={};switch(g.type){case"int":x=t.IntegerSchema,f&&(N.preprocess=Number);break;case"string":case"path":x=t.StringSchema;break;case"choice":x=t.ChoiceSchema,N.choices=g.choices.map((P=>"object"==typeof P&&P.redirect?Object.assign(Object.assign({},P),{},{redirect:{to:{key:g.name,value:P.redirect}}}):P));break;case"boolean":x=t.BooleanSchema;break;case"flag":x=n({colorsModule:_,levenshteinDistance:w}),N.flags=F.flatMap((P=>[P.alias,P.description&&P.name,P.oppositeDescription&&`no-${P.name}`].filter(Boolean)));break;default:throw new Error(`Unexpected type ${g.type}`)}if(g.exception?N.validate=(P,$,D)=>g.exception(P)||$.validate(P,D):N.validate=(P,$,D)=>void 0===P||$.validate(P,D),g.redirect&&(I.redirect=P=>P?{to:{key:g.redirect.option,value:g.redirect.value}}:void 0),g.deprecated&&(I.deprecated=!0),f&&!g.array){let P=N.preprocess||($=>$);N.preprocess=($,D,T)=>D.preprocess(P(Array.isArray($)?s($):$),T)}return g.array?t.ArraySchema.create(Object.assign(Object.assign(Object.assign({},f?{preprocess:P=>Array.isArray(P)?P:[P]}:{}),I),{},{valueSchema:x.create(N)})):x.create(Object.assign(Object.assign({},N),I))}r.exports={normalizeApiOptions:function y(g,c,f){return i(g,c,f)},normalizeCliOptions:function h(g,c,f){return i(g,c,Object.assign({isCLI:!0},f))}}}}),ut=te({"src/language-js/loc.js"(e,r){ne();var t=Kn();function s(l){var p,y;let h=l.range?l.range[0]:l.start,g=null!==(p=null===(y=l.declaration)||void 0===y?void 0:y.decorators)&&void 0!==p?p:l.decorators;return t(g)?Math.min(s(g[0]),h):h}function a(l){return l.range?l.range[1]:l.end}function n(l,p){let y=s(l);return Number.isInteger(y)&&y===s(p)}r.exports={locStart:s,locEnd:a,hasSameLocStart:n,hasSameLoc:function i(l,p){return n(l,p)&&function u(l,p){let y=a(l);return Number.isInteger(y)&&y===a(p)}(l,p)}}}}),jm=te({"src/main/load-parser.js"(e,r){ne(),r.exports=()=>{}}}),qm=te({"scripts/build/shims/babel-highlight.cjs"(e,r){ne();var t=kr(),s={shouldHighlight:()=>!1,getChalk:()=>t};r.exports=s}}),Mm=te({"node_modules/@babel/code-frame/lib/index.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.codeFrameColumns=u,e.default=function i(l,p,y){let h=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!t){t=!0;let c="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(wt.emitWarning)wt.emitWarning(c,"DeprecationWarning");else{new Error(c).name="DeprecationWarning",console.warn(new Error(c))}}return y=Math.max(y,0),u(l,{start:{column:y,line:p}},h)};var r=qm(),t=!1;var a=/\r\n|[\n\r\u2028\u2029]/;function u(l,p){let y=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},h=(y.highlightCode||y.forceColor)&&(0,r.shouldHighlight)(y),g=(0,r.getChalk)(y),c=function s(l){return{gutter:l.grey,marker:l.red.bold,message:l.red.bold}}(g),f=($,D)=>h?$(D):D,F=l.split(a),{start:_,end:w,markerLines:E}=function n(l,p,y){let h=Object.assign({column:0,line:-1},l.start),g=Object.assign({},h,l.end),{linesAbove:c=2,linesBelow:f=3}=y||{},F=h.line,_=h.column,w=g.line,E=g.column,N=Math.max(F-(c+1),0),x=Math.min(p.length,w+f);-1===F&&(N=0),-1===w&&(x=p.length);let I=w-F,P={};if(I)for(let $=0;$<=I;$++){let D=$+F;if(_)if(0===$){let T=p[D-1].length;P[D]=[_,T-_+1]}else if($===I)P[D]=[0,E];else{let T=p[D-$].length;P[D]=[0,T]}else P[D]=!0}else P[F]=_===E?!_||[_,0]:[_,E-_];return{start:N,end:x,markerLines:P}}(p,F,y),N=p.start&&"number"==typeof p.start.column,x=String(w).length,P=(h?(0,r.default)(l,y):l).split(a,w).slice(_,w).map((($,D)=>{let T=_+1+D,C=` ${` ${T}`.slice(-x)} |`,o=E[T],d=!E[T+1];if(o){let v="";if(Array.isArray(o)){let S=$.slice(0,Math.max(o[0]-1,0)).replace(/[^\t]/g," "),b=o[1]||1;v=["\n ",f(c.gutter,C.replace(/\d/g," "))," ",S,f(c.marker,"^").repeat(b)].join(""),d&&y.message&&(v+=" "+f(c.message,y.message))}return[f(c.marker,">"),f(c.gutter,C),$.length>0?` ${$}`:"",v].join("")}return` ${f(c.gutter,C)}${$.length>0?` ${$}`:""}`})).join("\n");return y.message&&!N&&(P=`${" ".repeat(x+1)}${y.message}\n${P}`),h?g.reset(P):P}}}),tu=te({"src/main/parser.js"(e,r){ne();var{ConfigError:t}=Qt(),s=ut();jm();var{locStart:n,locEnd:u}=s,i=Object.getOwnPropertyNames,l=Object.getOwnPropertyDescriptor;function p(g){let c={};for(let f of g.plugins)if(f.parsers)for(let F of i(f.parsers))Object.defineProperty(c,F,l(f.parsers,F));return c}function y(g){let c=arguments.length>1&&void 0!==arguments[1]?arguments[1]:p(g);if("function"==typeof g.parser)return{parse:g.parser,astFormat:"estree",locStart:n,locEnd:u};if("string"==typeof g.parser){if(Object.prototype.hasOwnProperty.call(c,g.parser))return c[g.parser];throw new t(`Couldn't resolve parser "${g.parser}". Parsers must be explicitly added to the standalone bundle.`)}}r.exports={parse:function h(g,c){let f=p(c),F=Object.defineProperties({},Object.fromEntries(Object.keys(f).map((w=>[w,{enumerable:!0,get:()=>f[w].parse}])))),_=y(c,f);try{return _.preprocess&&(g=_.preprocess(g,c)),{text:g,ast:_.parse(g,F,c)}}catch(w){let{loc:E}=w;if(E){let{codeFrameColumns:N}=Mm();throw w.codeFrame=N(g,E,{highlightCode:!0}),w.message+="\n"+w.codeFrame,w}throw w}},resolveParser:y}}}),uo=te({"src/main/options.js"(e,r){ne();var t=ZD(),{UndefinedParserError:s}=Qt(),{getSupportInfo:a}=Xn(),n=Om(),{resolveParser:u}=tu(),i={astFormat:"estree",printer:{},originalText:void 0,locStart:null,locEnd:null};function y(h,g){let c=t.basename(h).toLowerCase(),F=a({plugins:g}).languages.filter((_=>null!==_.since)).find((_=>_.extensions&&_.extensions.some((w=>c.endsWith(w)))||_.filenames&&_.filenames.some((w=>w.toLowerCase()===c))));return F&&F.parsers[0]}r.exports={normalize:function l(h){let g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},c=Object.assign({},h),f=a({plugins:h.plugins,showUnreleased:!0,showDeprecated:!0}).options,F=Object.assign(Object.assign({},i),Object.fromEntries(f.filter((x=>void 0!==x.default)).map((x=>[x.name,x.default]))));if(!c.parser)if(c.filepath){if(c.parser=y(c.filepath,c.plugins),!c.parser)throw new s(`No parser could be inferred for file: ${c.filepath}`)}else(g.logger||console).warn("No parser and no filepath given, using 'babel' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred."),c.parser="babel";let _=u(n.normalizeApiOptions(c,[f.find((x=>"parser"===x.name))],{passThrough:!0,logger:!1}));c.astFormat=_.astFormat,c.locEnd=_.locEnd,c.locStart=_.locStart;let w=function p(h){let{astFormat:g}=h;if(!g)throw new Error("getPlugin() requires astFormat to be set");let c=h.plugins.find((f=>f.printers&&f.printers[g]));if(!c)throw new Error(`Couldn't find plugin for AST format "${g}"`);return c}(c);c.printer=w.printers[c.astFormat];let E=Object.fromEntries(f.filter((x=>x.pluginDefaults&&void 0!==x.pluginDefaults[w.name])).map((x=>[x.name,x.pluginDefaults[w.name]]))),N=Object.assign(Object.assign({},F),E);for(let[x,I]of Object.entries(N))(null===c[x]||void 0===c[x])&&(c[x]=I);return"json"===c.parser&&(c.trailingComma="none"),n.normalizeApiOptions(c,f,Object.assign({passThrough:Object.keys(i)},g))},hiddenDefaults:i,inferParser:y}}}),Rm=te({"src/main/massage-ast.js"(e,r){ne(),r.exports=function t(s,a,n){if(Array.isArray(s))return s.map((p=>t(p,a,n))).filter(Boolean);if(!s||"object"!=typeof s)return s;let i,u=a.printer.massageAstNode;i=u&&u.ignoredProperties?u.ignoredProperties:new Set;let l={};for(let[p,y]of Object.entries(s))!i.has(p)&&"function"!=typeof y&&(l[p]=t(y,a,s));if(u){let p=u(s,l,n);if(null===p)return;if(p)return p}return l}}}),Zt=te({"scripts/build/shims/assert.cjs"(e,r){ne();var t=()=>{};t.ok=t,t.strictEqual=t,r.exports=t}}),et=te({"src/main/comments.js"(e,r){ne();var t=Zt(),{builders:{line:s,hardline:a,breakParent:n,indent:u,lineSuffix:i,join:l,cursor:p}}=qe(),{hasNewline:y,skipNewline:h,skipSpaces:g,isPreviousLineEmpty:c,addLeadingComment:f,addDanglingComment:F,addTrailingComment:_}=Ue(),w=new WeakMap;function E(k,M,R){if(!k)return;let{printer:q,locStart:J,locEnd:L}=M;if(R){if(q.canAttachComment&&q.canAttachComment(k)){let V;for(V=R.length-1;V>=0&&!(J(R[V])<=J(k)&&L(R[V])<=L(k));--V);return void R.splice(V+1,0,k)}}else if(w.has(k))return w.get(k);let Q=q.getCommentChildNodes&&q.getCommentChildNodes(k,M)||"object"==typeof k&&Object.entries(k).filter((V=>{let[j]=V;return"enclosingNode"!==j&&"precedingNode"!==j&&"followingNode"!==j&&"tokens"!==j&&"comments"!==j&&"parent"!==j})).map((V=>{let[,j]=V;return j}));if(Q){R||(R=[],w.set(k,R));for(let V of Q)E(V,M,R);return R}}function N(k,M,R,q){let Y,ie,{locStart:J,locEnd:L}=R,Q=J(M),V=L(M),j=E(k,R),ee=0,ce=j.length;for(;ee<ce;){let W=ee+ce>>1,K=j[W],de=J(K),ue=L(K);if(de<=Q&&V<=ue)return N(K,M,R,K);if(ue<=Q)Y=K,ee=W+1;else{if(!(V<=de))throw new Error("Comment location overlaps with node location");ie=K,ce=W}}if(q&&"TemplateLiteral"===q.type){let{quasis:W}=q,K=C(W,M,R);Y&&C(W,Y,R)!==K&&(Y=null),ie&&C(W,ie,R)!==K&&(ie=null)}return{enclosingNode:q,precedingNode:Y,followingNode:ie}}var x=()=>!1;var P=k=>!/[\S\n\u2028\u2029]/.test(k);function $(k,M,R,q){let{comment:J,precedingNode:L}=R[q],{locStart:Q,locEnd:V}=M,j=Q(J);if(L)for(let Y=q-1;Y>=0;Y--){let{comment:ie,precedingNode:ee}=R[Y];if(ee!==L||!P(k.slice(V(ie),j)))break;j=Q(ie)}return y(k,j,{backwards:!0})}function D(k,M,R,q){let{comment:J,followingNode:L}=R[q],{locStart:Q,locEnd:V}=M,j=V(J);if(L)for(let Y=q+1;Y<R.length;Y++){let{comment:ie,followingNode:ee}=R[Y];if(ee!==L||!P(k.slice(j,Q(ie))))break;j=V(ie)}return y(k,j)}function T(k,M,R){let q=k.length;if(0===q)return;let Y,{precedingNode:J,followingNode:L,enclosingNode:Q}=k[0],V=R.printer.getGapRegex&&R.printer.getGapRegex(Q)||/^[\s(]*$/,j=R.locStart(L);for(Y=q;Y>0;--Y){let{comment:ie,precedingNode:ee,followingNode:ce}=k[Y-1];t.strictEqual(ee,J),t.strictEqual(ce,L);let W=M.slice(R.locEnd(ie),j);if(!V.test(W))break;j=R.locStart(ie)}for(let[ie,{comment:ee}]of k.entries())ie<Y?_(J,ee):f(L,ee);for(let ie of[J,L])ie.comments&&ie.comments.length>1&&ie.comments.sort(((ee,ce)=>R.locStart(ee)-R.locStart(ce)));k.length=0}function m(k,M){return k.getValue().printed=!0,M.printer.printComment(k,M)}function C(k,M,R){let q=R.locStart(M)-1;for(let J=1;J<k.length;++J)if(q<R.locStart(k[J]))return J-1;return 0}function S(k,M,R){let q=k.getValue();if(!q)return{};let J=q.comments||[];R&&(J=J.filter((j=>!R.has(j))));let L=q===M.cursorNode;if(0===J.length){let j=L?p:"";return{leading:j,trailing:j}}let Q=[],V=[];return k.each((()=>{let j=k.getValue();if(R&&R.has(j))return;let{leading:Y,trailing:ie}=j;Y?Q.push(function o(k,M){let R=k.getValue(),q=[m(k,M)],{printer:J,originalText:L,locStart:Q,locEnd:V}=M;if(J.isBlockComment&&J.isBlockComment(R)){let ie=y(L,V(R))?y(L,Q(R),{backwards:!0})?a:s:" ";q.push(ie)}else q.push(a);let Y=h(L,g(L,V(R)));return!1!==Y&&y(L,Y)&&q.push(a),q}(k,M)):ie&&V.push(function d(k,M){let R=k.getValue(),q=m(k,M),{printer:J,originalText:L,locStart:Q}=M,V=J.isBlockComment&&J.isBlockComment(R);if(y(L,Q(R),{backwards:!0})){let Y=c(L,R,Q);return i([a,Y?a:"",q])}let j=[" ",q];return V||(j=[i(j),n]),j}(k,M))}),"comments"),L&&(Q.unshift(p),V.push(p)),{leading:Q,trailing:V}}r.exports={attach:function I(k,M,R,q){if(!Array.isArray(k))return;let J=[],{locStart:L,locEnd:Q,printer:{handleComments:V={}}}=q,{avoidAstMutation:j,ownLine:Y=x,endOfLine:ie=x,remaining:ee=x}=V,ce=k.map(((W,K)=>Object.assign(Object.assign({},N(M,W,q)),{},{comment:W,text:R,options:q,ast:M,isLastComment:k.length-1===K})));for(let[W,K]of ce.entries()){let ge,{comment:de,precedingNode:ue,enclosingNode:Fe,followingNode:z,text:U,options:Z,ast:se,isLastComment:fe}=K;if("json"===Z.parser||"json5"===Z.parser||"__js_expression"===Z.parser||"__vue_expression"===Z.parser||"__vue_ts_expression"===Z.parser){if(L(de)-L(se)<=0){f(se,de);continue}if(Q(de)-Q(se)>=0){_(se,de);continue}}if(j?ge=[K]:(de.enclosingNode=Fe,de.precedingNode=ue,de.followingNode=z,ge=[de,U,Z,se,fe]),$(U,Z,ce,W))de.placement="ownLine",Y(...ge)||(z?f(z,de):ue?_(ue,de):F(Fe||se,de));else if(D(U,Z,ce,W))de.placement="endOfLine",ie(...ge)||(ue?_(ue,de):z?f(z,de):F(Fe||se,de));else if(de.placement="remaining",!ee(...ge))if(ue&&z){let he=J.length;he>0&&J[he-1].followingNode!==z&&T(J,U,Z),J.push(K)}else ue?_(ue,de):z?f(z,de):F(Fe||se,de)}if(T(J,R,q),!j)for(let W of k)delete W.precedingNode,delete W.enclosingNode,delete W.followingNode},printComments:function b(k,M,R,q){let{leading:J,trailing:L}=S(k,R,q);return J||L?[J,M,L]:M},printCommentsSeparately:S,printDanglingComments:function v(k,M,R,q){let J=[],L=k.getValue();return L&&L.comments&&(k.each((()=>{let Q=k.getValue();!Q.leading&&!Q.trailing&&(!q||q(Q))&&J.push(m(k,M))}),"comments"),0!==J.length)?R?l(a,J):u([a,l(a,J)]):""},getSortedChildNodes:E,ensureAllCommentsPrinted:function B(k){if(k)for(let M of k){if(!M.printed)throw new Error('Comment "'+M.value.trim()+'" was not printed. Please report this error!');delete M.printed}}}}}),$m=te({"src/common/ast-path.js"(e,r){ne();var t=lt();function s(u,i){let l=a(u.stack,i);return-1===l?null:u.stack[l]}function a(u,i){for(let l=u.length-1;l>=0;l-=2){let p=u[l];if(p&&!Array.isArray(p)&&--i<0)return l}return-1}r.exports=class{constructor(u){this.stack=[u]}getName(){let{stack:u}=this,{length:i}=u;return i>1?u[i-2]:null}getValue(){return t(this.stack)}getNode(){return s(this,arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)}getParentNode(){return s(this,(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)+1)}call(u){let{stack:i}=this,{length:l}=i,p=t(i);for(var y=arguments.length,h=new Array(y>1?y-1:0),g=1;g<y;g++)h[g-1]=arguments[g];for(let f of h)p=p[f],i.push(f,p);let c=u(this);return i.length=l,c}callParent(u){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,l=a(this.stack,i+1),p=this.stack.splice(l+1),y=u(this);return this.stack.push(...p),y}each(u){let{stack:i}=this,{length:l}=i,p=t(i);for(var y=arguments.length,h=new Array(y>1?y-1:0),g=1;g<y;g++)h[g-1]=arguments[g];for(let c of h)p=p[c],i.push(c,p);for(let c=0;c<p.length;++c)i.push(c,p[c]),u(this,c,p),i.length-=2;i.length=l}map(u){let i=[];for(var l=arguments.length,p=new Array(l>1?l-1:0),y=1;y<l;y++)p[y-1]=arguments[y];return this.each(((h,g,c)=>{i[g]=u(h,g,c)}),...p),i}try(u){let{stack:i}=this,l=[...i];try{return u()}finally{i.length=0,i.push(...l)}}match(){let u=this.stack.length-1,i=null,l=this.stack[u--];for(var p=arguments.length,y=new Array(p),h=0;h<p;h++)y[h]=arguments[h];for(let g of y){if(void 0===l)return!1;let c=null;if("number"==typeof i&&(c=i,i=this.stack[u--],l=this.stack[u--]),g&&!g(l,i,c))return!1;i=this.stack[u--],l=this.stack[u--]}return!0}findAncestor(u){let i=this.stack.length-1,l=null,p=this.stack[i--];for(;p;){let y=null;if("number"==typeof l&&(y=l,l=this.stack[i--],p=this.stack[i--]),null!==l&&u(p,l,y))return p;l=this.stack[i--],p=this.stack[i--]}}}}}),Vm=te({"src/main/multiparser.js"(e,r){ne();var{utils:{stripTrailingHardline:t}}=qe(),{normalize:s}=uo(),a=et();r.exports={printSubtree:function n(i,l,p,y){if(p.printer.embed&&"auto"===p.embeddedLanguageFormatting)return p.printer.embed(i,l,((h,g,c)=>function u(i,l,p,y){let{stripTrailingHardline:h=!1}=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},g=s(Object.assign(Object.assign(Object.assign({},p),l),{},{parentParser:p.parser,originalText:i}),{passThrough:!0}),c=tu().parse(i,g),{ast:f}=c;i=c.text;let F=f.comments;delete f.comments,a.attach(F,f,i,g),g[Symbol.for("comments")]=F||[],g[Symbol.for("tokens")]=f.tokens||[];let _=y(f,g);return a.ensureAllCommentsPrinted(F),h?"string"==typeof _?_.replace(/(?:\r?\n)*$/,""):t(_):_}(h,g,p,y,c)),p)}}}}),Wm=te({"src/main/ast-to-doc.js"(e,r){ne();var t=$m(),{builders:{hardline:s,addAlignmentToDoc:a},utils:{propagateBreaks:n}}=qe(),{printComments:u}=et(),i=Vm();function l(h,g){let c=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,{printer:f}=g;f.preprocess&&(h=f.preprocess(h,g));let F=new Map,_=new t(h),w=E();return c>0&&(w=a([s,w],c,g.tabWidth)),n(w),w;function E(x,I){return void 0===x||x===_?N(I):Array.isArray(x)?_.call((()=>N(I)),...x):_.call((()=>N(I)),x)}function N(x){let I=_.getValue(),P=I&&"object"==typeof I&&void 0===x;if(P&&F.has(I))return F.get(I);let $=function y(h,g,c,f){let w,E,F=h.getValue(),{printer:_}=g;if(_.hasPrettierIgnore&&_.hasPrettierIgnore(h))({doc:w,printedComments:E}=function p(h,g){let{originalText:c,[Symbol.for("comments")]:f,locStart:F,locEnd:_}=g,w=F(h),E=_(h),N=new Set;for(let x of f)F(x)>=w&&_(x)<=E&&(x.printed=!0,N.add(x));return{doc:c.slice(w,E),printedComments:N}}(F,g));else{if(F)try{w=i.printSubtree(h,c,g,l)}catch(N){if(globalThis.PRETTIER_DEBUG)throw N}w||(w=_.print(h,g,c,f))}return(!_.willPrintOwnComments||!_.willPrintOwnComments(h,g))&&(w=u(h,w,g,E)),w}(_,g,E,x);return P&&F.set(I,$),$}}r.exports=l}}),Hm=te({"src/main/range-util.js"(e,r){ne();var t=Zt(),s=et();function u(f){let F=f.length-1;for(;;){let _=f[F];if(!_||"Program"!==_.type&&"File"!==_.type)break;F--}return f.slice(0,F+1)}function l(f,F,_,w){let E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],N=arguments.length>5?arguments[5]:void 0,{locStart:x,locEnd:I}=_,P=x(f),$=I(f);if(!(F>$||F<P||"rangeEnd"===N&&F===P||"rangeStart"===N&&F===$)){for(let D of s.getSortedChildNodes(f,_)){let T=l(D,F,_,w,[f,...E],N);if(T)return T}if(!w||w(f,E[0]))return{node:f,parentNodes:E}}}var y=new Set(["ObjectExpression","ArrayExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","UnaryExpression","TemplateLiteral"]),h=new Set(["OperationDefinition","FragmentDefinition","VariableDefinition","TypeExtensionDefinition","ObjectTypeDefinition","FieldDefinition","DirectiveDefinition","EnumTypeDefinition","EnumValueDefinition","InputValueDefinition","InputObjectTypeDefinition","SchemaDefinition","OperationTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","ScalarTypeDefinition"]);function g(f,F,_){if(!F)return!1;switch(f.parser){case"flow":case"babel":case"babel-flow":case"babel-ts":case"typescript":case"acorn":case"espree":case"meriyah":case"__babel_estree":return function p(f,F){return"DeclareExportDeclaration"!==F&&"TypeParameterDeclaration"!==f&&("Directive"===f||"TypeAlias"===f||"TSExportAssignment"===f||f.startsWith("Declare")||f.startsWith("TSDeclare")||f.endsWith("Statement")||f.endsWith("Declaration"))}(F.type,_&&_.type);case"json":case"json5":case"json-stringify":return y.has(F.type);case"graphql":return h.has(F.kind);case"vue":return"root"!==F.tag}return!1}r.exports={calculateRange:function c(f,F,_){let{rangeStart:w,rangeEnd:E,locStart:N,locEnd:x}=F;t.ok(E>w);let I=f.slice(w,E).search(/\S/),P=-1===I;if(!P)for(w+=I;E>w&&!/\S/.test(f[E-1]);--E);let T,m,$=l(_,w,F,((C,o)=>g(F,C,o)),[],"rangeStart"),D=P?$:l(_,E,F,(C=>g(F,C)),[],"rangeEnd");if(!$||!D)return{rangeStart:0,rangeEnd:0};if((f=>{let{parser:F}=f;return"json"===F||"json5"===F||"json-stringify"===F})(F)){let C=function n(f,F){let _=[f.node,...f.parentNodes],w=new Set([F.node,...F.parentNodes]);return _.find((E=>y.has(E.type)&&w.has(E)))}($,D);T=C,m=C}else({startNode:T,endNode:m}=function i(f,F,_){let{locStart:w,locEnd:E}=_,N=f.node,x=F.node;if(N===x)return{startNode:N,endNode:x};let I=w(f.node);for(let $ of u(F.parentNodes)){if(!(w($)>=I))break;x=$}let P=E(F.node);for(let $ of u(f.parentNodes)){if(!(E($)<=P))break;if(N=$,N===x)break}return{startNode:N,endNode:x}}($,D,F));return{rangeStart:Math.min(N(T),N(m)),rangeEnd:Math.max(x(T),x(m))}},findNodeAtOffset:l}}}),Gm=te({"src/main/core.js"(e,r){ne();var{diffArrays:t}=BD(),{printer:{printDocToString:s},debug:{printDocToDebug:a}}=qe(),{getAlignmentSize:n}=Ue(),{guessEndOfLine:u,convertEndOfLineToChars:i,countEndOfLineChars:l,normalizeEndOfLine:p}=Jn(),y=uo().normalize,h=Rm(),g=et(),c=tu(),f=Wm(),F=Hm(),w=Symbol("cursor");function E(m,C,o){let d=C.comments;return d&&(delete C.comments,g.attach(d,C,m,o)),o[Symbol.for("comments")]=d||[],o[Symbol.for("tokens")]=C.tokens||[],o.originalText=m,d}function N(m,C){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(!m||0===m.trim().length)return{formatted:"",cursorOffset:-1,comments:[]};let{ast:d,text:v}=c.parse(m,C);if(C.cursorOffset>=0){let k=F.findNodeAtOffset(d,C.cursorOffset,C);k&&k.node&&(C.cursorNode=k.node)}let S=E(v,d,C),b=f(d,C,o),B=s(b,C);if(g.ensureAllCommentsPrinted(S),o>0){let k=B.formatted.trim();void 0!==B.cursorNodeStart&&(B.cursorNodeStart-=B.formatted.indexOf(k)),B.formatted=k+i(C.endOfLine)}if(C.cursorOffset>=0){let k,M,R,q,J;if(C.cursorNode&&B.cursorNodeText?(k=C.locStart(C.cursorNode),M=v.slice(k,C.locEnd(C.cursorNode)),R=C.cursorOffset-k,q=B.cursorNodeStart,J=B.cursorNodeText):(k=0,M=v,R=C.cursorOffset,q=0,J=B.formatted),M===J)return{formatted:B.formatted,cursorOffset:q+R,comments:S};let L=[...M];L.splice(R,0,w);let Q=[...J],V=t(L,Q),j=q;for(let Y of V)if(Y.removed){if(Y.value.includes(w))break}else j+=Y.count;return{formatted:B.formatted,cursorOffset:j,comments:S}}return{formatted:B.formatted,cursorOffset:-1,comments:S}}function I(m,C,o){return"number"!=typeof C||Number.isNaN(C)||C<0||C>m.length?o:C}function P(m,C){let{cursorOffset:o,rangeStart:d,rangeEnd:v}=C;return o=I(m,o,-1),d=I(m,d,0),v=I(m,v,m.length),Object.assign(Object.assign({},C),{},{cursorOffset:o,rangeStart:d,rangeEnd:v})}function $(m,C){let{cursorOffset:o,rangeStart:d,rangeEnd:v,endOfLine:S}=P(m,C),b="\ufeff"===m.charAt(0);if(b&&(m=m.slice(1),o--,d--,v--),"auto"===S&&(S=u(m)),m.includes("\r")){let B=k=>l(m.slice(0,Math.max(k,0)),"\r\n");o-=B(o),d-=B(d),v-=B(v),m=p(m)}return{hasBOM:b,text:m,options:P(m,Object.assign(Object.assign({},C),{},{cursorOffset:o,rangeStart:d,rangeEnd:v,endOfLine:S}))}}function D(m,C){let o=c.resolveParser(C);return!o.hasPragma||o.hasPragma(m)}function T(m,C){let S,{hasBOM:o,text:d,options:v}=$(m,y(C));return v.rangeStart>=v.rangeEnd&&""!==d||v.requirePragma&&!D(d,v)?{formatted:m,cursorOffset:C.cursorOffset,comments:[]}:(v.rangeStart>0||v.rangeEnd<d.length?S=function x(m,C){let{ast:o,text:d}=c.parse(m,C),{rangeStart:v,rangeEnd:S}=F.calculateRange(d,C,o),b=d.slice(v,S),B=Math.min(v,d.lastIndexOf("\n",v)+1),k=d.slice(B,v).match(/^\s*/)[0],M=n(k,C.tabWidth),R=N(b,Object.assign(Object.assign({},C),{},{rangeStart:0,rangeEnd:Number.POSITIVE_INFINITY,cursorOffset:C.cursorOffset>v&&C.cursorOffset<=S?C.cursorOffset-v:-1,endOfLine:"lf"}),M),q=R.formatted.trimEnd(),{cursorOffset:J}=C;J>S?J+=q.length-b.length:R.cursorOffset>=0&&(J=R.cursorOffset+v);let L=d.slice(0,v)+q+d.slice(S);if("lf"!==C.endOfLine){let Q=i(C.endOfLine);J>=0&&"\r\n"===Q&&(J+=l(L.slice(0,J),"\n")),L=L.replace(/\n/g,Q)}return{formatted:L,cursorOffset:J,comments:R.comments}}(d,v):(!v.requirePragma&&v.insertPragma&&v.printer.insertPragma&&!D(d,v)&&(d=v.printer.insertPragma(d)),S=N(d,v)),o&&(S.formatted="\ufeff"+S.formatted,S.cursorOffset>=0&&S.cursorOffset++),S)}r.exports={formatWithCursor:T,parse(m,C,o){let{text:d,options:v}=$(m,y(C)),S=c.parse(d,v);return o&&(S.ast=h(S.ast,v)),S},formatAST(m,C){C=y(C);let o=f(m,C);return s(o,C)},formatDoc:(m,C)=>T(a(m),Object.assign(Object.assign({},C),{},{parser:"__js_expression"})).formatted,printToDoc(m,C){C=y(C);let{ast:o,text:d}=c.parse(m,C);return E(d,o,C),f(o,C)},printDocToString:(m,C)=>s(m,y(C))}}}),Um=te({"src/common/util-shared.js"(e,r){ne();var{getMaxContinuousCount:t,getStringWidth:s,getAlignmentSize:a,getIndentSize:n,skip:u,skipWhitespace:i,skipSpaces:l,skipNewline:p,skipToLineEnd:y,skipEverythingButNewLine:h,skipInlineComment:g,skipTrailingComment:c,hasNewline:f,hasNewlineInRange:F,hasSpaces:_,isNextLineEmpty:w,isNextLineEmptyAfterIndex:E,isPreviousLineEmpty:N,getNextNonSpaceNonCommentCharacterIndex:x,makeString:I,addLeadingComment:P,addDanglingComment:$,addTrailingComment:D}=Ue();r.exports={getMaxContinuousCount:t,getStringWidth:s,getAlignmentSize:a,getIndentSize:n,skip:u,skipWhitespace:i,skipSpaces:l,skipNewline:p,skipToLineEnd:y,skipEverythingButNewLine:h,skipInlineComment:g,skipTrailingComment:c,hasNewline:f,hasNewlineInRange:F,hasSpaces:_,isNextLineEmpty:w,isNextLineEmptyAfterIndex:E,isPreviousLineEmpty:N,getNextNonSpaceNonCommentCharacterIndex:x,makeString:I,addLeadingComment:P,addDanglingComment:$,addTrailingComment:D}}}),_t=te({"src/utils/create-language.js"(e,r){ne(),r.exports=function(t,s){let{languageId:a}=t,n=Hn(t,CD);return Object.assign(Object.assign({linguistLanguageId:a},n),s(t))}}}),Jm=te({"node_modules/esutils/lib/ast.js"(e,r){ne(),function(){function a(l){if(null==l)return!1;switch(l.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function u(l){switch(l.type){case"IfStatement":return null!=l.alternate?l.alternate:l.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return l.body}return null}r.exports={isExpression:function t(l){if(null==l)return!1;switch(l.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:a,isIterationStatement:function s(l){if(null==l)return!1;switch(l.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function n(l){return a(l)||null!=l&&"FunctionDeclaration"===l.type},isProblematicIfStatement:function i(l){var p;if("IfStatement"!==l.type||null==l.alternate)return!1;p=l.consequent;do{if("IfStatement"===p.type&&null==p.alternate)return!0;p=u(p)}while(p);return!1},trailingStatement:u}}()}}),so=te({"node_modules/esutils/lib/code.js"(e,r){ne(),function(){var t,s,a,n,u,i;function c(E){return E<=65535?String.fromCharCode(E):String.fromCharCode(Math.floor((E-65536)/1024)+55296)+String.fromCharCode((E-65536)%1024+56320)}for(s={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,NonAsciiIdentifierPart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/},t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/},a=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],n=new Array(128),i=0;i<128;++i)n[i]=i>=97&&i<=122||i>=65&&i<=90||36===i||95===i;for(u=new Array(128),i=0;i<128;++i)u[i]=i>=97&&i<=122||i>=65&&i<=90||i>=48&&i<=57||36===i||95===i;r.exports={isDecimalDigit:function l(E){return 48<=E&&E<=57},isHexDigit:function p(E){return 48<=E&&E<=57||97<=E&&E<=102||65<=E&&E<=70},isOctalDigit:function y(E){return E>=48&&E<=55},isWhiteSpace:function h(E){return 32===E||9===E||11===E||12===E||160===E||E>=5760&&a.indexOf(E)>=0},isLineTerminator:function g(E){return 10===E||13===E||8232===E||8233===E},isIdentifierStartES5:function f(E){return E<128?n[E]:s.NonAsciiIdentifierStart.test(c(E))},isIdentifierPartES5:function F(E){return E<128?u[E]:s.NonAsciiIdentifierPart.test(c(E))},isIdentifierStartES6:function _(E){return E<128?n[E]:t.NonAsciiIdentifierStart.test(c(E))},isIdentifierPartES6:function w(E){return E<128?u[E]:t.NonAsciiIdentifierPart.test(c(E))}}}()}}),zm=te({"node_modules/esutils/lib/keyword.js"(e,r){ne(),function(){var t=so();function a(f,F){return!(!F&&"yield"===f)&&n(f,F)}function n(f,F){if(F&&function s(f){switch(f){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(f))return!0;switch(f.length){case 2:return"if"===f||"in"===f||"do"===f;case 3:return"var"===f||"for"===f||"new"===f||"try"===f;case 4:return"this"===f||"else"===f||"case"===f||"void"===f||"with"===f||"enum"===f;case 5:return"while"===f||"break"===f||"catch"===f||"throw"===f||"const"===f||"yield"===f||"class"===f||"super"===f;case 6:return"return"===f||"typeof"===f||"delete"===f||"switch"===f||"export"===f||"import"===f;case 7:return"default"===f||"finally"===f||"extends"===f;case 8:return"function"===f||"continue"===f||"debugger"===f;case 10:return"instanceof"===f;default:return!1}}function u(f,F){return"null"===f||"true"===f||"false"===f||a(f,F)}function i(f,F){return"null"===f||"true"===f||"false"===f||n(f,F)}function p(f){var F,_,w;if(0===f.length||(w=f.charCodeAt(0),!t.isIdentifierStartES5(w)))return!1;for(F=1,_=f.length;F<_;++F)if(w=f.charCodeAt(F),!t.isIdentifierPartES5(w))return!1;return!0}function y(f,F){return 1024*(f-55296)+(F-56320)+65536}function h(f){var F,_,w,E,N;if(0===f.length)return!1;for(N=t.isIdentifierStartES6,F=0,_=f.length;F<_;++F){if(55296<=(w=f.charCodeAt(F))&&w<=56319){if(++F>=_||!(56320<=(E=f.charCodeAt(F))&&E<=57343))return!1;w=y(w,E)}if(!N(w))return!1;N=t.isIdentifierPartES6}return!0}r.exports={isKeywordES5:a,isKeywordES6:n,isReservedWordES5:u,isReservedWordES6:i,isRestrictedWord:function l(f){return"eval"===f||"arguments"===f},isIdentifierNameES5:p,isIdentifierNameES6:h,isIdentifierES5:function g(f,F){return p(f)&&!u(f,F)},isIdentifierES6:function c(f,F){return h(f)&&!i(f,F)}}}()}}),Xm=te({"node_modules/esutils/lib/utils.js"(e){ne(),e.ast=Jm(),e.code=so(),e.keyword=zm()}}),Pt=te({"src/language-js/utils/is-block-comment.js"(e,r){ne();var t=new Set(["Block","CommentBlock","MultiLine"]);r.exports=a=>t.has(a?.type)}}),Km=te({"src/language-js/utils/is-node-matches.js"(e,r){ne(),r.exports=function s(a,n){return n.some((u=>function t(a,n){let u=n.split(".");for(let i=u.length-1;i>=0;i--){let l=u[i];if(0===i)return"Identifier"===a.type&&a.name===l;if("MemberExpression"!==a.type||a.optional||a.computed||"Identifier"!==a.property.type||a.property.name!==l)return!1;a=a.object}}(a,u)))}}}),Ke=te({"src/language-js/utils/index.js"(e,r){ne();var t=Xm().keyword.isIdentifierNameES5,{getLast:s,hasNewline:a,skipWhitespace:n,isNonEmptyArray:u,isNextLineEmptyAfterIndex:i,getStringWidth:l}=Ue(),{locStart:p,locEnd:y,hasSameLocStart:h}=ut(),g=Pt(),c=Km(),f="(?:(?=.)\\s)",F=new RegExp(`^${f}*:`),_=new RegExp(`^${f}*::`);function $(O){return O=new Set(O),me=>O.has(me?.type)}var D=$(["Line","CommentLine","SingleLine","HashbangComment","HTMLOpen","HTMLClose"]),T=$(["ExportDefaultDeclaration","ExportDefaultSpecifier","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration"]);var C=$(["BooleanLiteral","DirectiveLiteral","Literal","NullLiteral","NumericLiteral","BigIntLiteral","DecimalLiteral","RegExpLiteral","StringLiteral","TemplateLiteral","TSTypeLiteral","JSXText"]);function o(O){return"NumericLiteral"===O.type||"Literal"===O.type&&"number"==typeof O.value}function v(O){return"StringLiteral"===O.type||"Literal"===O.type&&"string"==typeof O.value}var S=$(["ObjectTypeAnnotation","TSTypeLiteral","TSMappedType"]),b=$(["FunctionExpression","ArrowFunctionExpression"]);function k(O){return de(O)&&"Identifier"===O.callee.type&&["async","inject","fakeAsync","waitForAsync"].includes(O.callee.name)}var M=$(["JSXElement","JSXFragment"]);function q(O){return"get"===O.kind||"set"===O.kind}function J(O){return q(O)||h(O,O.value)}var V=$(["BinaryExpression","LogicalExpression","NGPipeExpression"]);var Y=new Set(["AnyTypeAnnotation","TSAnyKeyword","NullLiteralTypeAnnotation","TSNullKeyword","ThisTypeAnnotation","TSThisType","NumberTypeAnnotation","TSNumberKeyword","VoidTypeAnnotation","TSVoidKeyword","BooleanTypeAnnotation","TSBooleanKeyword","BigIntTypeAnnotation","TSBigIntKeyword","SymbolTypeAnnotation","TSSymbolKeyword","StringTypeAnnotation","TSStringKeyword","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType","EmptyTypeAnnotation","MixedTypeAnnotation","TSNeverKeyword","TSObjectKeyword","TSUndefinedKeyword","TSUnknownKeyword"]);var ce=["it","it.only","it.skip","describe","describe.only","describe.skip","test","test.only","test.skip","test.step","test.describe","test.describe.only","test.describe.parallel","test.describe.parallel.only","test.describe.serial","test.describe.serial.only","skip","xit","xdescribe","xtest","fit","fdescribe","ftest"];var de=$(["CallExpression","OptionalCallExpression"]),ue=$(["MemberExpression","OptionalMemberExpression"]);function fe(O){return/^(?:\d+|\d+\.\d+)$/.test(O)}function he(O){return O.quasis.some((me=>me.value.raw.includes("\n")))}function oe(O){var me,_e;return null!==(me=null===(_e=O.extra)||void 0===_e?void 0:_e.raw)&&void 0!==me?me:O.raw}var Ae={"==":!0,"!=":!0,"===":!0,"!==":!0},Ee={"*":!0,"/":!0,"%":!0},De={">>":!0,">>>":!0,"<<":!0};var G=new Map([["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].flatMap(((O,me)=>O.map((_e=>[_e,me])))));function re(O){return G.get(O)}var Be=new WeakMap;function ve(O){if(Be.has(O))return Be.get(O);let me=[];return O.this&&me.push(O.this),Array.isArray(O.parameters)?me.push(...O.parameters):Array.isArray(O.params)&&me.push(...O.params),O.rest&&me.push(O.rest),Be.set(O,me),me}var be=new WeakMap;function Ye(O){if(be.has(O))return be.get(O);let me=O.arguments;return"ImportExpression"===O.type&&(me=[O.source],O.attributes&&me.push(O.attributes)),be.set(O,me),me}function Ie(O){return"prettier-ignore"===O.value.trim()&&!O.unignore}function Oe(O){return O&&(O.prettierIgnore||Me(O,Te.PrettierIgnore))}var Te={Leading:2,Trailing:4,Dangling:8,Block:16,Line:32,PrettierIgnore:64,First:128,Last:256},je=(O,me)=>{if("function"==typeof O&&(me=O,O=0),O||me)return(_e,He,Ge)=>!(O&Te.Leading&&!_e.leading||O&Te.Trailing&&!_e.trailing||O&Te.Dangling&&(_e.leading||_e.trailing)||O&Te.Block&&!g(_e)||O&Te.Line&&!D(_e)||O&Te.First&&0!==He||O&Te.Last&&He!==Ge.length-1||O&Te.PrettierIgnore&&!Ie(_e)||me&&!me(_e))};function Me(O,me,_e){if(!u(O?.comments))return!1;let He=je(me,_e);return!He||O.comments.some(He)}function ae(O,me,_e){if(!Array.isArray(O?.comments))return[];let He=je(me,_e);return He?O.comments.filter(He):O.comments}function tt(O){return de(O)||"NewExpression"===O.type||"ImportExpression"===O.type}var Xe=Symbol("ifWithoutBlockAndSameLineComment");function st(O){return"TSAsExpression"===O.type||"TSSatisfiesExpression"===O.type}r.exports={getFunctionParameters:ve,iterateFunctionParametersPath:function ze(O,me){let _e=O.getValue(),He=0,Ge=it=>me(it,He++);_e.this&&O.call(Ge,"this"),Array.isArray(_e.parameters)?O.each(Ge,"parameters"):Array.isArray(_e.params)&&O.each(Ge,"params"),_e.rest&&O.call(Ge,"rest")},getCallArguments:Ye,iterateCallArgumentsPath:function Se(O,me){let _e=O.getValue();"ImportExpression"===_e.type?(O.call((He=>me(He,0)),"source"),_e.attributes&&O.call((He=>me(He,1)),"attributes")):O.each(me,"arguments")},hasRestParameter:function Ce(O){var me;if(O.rest)return!0;let _e=ve(O);return"RestElement"===(null===(me=s(_e))||void 0===me?void 0:me.type)},getLeftSide:function I(O){var me,_e,He,Ge,it,Qe;return O.expressions?O.expressions[0]:null!==(me=null!==(_e=null!==(He=null!==(Ge=null!==(it=null!==(Qe=O.left)&&void 0!==Qe?Qe:O.test)&&void 0!==it?it:O.callee)&&void 0!==Ge?Ge:O.object)&&void 0!==He?He:O.tag)&&void 0!==_e?_e:O.argument)&&void 0!==me?me:O.expression},getLeftSidePathName:function P(O,me){if(me.expressions)return["expressions",0];if(me.left)return["left"];if(me.test)return["test"];if(me.object)return["object"];if(me.callee)return["callee"];if(me.tag)return["tag"];if(me.argument)return["argument"];if(me.expression)return["expression"];throw new Error("Unexpected node has no left side.")},getParentExportDeclaration:function m(O){let me=O.getParentNode();return"declaration"===O.getName()&&T(me)?me:null},getTypeScriptMappedTypeModifier:function z(O,me){return"+"===O||"-"===O?O+me:me},hasFlowAnnotationComment:function E(O){let me=O?.[0];return g(me)&&_.test(me.value)},hasFlowShorthandAnnotationComment:function w(O){var me,_e;return(null===(me=O.extra)||void 0===me?void 0:me.parenthesized)&&g(null===(_e=O.trailingComments)||void 0===_e?void 0:_e[0])&&F.test(O.trailingComments[0].value)},hasLeadingOwnLineComment:function Z(O,me){return M(me)?Oe(me):Me(me,Te.Leading,(_e=>a(O,y(_e))))},hasNakedLeftSide:function x(O){return"AssignmentExpression"===O.type||"BinaryExpression"===O.type||"LogicalExpression"===O.type||"NGPipeExpression"===O.type||"ConditionalExpression"===O.type||de(O)||ue(O)||"SequenceExpression"===O.type||"TaggedTemplateExpression"===O.type||"BindExpression"===O.type||"UpdateExpression"===O.type&&!O.prefix||st(O)||"TSNonNullExpression"===O.type},hasNode:function N(O,me){if(!O||"object"!=typeof O)return!1;if(Array.isArray(O))return O.some((He=>N(He,me)));let _e=me(O);return"boolean"==typeof _e?_e:Object.values(O).some((He=>N(He,me)))},hasIgnoreComment:function Je(O){return Oe(O.getValue())},hasNodeIgnoreComment:Oe,identity:function H(O){return O},isBinaryish:V,isCallLikeExpression:tt,isEnabledHackPipeline:function We(O){return Boolean(O.__isUsingHackPipeline)},isLineComment:D,isPrettierIgnoreComment:Ie,isCallExpression:de,isMemberExpression:ue,isExportDeclaration:T,isFlowAnnotationComment:function U(O,me){let _e=p(me),He=n(O,y(me));return!1!==He&&"/*"===O.slice(_e,_e+2)&&"*/"===O.slice(He,He+2)},isFunctionCompositionArgs:function Re(O){if(O.length<=1)return!1;let me=0;for(let _e of O)if(b(_e)){if(me+=1,me>1)return!0}else if(de(_e))for(let He of _e.arguments)if(b(He))return!0;return!1},isFunctionNotation:J,isFunctionOrArrowExpression:b,isGetterOrSetter:q,isJestEachTemplateLiteral:function ge(O,me){let _e=/^[fx]?(?:describe|it|test)$/;return"TaggedTemplateExpression"===me.type&&me.quasi===O&&"MemberExpression"===me.tag.type&&"Identifier"===me.tag.property.type&&"each"===me.tag.property.name&&("Identifier"===me.tag.object.type&&_e.test(me.tag.object.name)||"MemberExpression"===me.tag.object.type&&"Identifier"===me.tag.object.property.type&&("only"===me.tag.object.property.name||"skip"===me.tag.object.property.name)&&"Identifier"===me.tag.object.object.type&&_e.test(me.tag.object.object.name))},isJsxNode:M,isLiteral:C,isLongCurriedCallExpression:function Ne(O){let me=O.getValue(),_e=O.getParentNode();return de(me)&&de(_e)&&_e.callee===me&&me.arguments.length>_e.arguments.length&&_e.arguments.length>0},isSimpleCallArgument:function Pe(O,me){if(me>=2)return!1;let _e=Qe=>Pe(Qe,me+1),He="Literal"===O.type&&"regex"in O&&O.regex.pattern||"RegExpLiteral"===O.type&&O.pattern;return!(He&&l(He)>5)&&("Literal"===O.type||"BigIntLiteral"===O.type||"DecimalLiteral"===O.type||"BooleanLiteral"===O.type||"NullLiteral"===O.type||"NumericLiteral"===O.type||"RegExpLiteral"===O.type||"StringLiteral"===O.type||"Identifier"===O.type||"ThisExpression"===O.type||"Super"===O.type||"PrivateName"===O.type||"PrivateIdentifier"===O.type||"ArgumentPlaceholder"===O.type||"Import"===O.type||("TemplateLiteral"===O.type?O.quasis.every((Qe=>!Qe.value.raw.includes("\n")))&&O.expressions.every(_e):"ObjectExpression"===O.type?O.properties.every((Qe=>!Qe.computed&&(Qe.shorthand||Qe.value&&_e(Qe.value)))):"ArrayExpression"===O.type?O.elements.every((Qe=>null===Qe||_e(Qe))):tt(O)?("ImportExpression"===O.type||Pe(O.callee,me))&&Ye(O).every(_e):ue(O)?Pe(O.object,me)&&Pe(O.property,me):"UnaryExpression"===O.type&&{"!":!0,"-":!0,"+":!0,"~":!0}[O.operator]||"UpdateExpression"===O.type&&{"++":!0,"--":!0}[O.operator]?Pe(O.argument,me):"TSNonNullExpression"===O.type&&Pe(O.expression,me)))},isMemberish:function j(O){return ue(O)||"BindExpression"===O.type&&Boolean(O.object)},isNumericLiteral:o,isSignedNumericLiteral:function d(O){return"UnaryExpression"===O.type&&("+"===O.operator||"-"===O.operator)&&o(O.argument)},isObjectProperty:function Ve(O){return O&&("ObjectProperty"===O.type||"Property"===O.type&&!O.method&&"init"===O.kind)},isObjectType:S,isObjectTypePropertyAFunction:function L(O){return!("ObjectTypeProperty"!==O.type&&"ObjectTypeInternalSlot"!==O.type||"FunctionTypeAnnotation"!==O.value.type||O.static||J(O))},isSimpleType:function ie(O){return!!O&&!(("GenericTypeAnnotation"!==O.type&&"TSTypeReference"!==O.type||O.typeParameters)&&!Y.has(O.type))},isSimpleNumber:fe,isSimpleTemplateLiteral:function Fe(O){let me="expressions";"TSTemplateLiteralType"===O.type&&(me="types");let _e=O[me];return 0!==_e.length&&_e.every((He=>{if(Me(He))return!1;if("Identifier"===He.type||"ThisExpression"===He.type)return!0;if(ue(He)){let Ge=He;for(;ue(Ge);)if("Identifier"!==Ge.property.type&&"Literal"!==Ge.property.type&&"StringLiteral"!==Ge.property.type&&"NumericLiteral"!==Ge.property.type||(Ge=Ge.object,Me(Ge)))return!1;return"Identifier"===Ge.type||"ThisExpression"===Ge.type}return!1}))},isStringLiteral:v,isStringPropSafeToUnquote:function se(O,me){return"json"!==me.parser&&v(O.key)&&oe(O.key).slice(1,-1)===O.key.value&&(t(O.key.value)&&!("babel-ts"===me.parser&&"ClassProperty"===O.type||"typescript"===me.parser&&"PropertyDefinition"===O.type)||fe(O.key.value)&&String(Number(O.key.value))===O.key.value&&("babel"===me.parser||"acorn"===me.parser||"espree"===me.parser||"meriyah"===me.parser||"__babel_estree"===me.parser))},isTemplateOnItsOwnLine:function we(O,me){return("TemplateLiteral"===O.type&&he(O)||"TaggedTemplateExpression"===O.type&&he(O.quasi))&&!a(me,p(O),{backwards:!0})},isTestCall:function K(O,me){if("CallExpression"!==O.type)return!1;if(1===O.arguments.length){if(k(O)&&me&&K(me))return b(O.arguments[0]);if(function ee(O){return"Identifier"===O.callee.type&&/^(?:before|after)(?:Each|All)$/.test(O.callee.name)&&1===O.arguments.length}(O))return k(O.arguments[0])}else if((2===O.arguments.length||3===O.arguments.length)&&("TemplateLiteral"===O.arguments[0].type||v(O.arguments[0]))&&function W(O){return c(O,ce)}(O.callee))return!(O.arguments[2]&&!o(O.arguments[2]))&&((2===O.arguments.length?b(O.arguments[1]):function B(O){return"FunctionExpression"===O.type||"ArrowFunctionExpression"===O.type&&"BlockStatement"===O.body.type}(O.arguments[1])&&ve(O.arguments[1]).length<=1)||k(O.arguments[1]));return!1},isTheOnlyJsxElementInMarkdown:function R(O,me){if("markdown"!==O.parentParser&&"mdx"!==O.parentParser)return!1;let _e=me.getNode();if(!_e.expression||!M(_e.expression))return!1;let He=me.getParentNode();return"Program"===He.type&&1===He.body.length},isTSXFile:function pe(O){return O.filepath&&/\.tsx$/i.test(O.filepath)},isTypeAnnotationAFunction:function Q(O){return!("TypeAnnotation"!==O.type&&"TSTypeAnnotation"!==O.type||"FunctionTypeAnnotation"!==O.typeAnnotation.type||O.static||h(O,O.typeAnnotation))},isNextLineEmpty:(O,me)=>{let{originalText:_e}=me;return i(_e,y(O))},needsHardlineAfterDanglingComment:function ke(O){if(!Me(O))return!1;let me=s(ae(O,Te.Dangling));return me&&!g(me)},rawText:oe,shouldPrintComma:function X(O){let me=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"es5";return"es5"===O.trailingComma&&"es5"===me||"all"===O.trailingComma&&("all"===me||"es5"===me)},isBitwiseOperator:function ye(O){return Boolean(De[O])||"|"===O||"^"===O||"&"===O},shouldFlatten:function A(O,me){return!(re(me)!==re(O)||"**"===O||Ae[O]&&Ae[me]||"%"===me&&Ee[O]||"%"===O&&Ee[me]||me!==O&&Ee[me]&&Ee[O]||De[O]&&De[me])},startsWithNoLookaheadToken:function le(O,me){switch(O.type){case"BinaryExpression":case"LogicalExpression":case"AssignmentExpression":case"NGPipeExpression":return le(O.left,me);case"MemberExpression":case"OptionalMemberExpression":return le(O.object,me);case"TaggedTemplateExpression":return"FunctionExpression"!==O.tag.type&&le(O.tag,me);case"CallExpression":case"OptionalCallExpression":return"FunctionExpression"!==O.callee.type&&le(O.callee,me);case"ConditionalExpression":return le(O.test,me);case"UpdateExpression":return!O.prefix&&le(O.argument,me);case"BindExpression":return O.object&&le(O.object,me);case"SequenceExpression":return le(O.expressions[0],me);case"TSSatisfiesExpression":case"TSAsExpression":case"TSNonNullExpression":return le(O.expression,me);default:return me(O)}},getPrecedence:re,hasComment:Me,getComments:ae,CommentCheckFlags:Te,markerForIfWithoutBlockAndSameLineComment:Xe,isTSTypeExpression:st}}}),jt=te({"src/language-js/print/template-literal.js"(e,r){ne();var t=lt(),{getStringWidth:s,getIndentSize:a}=Ue(),{builders:{join:n,hardline:u,softline:i,group:l,indent:p,align:y,lineSuffixBoundary:h,addAlignmentToDoc:g},printer:{printDocToString:c},utils:{mapDoc:f}}=qe(),{isBinaryish:F,isJestEachTemplateLiteral:_,isSimpleTemplateLiteral:w,hasComment:E,isMemberExpression:N,isTSTypeExpression:x}=Ke();function m(C){return C.replace(/([\\`]|\${)/g,"\\$1")}r.exports={printTemplateLiteral:function I(C,o,d){let v=C.getValue();if("TemplateLiteral"===v.type&&_(v,C.getParentNode())){let R=function P(C,o,d){let v=C.getNode(),S=v.quasis[0].value.raw.trim().split(/\s*\|\s*/);if(S.length>1||S.some((b=>b.length>0))){o.__inJestEach=!0;let b=C.map(d,"expressions");o.__inJestEach=!1;let B=[],k=b.map((L=>"${"+c(L,Object.assign(Object.assign({},o),{},{printWidth:Number.POSITIVE_INFINITY,endOfLine:"lf"})).formatted+"}")),M=[{hasLineBreak:!1,cells:[]}];for(let L=1;L<v.quasis.length;L++){let Q=t(M),V=k[L-1];Q.cells.push(V),V.includes("\n")&&(Q.hasLineBreak=!0),v.quasis[L].value.raw.includes("\n")&&M.push({hasLineBreak:!1,cells:[]})}let R=Math.max(S.length,...M.map((L=>L.cells.length))),q=Array.from({length:R}).fill(0),J=[{cells:S},...M.filter((L=>L.cells.length>0))];for(let{cells:L}of J.filter((Q=>!Q.hasLineBreak)))for(let[Q,V]of L.entries())q[Q]=Math.max(q[Q],s(V));return B.push(h,"`",p([u,n(u,J.map((L=>n(" | ",L.cells.map(((Q,V)=>L.hasLineBreak?Q:Q+" ".repeat(q[V]-s(Q))))))))]),u,"`"),B}}(C,d,o);if(R)return R}let b="expressions";"TSTemplateLiteralType"===v.type&&(b="types");let B=[],k=C.map(o,b),M=w(v);return M&&(k=k.map((R=>c(R,Object.assign(Object.assign({},d),{},{printWidth:Number.POSITIVE_INFINITY})).formatted))),B.push(h,"`"),C.each((R=>{let q=R.getName();if(B.push(o()),q<k.length){let{tabWidth:J}=d,L=R.getValue(),Q=a(L.value.raw,J),V=k[q];if(!M){let Y=v[b][q];(E(Y)||N(Y)||"ConditionalExpression"===Y.type||"SequenceExpression"===Y.type||x(Y)||F(Y))&&(V=[p([i,V]),i])}let j=0===Q&&L.value.raw.endsWith("\n")?y(Number.NEGATIVE_INFINITY,V):g(V,Q,J);B.push(l(["${",j,h,"}"]))}}),"quasis"),B.push("`"),B},printTemplateExpressions:function D(C,o){return C.map((d=>function $(C,o){let d=C.getValue(),v=o();return E(d)&&(v=l([p([i,v]),i])),["${",v,h,"}"]}(d,o)),"expressions")},escapeTemplateCharacters:function T(C,o){return f(C,(d=>"string"==typeof d?o?d.replace(/(\\*)`/g,"$1$1\\`"):m(d):d))},uncookTemplateElementValue:m}}}),Ym=te({"src/language-js/embed/markdown.js"(e,r){ne();var{builders:{indent:t,softline:s,literalline:a,dedentToRoot:n}}=qe(),{escapeTemplateCharacters:u}=jt();r.exports=function i(p,y,h){let c=p.getValue().quasis[0].value.raw.replace(/((?:\\\\)*)\\`/g,((w,E)=>"\\".repeat(E.length/2)+"`")),f=function l(p){let y=p.match(/^([^\S\n]*)\S/m);return null===y?"":y[1]}(c),F=""!==f;F&&(c=c.replace(new RegExp(`^${f}`,"gm"),""));let _=u(h(c,{parser:"markdown",__inJsTemplate:!0},{stripTrailingHardline:!0}),!0);return["`",F?t([s,_]):[a,n(_)],s,"`"]}}}),Qm=te({"src/language-js/embed/css.js"(e,r){ne();var{isNonEmptyArray:t}=Ue(),{builders:{indent:s,hardline:a,softline:n},utils:{mapDoc:u,replaceEndOfLine:i,cleanDoc:l}}=qe(),{printTemplateExpressions:p}=jt();r.exports=function y(c,f,F){let _=c.getValue(),w=_.quasis.map((P=>P.value.raw)),E=0;return function h(c,f,F){if(1===f.quasis.length&&!f.quasis[0].value.raw.trim())return"``";let w=function g(c,f){if(!t(f))return c;let F=0,_=u(l(c),(w=>"string"==typeof w&&w.includes("@prettier-placeholder")?w.split(/@prettier-placeholder-(\d+)-id/).map(((E,N)=>N%2==0?i(E):(F++,f[E]))):w));return f.length===F?_:null}(c,F);if(!w)throw new Error("Couldn't insert all the expressions");return["`",s([a,w]),n,"`"]}(F(w.reduce(((P,$,D)=>0===D?$:P+"@prettier-placeholder-"+E+++"-id"+$),""),{parser:"scss"},{stripTrailingHardline:!0}),_,p(c,f))}}}),Zm=te({"src/language-js/embed/graphql.js"(e,r){ne();var{builders:{indent:t,join:s,hardline:a}}=qe(),{escapeTemplateCharacters:n,printTemplateExpressions:u}=jt();function l(p){let y=[],h=!1,g=p.map((c=>c.trim()));for(let[c,f]of g.entries())""!==f&&(""===g[c-1]&&h?y.push([a,f]):y.push(f),h=!0);return 0===y.length?null:s(a,y)}r.exports=function i(p,y,h){let g=p.getValue(),c=g.quasis.length;if(1===c&&""===g.quasis[0].value.raw.trim())return"``";let f=u(p,y),F=[];for(let _=0;_<c;_++){let E=0===_,N=_===c-1,x=g.quasis[_].value.cooked,I=x.split("\n"),P=I.length,$=f[_],D=P>2&&""===I[0].trim()&&""===I[1].trim(),T=P>2&&""===I[P-1].trim()&&""===I[P-2].trim(),m=I.every((o=>/^\s*(?:#[^\n\r]*)?$/.test(o)));if(!N&&/#[^\n\r]*$/.test(I[P-1]))return null;let C=null;C=m?l(I):h(x,{parser:"graphql"},{stripTrailingHardline:!0}),C?(C=n(C,!1),!E&&D&&F.push(""),F.push(C),!N&&T&&F.push("")):!E&&!N&&D&&F.push(""),$&&F.push($)}return["`",t([a,s(a,F)]),a,"`"]}}}),ed=te({"src/language-js/embed/html.js"(e,r){ne();var{builders:{indent:t,line:s,hardline:a,group:n},utils:{mapDoc:u}}=qe(),{printTemplateExpressions:i,uncookTemplateElementValue:l}=jt(),p=0;r.exports=function y(h,g,c,f,F){let{parser:_}=F,w=h.getValue(),E=p;p=p+1>>>0;let N=d=>`PRETTIER_HTML_PLACEHOLDER_${d}_${E}_IN_JS`,x=w.quasis.map(((d,v,S)=>v===S.length-1?d.value.cooked:d.value.cooked+N(v))).join(""),I=i(h,g);if(0===I.length&&0===x.trim().length)return"``";let P=new RegExp(N("(\\d+)"),"g"),$=0,D=c(x,{parser:_,__onHtmlRoot(d){$=d.children.length}},{stripTrailingHardline:!0}),T=u(D,(d=>{if("string"!=typeof d)return d;let v=[],S=d.split(P);for(let b=0;b<S.length;b++){let B=S[b];if(b%2==0){B&&(B=l(B),f.__embeddedInHtml&&(B=B.replace(/<\/(script)\b/gi,"<\\/$1")),v.push(B));continue}let k=Number(B);v.push(I[k])}return v})),m=/^\s/.test(x)?" ":"",C=/\s$/.test(x)?" ":"",o="ignore"===f.htmlWhitespaceSensitivity?a:m&&C?s:null;return n(o?["`",t([o,n(T)]),o,"`"]:["`",m,$>1?t(n(T)):n(T),C,"`"])}}}),td=te({"src/language-js/embed.js"(e,r){ne();var{hasComment:t,CommentCheckFlags:s,isObjectProperty:a}=Ke(),n=Ym(),u=Qm(),i=Zm(),l=ed();function p(D){return function g(D){let T=D.getValue(),m=D.getParentNode(),C=D.getParentNode(1);return C&&T.quasis&&"JSXExpressionContainer"===m.type&&"JSXElement"===C.type&&"style"===C.openingElement.name.name&&C.openingElement.attributes.some((o=>"jsx"===o.name.name))||m&&"TaggedTemplateExpression"===m.type&&"Identifier"===m.tag.type&&"css"===m.tag.name||m&&"TaggedTemplateExpression"===m.type&&"MemberExpression"===m.tag.type&&"css"===m.tag.object.name&&("global"===m.tag.property.name||"resolve"===m.tag.property.name)}(D)||function _(D){let T=D.getParentNode();if(!T||"TaggedTemplateExpression"!==T.type)return!1;let m="ParenthesizedExpression"===T.tag.type?T.tag.expression:T.tag;switch(m.type){case"MemberExpression":return E(m.object)||N(m);case"CallExpression":return E(m.callee)||"MemberExpression"===m.callee.type&&("MemberExpression"===m.callee.object.type&&(E(m.callee.object.object)||N(m.callee.object))||"CallExpression"===m.callee.object.type&&E(m.callee.object.callee));case"Identifier":return"css"===m.name;default:return!1}}(D)||function w(D){let T=D.getParentNode(),m=D.getParentNode(1);return m&&"JSXExpressionContainer"===T.type&&"JSXAttribute"===m.type&&"JSXIdentifier"===m.name.type&&"css"===m.name.name}(D)||function c(D){return D.match((T=>"TemplateLiteral"===T.type),((T,m)=>"ArrayExpression"===T.type&&"elements"===m),((T,m)=>a(T)&&"Identifier"===T.key.type&&"styles"===T.key.name&&"value"===m),...F)}(D)?"css":function x(D){let T=D.getValue(),m=D.getParentNode();return I(T,"GraphQL")||m&&("TaggedTemplateExpression"===m.type&&("MemberExpression"===m.tag.type&&"graphql"===m.tag.object.name&&"experimental"===m.tag.property.name||"Identifier"===m.tag.type&&("gql"===m.tag.name||"graphql"===m.tag.name))||"CallExpression"===m.type&&"Identifier"===m.callee.type&&"graphql"===m.callee.name)}(D)?"graphql":function P(D){return I(D.getValue(),"HTML")||D.match((T=>"TemplateLiteral"===T.type),((T,m)=>"TaggedTemplateExpression"===T.type&&"Identifier"===T.tag.type&&"html"===T.tag.name&&"quasi"===m))}(D)?"html":function f(D){return D.match((T=>"TemplateLiteral"===T.type),((T,m)=>a(T)&&"Identifier"===T.key.type&&"template"===T.key.name&&"value"===m),...F)}(D)?"angular":function h(D){let T=D.getValue(),m=D.getParentNode();return m&&"TaggedTemplateExpression"===m.type&&1===T.quasis.length&&"Identifier"===m.tag.type&&("md"===m.tag.name||"markdown"===m.tag.name)}(D)?"markdown":void 0}var F=[(D,T)=>"ObjectExpression"===D.type&&"properties"===T,(D,T)=>"CallExpression"===D.type&&"Identifier"===D.callee.type&&"Component"===D.callee.name&&"arguments"===T,(D,T)=>"Decorator"===D.type&&"expression"===T];function E(D){return"Identifier"===D.type&&"styled"===D.name}function N(D){return/^[A-Z]/.test(D.object.name)&&"extend"===D.property.name}function I(D,T){return t(D,s.Block|s.Leading,(m=>{let{value:C}=m;return C===` ${T} `}))}r.exports=function y(D,T,m,C){let o=D.getValue();if("TemplateLiteral"!==o.type||function $(D){let{quasis:T}=D;return T.some((m=>{let{value:{cooked:C}}=m;return null===C}))}(o))return;let d=p(D);if(d){if("markdown"===d)return n(D,T,m);if("css"===d)return u(D,T,m);if("graphql"===d)return i(D,T,m);if("html"===d||"angular"===d)return l(D,T,m,C,{parser:d})}}}}),rd=te({"src/language-js/clean.js"(e,r){ne();var t=Pt(),s=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]),a=u=>{for(let i of u.quasis)delete i.value};function n(u,i,l){if("Program"===u.type&&delete i.sourceType,("BigIntLiteral"===u.type||"BigIntLiteralTypeAnnotation"===u.type)&&i.value&&(i.value=i.value.toLowerCase()),("BigIntLiteral"===u.type||"Literal"===u.type)&&i.bigint&&(i.bigint=i.bigint.toLowerCase()),"DecimalLiteral"===u.type&&(i.value=Number(i.value)),"Literal"===u.type&&i.decimal&&(i.decimal=Number(i.decimal)),"EmptyStatement"===u.type||"JSXText"===u.type||"JSXExpressionContainer"===u.type&&("Literal"===u.expression.type||"StringLiteral"===u.expression.type)&&" "===u.expression.value)return null;if(("Property"===u.type||"ObjectProperty"===u.type||"MethodDefinition"===u.type||"ClassProperty"===u.type||"ClassMethod"===u.type||"PropertyDefinition"===u.type||"TSDeclareMethod"===u.type||"TSPropertySignature"===u.type||"ObjectTypeProperty"===u.type)&&"object"==typeof u.key&&u.key&&("Literal"===u.key.type||"NumericLiteral"===u.key.type||"StringLiteral"===u.key.type||"Identifier"===u.key.type)&&delete i.key,"JSXElement"===u.type&&"style"===u.openingElement.name.name&&u.openingElement.attributes.some((h=>"jsx"===h.name.name)))for(let{type:h,expression:g}of i.children)"JSXExpressionContainer"===h&&"TemplateLiteral"===g.type&&a(g);"JSXAttribute"===u.type&&"css"===u.name.name&&"JSXExpressionContainer"===u.value.type&&"TemplateLiteral"===u.value.expression.type&&a(i.value.expression),"JSXAttribute"===u.type&&u.value&&"Literal"===u.value.type&&/["']|&quot;|&apos;/.test(u.value.value)&&(i.value.value=i.value.value.replace(/["']|&quot;|&apos;/g,'"'));let p=u.expression||u.callee;if("Decorator"===u.type&&"CallExpression"===p.type&&"Component"===p.callee.name&&1===p.arguments.length){let h=u.expression.arguments[0].properties;for(let[g,c]of i.expression.arguments[0].properties.entries())switch(h[g].key.name){case"styles":"ArrayExpression"===c.value.type&&a(c.value.elements[0]);break;case"template":"TemplateLiteral"===c.value.type&&a(c.value)}}var y;("TaggedTemplateExpression"===u.type&&("MemberExpression"===u.tag.type||"Identifier"===u.tag.type&&("gql"===u.tag.name||"graphql"===u.tag.name||"css"===u.tag.name||"md"===u.tag.name||"markdown"===u.tag.name||"html"===u.tag.name)||"CallExpression"===u.tag.type)&&a(i.quasi),"TemplateLiteral"===u.type)&&((null!==(y=u.leadingComments)&&void 0!==y&&y.some((g=>t(g)&&["GraphQL","HTML"].some((c=>g.value===` ${c} `))))||"CallExpression"===l.type&&"graphql"===l.callee.name||!u.leadingComments)&&a(i));return"InterpreterDirective"===u.type&&(i.value=i.value.trimEnd()),"TSIntersectionType"!==u.type&&"TSUnionType"!==u.type||1!==u.types.length?void 0:i.types[0]}n.ignoredProperties=s,r.exports=n}}),io={};function ao(){if(typeof Tr>"u"){var e=new ArrayBuffer(2),r=new Uint8Array(e),t=new Uint16Array(e);if(r[0]=1,r[1]=2,258===t[0])Tr="BE";else{if(513!==t[0])throw new Error("unable to figure out endianess");Tr="LE"}}return Tr}function oo(){return typeof globalThis.location<"u"?globalThis.location.hostname:""}function lo(){return[]}function co(){return 0}function po(){return Number.MAX_VALUE}function fo(){return Number.MAX_VALUE}function Do(){return[]}function mo(){return"Browser"}function go(){return typeof globalThis.navigator<"u"?globalThis.navigator.appVersion:""}function yo(){}function ho(){}function nd(){return"javascript"}function ud(){return"browser"}function $n(){return"/tmp"}Kt(io,{EOL:()=>Wn,arch:()=>nd,cpus:()=>Do,default:()=>vo,endianness:()=>ao,freemem:()=>po,getNetworkInterfaces:()=>ho,hostname:()=>oo,loadavg:()=>lo,networkInterfaces:()=>yo,platform:()=>ud,release:()=>go,tmpDir:()=>$n,tmpdir:()=>Vn,totalmem:()=>fo,type:()=>mo,uptime:()=>co});var Tr,Vn,Wn,vo,sd=ht({"node-modules-polyfills:os"(){ne(),vo={EOL:Wn="\n",tmpdir:Vn=$n,tmpDir:$n,networkInterfaces:yo,getNetworkInterfaces:ho,release:go,type:mo,cpus:Do,totalmem:fo,freemem:po,uptime:co,loadavg:lo,hostname:oo,endianness:ao}}}),id=te({"node-modules-polyfills-commonjs:os"(e,r){ne();var t=(sd(),ft(io));if(t&&t.default){r.exports=t.default;for(let s in t)r.exports[s]=t[s]}else t&&(r.exports=t)}}),ad=te({"node_modules/detect-newline/index.js"(e,r){ne();var t=s=>{if("string"!=typeof s)throw new TypeError("Expected a string");let a=s.match(/(?:\r?\n)/g)||[];if(0===a.length)return;let n=a.filter((i=>"\r\n"===i)).length;return n>a.length-n?"\r\n":"\n"};r.exports=t,r.exports.graceful=s=>"string"==typeof s&&t(s)||"\n"}}),od=te({"node_modules/jest-docblock/build/index.js"(e){function r(){let N=id();return r=function(){return N},N}function t(){let N=function s(N){return N&&N.__esModule?N:{default:N}}(ad());return t=function(){return N},N}ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.extract=function c(N){let x=N.match(u);return x?x[0].trimLeft():""},e.parse=function F(N){return _(N).pragmas},e.parseWithComments=_,e.print=function w(N){let{comments:x="",pragmas:I={}}=N,P=(0,t().default)(x)||r().EOL,D=" *",m=Object.keys(I),C=m.map((d=>E(d,I[d]))).reduce(((d,v)=>d.concat(v)),[]).map((d=>`${D} ${d}${P}`)).join("");if(!x){if(0===m.length)return"";if(1===m.length&&!Array.isArray(I[m[0]])){let d=I[m[0]];return`/** ${E(m[0],d)[0]} */`}}let o=x.split(P).map((d=>`${D} ${d}`)).join(P)+P;return"/**"+P+(x?o:"")+(x&&m.length?D+P:"")+C+" */"},e.strip=function f(N){let x=N.match(u);return x&&x[0]?N.substring(x[0].length):N};var a=/\*\/$/,n=/^\/\*\*?/,u=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,i=/(^|\s+)\/\/([^\r\n]*)/g,l=/^(\r?\n)+/,p=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,y=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,h=/(\r?\n|^) *\* ?/g,g=[];function _(N){let x=(0,t().default)(N)||r().EOL;N=N.replace(n,"").replace(a,"").replace(h,"$1");let I="";for(;I!==N;)I=N,N=N.replace(p,`${x}$1 $2${x}`);N=N.replace(l,"").trimRight();let D,P=Object.create(null),$=N.replace(y,"").replace(l,"").trimRight();for(;D=y.exec(N);){let T=D[2].replace(i,"");"string"==typeof P[D[1]]||Array.isArray(P[D[1]])?P[D[1]]=g.concat(P[D[1]],T):P[D[1]]=T}return{comments:$,pragmas:P}}function E(N,x){return g.concat(x).map((I=>`@${N} ${I}`.trim()))}}}),ld=te({"src/language-js/utils/get-shebang.js"(e,r){ne(),r.exports=function t(s){if(!s.startsWith("#!"))return"";let a=s.indexOf("\n");return-1===a?s:s.slice(0,a)}}}),Co=te({"src/language-js/pragma.js"(e,r){ne();var{parseWithComments:t,strip:s,extract:a,print:n}=od(),{normalizeEndOfLine:u}=Jn(),i=ld();function l(h){let g=i(h);g&&(h=h.slice(g.length+1));let c=a(h),{pragmas:f,comments:F}=t(c);return{shebang:g,text:h,pragmas:f,comments:F}}r.exports={hasPragma:function p(h){let g=Object.keys(l(h).pragmas);return g.includes("prettier")||g.includes("format")},insertPragma:function y(h){let{shebang:g,text:c,pragmas:f,comments:F}=l(h),_=s(c),w=n({pragmas:Object.assign({format:""},f),comments:F.trimStart()});return(g?`${g}\n`:"")+u(w)+(_.startsWith("\n")?"\n":"\n\n")+_}}}}),cd=te({"src/language-js/utils/is-type-cast-comment.js"(e,r){ne();var t=Pt();r.exports=function s(a){return t(a)&&"*"===a.value[0]&&/@(?:type|satisfies)\b/.test(a.value)}}}),Eo=te({"src/language-js/comments.js"(e,r){ne();var{getLast:t,hasNewline:s,getNextNonSpaceNonCommentCharacterIndexWithStartIndex:a,getNextNonSpaceNonCommentCharacter:n,hasNewlineInRange:u,addLeadingComment:i,addTrailingComment:l,addDanglingComment:p,getNextNonSpaceNonCommentCharacterIndex:y,isNonEmptyArray:h}=Ue(),{getFunctionParameters:g,isPrettierIgnoreComment:c,isJsxNode:f,hasFlowShorthandAnnotationComment:F,hasFlowAnnotationComment:_,hasIgnoreComment:w,isCallLikeExpression:E,getCallArguments:N,isCallExpression:x,isMemberExpression:I,isObjectProperty:P,isLineComment:$,getComments:D,CommentCheckFlags:T,markerForIfWithoutBlockAndSameLineComment:m}=Ke(),{locStart:C,locEnd:o}=ut(),d=Pt(),v=cd();function k(De,A){let G=(De.body||De.properties).find((re=>{let{type:ye}=re;return"EmptyStatement"!==ye}));G?i(G,A):p(De,A)}function M(De,A){"BlockStatement"===De.type?k(De,A):i(De,A)}function R(De){let{comment:A,followingNode:G}=De;return!(!G||!v(A))&&(i(G,A),!0)}function q(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye,text:Ce}=De;if("IfStatement"!==re?.type||!ye)return!1;if(")"===n(Ce,A,o))return l(G,A),!0;if(G===re.consequent&&ye===re.alternate){if("BlockStatement"===G.type)l(G,A);else{let ve="SingleLine"===A.type||A.loc.start.line===A.loc.end.line,ze=A.loc.start.line===G.loc.start.line;ve&&ze?p(G,A,m):p(re,A)}return!0}return"BlockStatement"===ye.type?(k(ye,A),!0):"IfStatement"===ye.type?(M(ye.consequent,A),!0):re.consequent===ye&&(i(ye,A),!0)}function J(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye,text:Ce}=De;return!("WhileStatement"!==re?.type||!ye)&&(")"===n(Ce,A,o)?(l(G,A),!0):"BlockStatement"===ye.type?(k(ye,A),!0):re.body===ye&&(i(ye,A),!0))}function L(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye}=De;return!("TryStatement"!==re?.type&&"CatchClause"!==re?.type||!ye)&&("CatchClause"===re.type&&G?(l(G,A),!0):"BlockStatement"===ye.type?(k(ye,A),!0):"TryStatement"===ye.type?(M(ye.finalizer,A),!0):"CatchClause"===ye.type&&(M(ye.body,A),!0))}function Q(De){let{comment:A,enclosingNode:G,followingNode:re}=De;return!(!I(G)||"Identifier"!==re?.type)&&(i(G,A),!0)}function V(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye,text:Ce}=De,Be=G&&!u(Ce,o(G),C(A));return!(G&&Be||"ConditionalExpression"!==re?.type&&"TSConditionalType"!==re?.type||!ye)&&(i(ye,A),!0)}function j(De){let{comment:A,precedingNode:G,enclosingNode:re}=De;return!(!P(re)||!re.shorthand||re.key!==G||"AssignmentPattern"!==re.value.type)&&(l(re.value.left,A),!0)}var Y=new Set(["ClassDeclaration","ClassExpression","DeclareClass","DeclareInterface","InterfaceDeclaration","TSInterfaceDeclaration"]);function ie(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye}=De;if(Y.has(re?.type)){if(h(re.decorators)&&(!ye||"Decorator"!==ye.type))return l(t(re.decorators),A),!0;if(re.body&&ye===re.body)return k(re.body,A),!0;if(ye){if(re.superClass&&ye===re.superClass&&G&&(G===re.id||G===re.typeParameters))return l(G,A),!0;for(let Ce of["implements","extends","mixins"])if(re[Ce]&&ye===re[Ce][0])return!G||G!==re.id&&G!==re.typeParameters&&G!==re.superClass?p(re,A,Ce):l(G,A),!0}}return!1}var ee=new Set(["ClassMethod","ClassProperty","PropertyDefinition","TSAbstractPropertyDefinition","TSAbstractMethodDefinition","TSDeclareMethod","MethodDefinition","ClassAccessorProperty","AccessorProperty","TSAbstractAccessorProperty"]);function ce(De){let{comment:A,precedingNode:G,enclosingNode:re,text:ye}=De;return!!(re&&G&&"("===n(ye,A,o)&&("Property"===re.type||"TSDeclareMethod"===re.type||"TSAbstractMethodDefinition"===re.type)&&"Identifier"===G.type&&re.key===G&&":"!==n(ye,G,o)||"Decorator"===G?.type&&ee.has(re?.type))&&(l(G,A),!0)}var W=new Set(["FunctionDeclaration","FunctionExpression","ClassMethod","MethodDefinition","ObjectMethod"]);function K(De){let{comment:A,precedingNode:G,enclosingNode:re,text:ye}=De;return"("===n(ye,A,o)&&(!(!G||!W.has(re?.type))&&(l(G,A),!0))}function de(De){let{comment:A,enclosingNode:G,text:re}=De;if("ArrowFunctionExpression"!==G?.type)return!1;let ye=y(re,A,o);return!1!==ye&&"=>"===re.slice(ye,ye+2)&&(p(G,A),!0)}function ue(De){let{comment:A,enclosingNode:G,text:re}=De;return")"===n(re,A,o)&&(G&&(le(G)&&0===g(G).length||E(G)&&0===N(G).length)?(p(G,A),!0):("MethodDefinition"===G?.type||"TSAbstractMethodDefinition"===G?.type)&&0===g(G.value).length&&(p(G.value,A),!0))}function Fe(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye,text:Ce}=De;if("FunctionTypeParam"===G?.type&&"FunctionTypeAnnotation"===re?.type&&"FunctionTypeParam"!==ye?.type||("Identifier"===G?.type||"AssignmentPattern"===G?.type)&&re&&le(re)&&")"===n(Ce,A,o))return l(G,A),!0;if("FunctionDeclaration"===re?.type&&"BlockStatement"===ye?.type){let Be=(()=>{let ve=g(re);if(ve.length>0)return a(Ce,o(t(ve)));let ze=a(Ce,o(re.id));return!1!==ze&&a(Ce,ze+1)})();if(C(A)>Be)return k(ye,A),!0}return!1}function z(De){let{comment:A,enclosingNode:G}=De;return"LabeledStatement"===G?.type&&(i(G,A),!0)}function U(De){let{comment:A,enclosingNode:G}=De;return!("ContinueStatement"!==G?.type&&"BreakStatement"!==G?.type||G.label)&&(l(G,A),!0)}function Z(De){let{comment:A,precedingNode:G,enclosingNode:re}=De;return!!(x(re)&&G&&re.callee===G&&re.arguments.length>0)&&(i(re.arguments[0],A),!0)}function se(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye}=De;return"UnionTypeAnnotation"===re?.type||"TSUnionType"===re?.type?(c(A)&&(ye.prettierIgnore=!0,A.unignore=!0),!!G&&(l(G,A),!0)):(("UnionTypeAnnotation"===ye?.type||"TSUnionType"===ye?.type)&&c(A)&&(ye.types[0].prettierIgnore=!0,A.unignore=!0),!1)}function fe(De){let{comment:A,enclosingNode:G}=De;return!!P(G)&&(i(G,A),!0)}function ge(De){let{comment:A,enclosingNode:G,followingNode:re,ast:ye,isLastComment:Ce}=De;return ye&&ye.body&&0===ye.body.length?(Ce?p(ye,A):i(ye,A),!0):"Program"!==G?.type||0!==G?.body.length||h(G.directives)?"Program"===re?.type&&0===re?.body.length&&"ModuleExpression"===G?.type&&(p(re,A),!0):(Ce?p(G,A):i(G,A),!0)}function he(De){let{comment:A,enclosingNode:G}=De;return("ForInStatement"===G?.type||"ForOfStatement"===G?.type)&&(i(G,A),!0)}function we(De){let{comment:A,precedingNode:G,enclosingNode:re,text:ye}=De;return"ImportSpecifier"===re?.type||"ExportSpecifier"===re?.type?(i(re,A),!0):!(!("ImportSpecifier"===G?.type&&"ImportDeclaration"===re?.type)&&!("ExportSpecifier"===G?.type&&"ExportNamedDeclaration"===re?.type)||!s(ye,o(A)))&&(l(G,A),!0)}function ke(De){let{comment:A,enclosingNode:G}=De;return"AssignmentPattern"===G?.type&&(i(G,A),!0)}var Re=new Set(["VariableDeclarator","AssignmentExpression","TypeAlias","TSTypeAliasDeclaration"]),Ne=new Set(["ObjectExpression","ArrayExpression","TemplateLiteral","TaggedTemplateExpression","ObjectTypeAnnotation","TSTypeLiteral"]);function Pe(De){let{comment:A,enclosingNode:G,followingNode:re}=De;return!(!Re.has(G?.type)||!re||!Ne.has(re.type)&&!d(A))&&(i(re,A),!0)}function oe(De){let{comment:A,enclosingNode:G,followingNode:re,text:ye}=De;return!(re||"TSMethodSignature"!==G?.type&&"TSDeclareFunction"!==G?.type&&"TSAbstractMethodDefinition"!==G?.type||";"!==n(ye,A,o))&&(l(G,A),!0)}function H(De){let{comment:A,enclosingNode:G,followingNode:re}=De;if(c(A)&&"TSMappedType"===G?.type&&"TSTypeParameter"===re?.type&&re.constraint)return G.prettierIgnore=!0,A.unignore=!0,!0}function pe(De){let{comment:A,precedingNode:G,enclosingNode:re,followingNode:ye}=De;return"TSMappedType"===re?.type&&("TSTypeParameter"===ye?.type&&ye.name?(i(ye.name,A),!0):!("TSTypeParameter"!==G?.type||!G.constraint)&&(l(G.constraint,A),!0))}function X(De){let{comment:A,enclosingNode:G,followingNode:re}=De;return!(!G||"SwitchCase"!==G.type||G.test||!re||re!==G.consequent[0])&&("BlockStatement"===re.type&&$(A)?k(re,A):p(G,A),!0)}function le(De){return"ArrowFunctionExpression"===De.type||"FunctionExpression"===De.type||"FunctionDeclaration"===De.type||"ObjectMethod"===De.type||"ClassMethod"===De.type||"TSDeclareFunction"===De.type||"TSCallSignatureDeclaration"===De.type||"TSConstructSignatureDeclaration"===De.type||"TSMethodSignature"===De.type||"TSConstructorType"===De.type||"TSFunctionType"===De.type||"TSDeclareMethod"===De.type}r.exports={handleOwnLineComment:function S(De){return[H,Fe,Q,q,J,L,ie,he,se,ge,we,ke,ce,z,U].some((A=>A(De)))},handleEndOfLineComment:function b(De){return[R,Fe,V,we,q,J,L,ie,z,Z,fe,ge,Pe,U,X].some((A=>A(De)))},handleRemainingComment:function B(De){return[H,q,J,j,ue,ce,ge,de,K,pe,U,oe].some((A=>A(De)))},getCommentChildNodes:function Ae(De,A){if(("typescript"===A.parser||"flow"===A.parser||"acorn"===A.parser||"espree"===A.parser||"meriyah"===A.parser||"__babel_estree"===A.parser)&&"MethodDefinition"===De.type&&De.value&&"FunctionExpression"===De.value.type&&0===g(De.value).length&&!De.value.returnType&&!h(De.value.typeParameters)&&De.value.body)return[...De.decorators||[],De.key,De.value.body]},willPrintOwnComments:function Ee(De){let A=De.getValue(),G=De.getParentNode();return(A&&(f(A)||F(A)||x(G)&&(_(D(ye=A,T.Leading))||_(D(ye,T.Trailing))))||G&&("JSXSpreadAttribute"===G.type||"JSXSpreadChild"===G.type||"UnionTypeAnnotation"===G.type||"TSUnionType"===G.type||("ClassDeclaration"===G.type||"ClassExpression"===G.type)&&G.superClass===A))&&(!w(De)||"UnionTypeAnnotation"===G.type||"TSUnionType"===G.type);var ye}}}}),qt=te({"src/language-js/needs-parens.js"(e,r){ne();var t=lt(),s=Kn(),{getFunctionParameters:a,getLeftSidePathName:n,hasFlowShorthandAnnotationComment:u,hasNakedLeftSide:i,hasNode:l,isBitwiseOperator:p,startsWithNoLookaheadToken:y,shouldFlatten:h,getPrecedence:g,isCallExpression:c,isMemberExpression:f,isObjectProperty:F,isTSTypeExpression:_}=Ke();function w(D,T){let m=D.getParentNode();if(!m)return!1;let C=D.getName(),o=D.getNode();if(T.__isInHtmlInterpolation&&!T.bracketSpacing&&function I(D){if("ObjectExpression"===D.type)return!0;return!1}(o)&&P(D))return!0;if(function E(D){return"BlockStatement"===D.type||"BreakStatement"===D.type||"ClassBody"===D.type||"ClassDeclaration"===D.type||"ClassMethod"===D.type||"ClassProperty"===D.type||"PropertyDefinition"===D.type||"ClassPrivateProperty"===D.type||"ContinueStatement"===D.type||"DebuggerStatement"===D.type||"DeclareClass"===D.type||"DeclareExportAllDeclaration"===D.type||"DeclareExportDeclaration"===D.type||"DeclareFunction"===D.type||"DeclareInterface"===D.type||"DeclareModule"===D.type||"DeclareModuleExports"===D.type||"DeclareVariable"===D.type||"DoWhileStatement"===D.type||"EnumDeclaration"===D.type||"ExportAllDeclaration"===D.type||"ExportDefaultDeclaration"===D.type||"ExportNamedDeclaration"===D.type||"ExpressionStatement"===D.type||"ForInStatement"===D.type||"ForOfStatement"===D.type||"ForStatement"===D.type||"FunctionDeclaration"===D.type||"IfStatement"===D.type||"ImportDeclaration"===D.type||"InterfaceDeclaration"===D.type||"LabeledStatement"===D.type||"MethodDefinition"===D.type||"ReturnStatement"===D.type||"SwitchStatement"===D.type||"ThrowStatement"===D.type||"TryStatement"===D.type||"TSDeclareFunction"===D.type||"TSEnumDeclaration"===D.type||"TSImportEqualsDeclaration"===D.type||"TSInterfaceDeclaration"===D.type||"TSModuleDeclaration"===D.type||"TSNamespaceExportDeclaration"===D.type||"TypeAlias"===D.type||"VariableDeclaration"===D.type||"WhileStatement"===D.type||"WithStatement"===D.type}(o))return!1;if("flow"!==T.parser&&u(D.getValue()))return!0;if("Identifier"===o.type){if(o.extra&&o.extra.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(o.name)||"left"===C&&("async"===o.name&&!m.await||"let"===o.name)&&"ForOfStatement"===m.type)return!0;if("let"===o.name){var d;let S=null===(d=D.findAncestor((b=>"ForOfStatement"===b.type)))||void 0===d?void 0:d.left;if(S&&y(S,(b=>b===o)))return!0}if("object"===C&&"let"===o.name&&"MemberExpression"===m.type&&m.computed&&!m.optional){let S=D.findAncestor((B=>"ExpressionStatement"===B.type||"ForStatement"===B.type||"ForInStatement"===B.type)),b=S?"ExpressionStatement"===S.type?S.expression:"ForStatement"===S.type?S.init:S.left:void 0;if(b&&y(b,(B=>B===o)))return!0}return!1}if("ObjectExpression"===o.type||"FunctionExpression"===o.type||"ClassExpression"===o.type||"DoExpression"===o.type){var v;let S=null===(v=D.findAncestor((b=>"ExpressionStatement"===b.type)))||void 0===v?void 0:v.expression;if(S&&y(S,(b=>b===o)))return!0}switch(m.type){case"ParenthesizedExpression":return!1;case"ClassDeclaration":case"ClassExpression":if("superClass"===C&&("ArrowFunctionExpression"===o.type||"AssignmentExpression"===o.type||"AwaitExpression"===o.type||"BinaryExpression"===o.type||"ConditionalExpression"===o.type||"LogicalExpression"===o.type||"NewExpression"===o.type||"ObjectExpression"===o.type||"SequenceExpression"===o.type||"TaggedTemplateExpression"===o.type||"UnaryExpression"===o.type||"UpdateExpression"===o.type||"YieldExpression"===o.type||"TSNonNullExpression"===o.type))return!0;break;case"ExportDefaultDeclaration":return $(D,T)||"SequenceExpression"===o.type;case"Decorator":if("expression"===C){if(f(o)&&o.computed)return!0;let S=!1,b=!1,B=o;for(;B;)switch(B.type){case"MemberExpression":b=!0,B=B.object;break;case"CallExpression":if(b||S)return"typescript"!==T.parser;S=!0,B=B.callee;break;case"Identifier":return!1;case"TaggedTemplateExpression":return"typescript"!==T.parser;default:return!0}return!0}break;case"ArrowFunctionExpression":if("body"===C&&"SequenceExpression"!==o.type&&y(o,(S=>"ObjectExpression"===S.type)))return!0}switch(o.type){case"UpdateExpression":if("UnaryExpression"===m.type)return o.prefix&&("++"===o.operator&&"+"===m.operator||"--"===o.operator&&"-"===m.operator);case"UnaryExpression":switch(m.type){case"UnaryExpression":return o.operator===m.operator&&("+"===o.operator||"-"===o.operator);case"BindExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===C;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===C;case"BinaryExpression":return"left"===C&&"**"===m.operator;default:return!1}case"BinaryExpression":if("UpdateExpression"===m.type||"in"===o.operator&&function N(D){let T=0,m=D.getValue();for(;m;){let C=D.getParentNode(T++);if(C&&"ForStatement"===C.type&&C.init===m)return!0;m=C}return!1}(D))return!0;if("|>"===o.operator&&o.extra&&o.extra.parenthesized){let S=D.getParentNode(1);if("BinaryExpression"===S.type&&"|>"===S.operator)return!0}case"TSTypeAssertion":case"TSAsExpression":case"TSSatisfiesExpression":case"LogicalExpression":switch(m.type){case"TSSatisfiesExpression":case"TSAsExpression":return!_(o);case"ConditionalExpression":return _(o);case"CallExpression":case"NewExpression":case"OptionalCallExpression":return"callee"===C;case"ClassExpression":case"ClassDeclaration":return"superClass"===C;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"SpreadProperty":case"BindExpression":case"AwaitExpression":case"TSNonNullExpression":case"UpdateExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===C;case"AssignmentExpression":case"AssignmentPattern":return"left"===C&&("TSTypeAssertion"===o.type||_(o));case"LogicalExpression":if("LogicalExpression"===o.type)return m.operator!==o.operator;case"BinaryExpression":{let{operator:S,type:b}=o;if(!S&&"TSTypeAssertion"!==b)return!0;let B=g(S),k=m.operator,M=g(k);return M>B||"right"===C&&M===B||M===B&&!h(k,S)||(M<B&&"%"===S?"+"===k||"-"===k:!!p(k))}default:return!1}case"SequenceExpression":switch(m.type){case"ReturnStatement":case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==C;case"ArrowFunctionExpression":return"body"!==C;default:return!0}case"YieldExpression":if("UnaryExpression"===m.type||"AwaitExpression"===m.type||_(m)||"TSNonNullExpression"===m.type)return!0;case"AwaitExpression":switch(m.type){case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"SpreadElement":case"SpreadProperty":case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"BindExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===C;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===C;case"ConditionalExpression":return"test"===C;case"BinaryExpression":return!(!o.argument&&"|>"===m.operator);default:return!1}case"TSConditionalType":case"TSFunctionType":case"TSConstructorType":if("extendsType"===C&&"TSConditionalType"===m.type){if("TSConditionalType"===o.type)return!0;let{typeAnnotation:S}=o.returnType||o.typeAnnotation;if("TSTypePredicate"===S.type&&S.typeAnnotation&&(S=S.typeAnnotation.typeAnnotation),"TSInferType"===S.type&&S.typeParameter.constraint)return!0}if("checkType"===C&&"TSConditionalType"===m.type)return!0;case"TSUnionType":case"TSIntersectionType":if(("TSUnionType"===m.type||"TSIntersectionType"===m.type)&&m.types.length>1&&(!o.types||o.types.length>1))return!0;case"TSInferType":if("TSInferType"===o.type&&"TSRestType"===m.type)return!1;case"TSTypeOperator":return"TSArrayType"===m.type||"TSOptionalType"===m.type||"TSRestType"===m.type||"objectType"===C&&"TSIndexedAccessType"===m.type||"TSTypeOperator"===m.type||"TSTypeAnnotation"===m.type&&D.getParentNode(1).type.startsWith("TSJSDoc");case"TSTypeQuery":return"objectType"===C&&"TSIndexedAccessType"===m.type||"elementType"===C&&"TSArrayType"===m.type;case"TypeofTypeAnnotation":return"objectType"===C&&("IndexedAccessType"===m.type||"OptionalIndexedAccessType"===m.type)||"elementType"===C&&"ArrayTypeAnnotation"===m.type;case"ArrayTypeAnnotation":return"NullableTypeAnnotation"===m.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return"ArrayTypeAnnotation"===m.type||"NullableTypeAnnotation"===m.type||"IntersectionTypeAnnotation"===m.type||"UnionTypeAnnotation"===m.type||"objectType"===C&&("IndexedAccessType"===m.type||"OptionalIndexedAccessType"===m.type);case"NullableTypeAnnotation":return"ArrayTypeAnnotation"===m.type||"objectType"===C&&("IndexedAccessType"===m.type||"OptionalIndexedAccessType"===m.type);case"FunctionTypeAnnotation":{let S="NullableTypeAnnotation"===m.type?D.getParentNode(1):m;return"UnionTypeAnnotation"===S.type||"IntersectionTypeAnnotation"===S.type||"ArrayTypeAnnotation"===S.type||"objectType"===C&&("IndexedAccessType"===S.type||"OptionalIndexedAccessType"===S.type)||"NullableTypeAnnotation"===S.type||"FunctionTypeParam"===m.type&&null===m.name&&a(o).some((b=>b.typeAnnotation&&"NullableTypeAnnotation"===b.typeAnnotation.type))}case"OptionalIndexedAccessType":return"objectType"===C&&"IndexedAccessType"===m.type;case"StringLiteral":case"NumericLiteral":case"Literal":if("string"==typeof o.value&&"ExpressionStatement"===m.type&&!m.directive){let S=D.getParentNode(1);return"Program"===S.type||"BlockStatement"===S.type}return"object"===C&&"MemberExpression"===m.type&&"number"==typeof o.value;case"AssignmentExpression":{let S=D.getParentNode(1);return"body"===C&&"ArrowFunctionExpression"===m.type||("key"!==C||"ClassProperty"!==m.type&&"PropertyDefinition"!==m.type||!m.computed)&&("init"!==C&&"update"!==C||"ForStatement"!==m.type)&&("ExpressionStatement"===m.type?"ObjectPattern"===o.left.type:!("key"===C&&"TSPropertySignature"===m.type||"AssignmentExpression"===m.type||"SequenceExpression"===m.type&&S&&"ForStatement"===S.type&&(S.init===m||S.update===m)||"value"===C&&"Property"===m.type&&S&&"ObjectPattern"===S.type&&S.properties.includes(m)||"NGChainedExpression"===m.type))}case"ConditionalExpression":switch(m.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"SpreadProperty":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":return!0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===C;case"ConditionalExpression":return"test"===C;case"MemberExpression":case"OptionalMemberExpression":return"object"===C;default:return!1}case"FunctionExpression":switch(m.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===C;case"TaggedTemplateExpression":return!0;default:return!1}case"ArrowFunctionExpression":switch(m.type){case"BinaryExpression":return"|>"!==m.operator||o.extra&&o.extra.parenthesized;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===C;case"MemberExpression":case"OptionalMemberExpression":return"object"===C;case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"AwaitExpression":case"TSTypeAssertion":return!0;case"ConditionalExpression":return"test"===C;default:return!1}case"ClassExpression":return!!s(o.decorators)||"NewExpression"===m.type&&"callee"===C;case"OptionalMemberExpression":case"OptionalCallExpression":{let S=D.getParentNode(1);if("object"===C&&"MemberExpression"===m.type||"callee"===C&&("CallExpression"===m.type||"NewExpression"===m.type)||"TSNonNullExpression"===m.type&&"MemberExpression"===S.type&&S.object===m)return!0}case"CallExpression":case"MemberExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":if("callee"===C&&("BindExpression"===m.type||"NewExpression"===m.type)){let S=o;for(;S;)switch(S.type){case"CallExpression":case"OptionalCallExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":S=S.object;break;case"TaggedTemplateExpression":S=S.tag;break;case"TSNonNullExpression":S=S.expression;break;default:return!1}}return!1;case"BindExpression":return"callee"===C&&("BindExpression"===m.type||"NewExpression"===m.type)||"object"===C&&f(m);case"NGPipeExpression":return!("NGRoot"===m.type||"NGMicrosyntaxExpression"===m.type||"ObjectProperty"===m.type&&(!o.extra||!o.extra.parenthesized)||"ArrayExpression"===m.type||c(m)&&m.arguments[C]===o||"right"===C&&"NGPipeExpression"===m.type||"property"===C&&"MemberExpression"===m.type||"AssignmentExpression"===m.type);case"JSXFragment":case"JSXElement":return"callee"===C||"left"===C&&"BinaryExpression"===m.type&&"<"===m.operator||"ArrayExpression"!==m.type&&"ArrowFunctionExpression"!==m.type&&"AssignmentExpression"!==m.type&&"AssignmentPattern"!==m.type&&"BinaryExpression"!==m.type&&"NewExpression"!==m.type&&"ConditionalExpression"!==m.type&&"ExpressionStatement"!==m.type&&"JsExpressionRoot"!==m.type&&"JSXAttribute"!==m.type&&"JSXElement"!==m.type&&"JSXExpressionContainer"!==m.type&&"JSXFragment"!==m.type&&"LogicalExpression"!==m.type&&!c(m)&&!F(m)&&"ReturnStatement"!==m.type&&"ThrowStatement"!==m.type&&"TypeCastExpression"!==m.type&&"VariableDeclarator"!==m.type&&"YieldExpression"!==m.type;case"TypeAnnotation":return"returnType"===C&&"ArrowFunctionExpression"===m.type&&function x(D){return l(D,(T=>"ObjectTypeAnnotation"===T.type&&l(T,(m=>"FunctionTypeAnnotation"===m.type||void 0))||void 0))}(o)}return!1}function P(D){let T=D.getValue(),m=D.getParentNode(),C=D.getName();switch(m.type){case"NGPipeExpression":if("number"==typeof C&&m.arguments[C]===T&&m.arguments.length-1===C)return D.callParent(P);break;case"ObjectProperty":if("value"===C){let o=D.getParentNode(1);return t(o.properties)===m}break;case"BinaryExpression":case"LogicalExpression":if("right"===C)return D.callParent(P);break;case"ConditionalExpression":if("alternate"===C)return D.callParent(P);break;case"UnaryExpression":if(m.prefix)return D.callParent(P)}return!1}function $(D,T){let m=D.getValue(),C=D.getParentNode();return"FunctionExpression"===m.type||"ClassExpression"===m.type?"ExportDefaultDeclaration"===C.type||!w(D,T):!(!i(m)||"ExportDefaultDeclaration"!==C.type&&w(D,T))&&D.call((o=>$(o,T)),...n(D,m))}r.exports=w}}),Fo=te({"src/language-js/print-preprocess.js"(e,r){ne(),r.exports=function t(s,a){switch(a.parser){case"json":case"json5":case"json-stringify":case"__js_expression":case"__vue_expression":case"__vue_ts_expression":return Object.assign(Object.assign({},s),{},{type:a.parser.startsWith("__")?"JsExpressionRoot":"JsonRoot",node:s,comments:[],rootMarker:a.rootMarker});default:return s}}}}),pd=te({"src/language-js/print/html-binding.js"(e,r){ne();var{builders:{join:t,line:s,group:a,softline:n,indent:u}}=qe();r.exports={isVueEventBindingExpression:function l(p){switch(p.type){case"MemberExpression":switch(p.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return l(p.object)}return!1;case"Identifier":return!0;default:return!1}},printHtmlBinding:function i(p,y,h){let g=p.getValue();if(y.__onHtmlBindingRoot&&null===p.getName()&&y.__onHtmlBindingRoot(g,y),"File"===g.type){if(y.__isVueForBindingLeft)return p.call((c=>{let f=t([",",s],c.map(h,"params")),{params:F}=c.getValue();return 1===F.length?f:["(",u([n,a(f)]),n,")"]}),"program","body",0);if(y.__isVueBindings)return p.call((c=>t([",",s],c.map(h,"params"))),"program","body",0)}}}}}),ru=te({"src/language-js/print/binaryish.js"(e,r){ne();var{printComments:t}=et(),{getLast:s}=Ue(),{builders:{join:a,line:n,softline:u,group:i,indent:l,align:p,indentIfBreak:y},utils:{cleanDoc:h,getDocParts:g,isConcat:c}}=qe(),{hasLeadingOwnLineComment:f,isBinaryish:F,isJsxNode:_,shouldFlatten:w,hasComment:E,CommentCheckFlags:N,isCallExpression:x,isMemberExpression:I,isObjectProperty:P,isEnabledHackPipeline:$}=Ke(),D=0;function m(o,d,v,S,b){let B=o.getValue();if(!F(B))return[i(d())];let k=[];w(B.operator,B.left.operator)?k=o.call((Y=>m(Y,d,v,!0,b)),"left"):k.push(i(d("left")));let L,M=C(B),R=("|>"===B.operator||"NGPipeExpression"===B.type||"|"===B.operator&&"__vue_expression"===v.parser)&&!f(v.originalText,B.right),q="NGPipeExpression"===B.type?"|":B.operator,J="NGPipeExpression"===B.type&&B.arguments.length>0?i(l([n,": ",a([n,": "],o.map(d,"arguments").map((Y=>p(2,i(Y)))))])):"";if(M)L=[q," ",d("right"),J];else{let ie=$(v)&&"|>"===q?o.call((ee=>m(ee,d,v,!0,b)),"right"):d("right");L=[R?n:"",q,R?" ":n,ie,J]}let Q=o.getParentNode(),V=E(B.left,N.Trailing|N.Line),j=V||!(b&&"LogicalExpression"===B.type)&&Q.type!==B.type&&B.left.type!==B.type&&B.right.type!==B.type;if(k.push(R?"":" ",j?i(L,{shouldBreak:V}):L),S&&E(B)){let Y=h(t(o,k,v));return c(Y)||"fill"===Y.type?g(Y):[Y]}return k}function C(o){return"LogicalExpression"===o.type&&!!("ObjectExpression"===o.right.type&&o.right.properties.length>0||"ArrayExpression"===o.right.type&&o.right.elements.length>0||_(o.right))}r.exports={printBinaryishExpression:function T(o,d,v){let S=o.getValue(),b=o.getParentNode(),B=o.getParentNode(1),k=S!==b.body&&("IfStatement"===b.type||"WhileStatement"===b.type||"SwitchStatement"===b.type||"DoWhileStatement"===b.type),M=$(d)&&"|>"===S.operator,R=m(o,v,d,!1,k);if(k)return R;if(M)return i(R);if(x(b)&&b.callee===S||"UnaryExpression"===b.type||I(b)&&!b.computed)return i([l([u,...R]),u]);let q="ReturnStatement"===b.type||"ThrowStatement"===b.type||"JSXExpressionContainer"===b.type&&"JSXAttribute"===B.type||"|"!==S.operator&&"JsExpressionRoot"===b.type||"NGPipeExpression"!==S.type&&("NGRoot"===b.type&&"__ng_binding"===d.parser||"NGMicrosyntaxExpression"===b.type&&"NGMicrosyntax"===B.type&&1===B.body.length)||S===b.body&&"ArrowFunctionExpression"===b.type||S!==b.body&&"ForStatement"===b.type||"ConditionalExpression"===b.type&&"ReturnStatement"!==B.type&&"ThrowStatement"!==B.type&&!x(B)||"TemplateLiteral"===b.type,J="AssignmentExpression"===b.type||"VariableDeclarator"===b.type||"ClassProperty"===b.type||"PropertyDefinition"===b.type||"TSAbstractPropertyDefinition"===b.type||"ClassPrivateProperty"===b.type||P(b),L=F(S.left)&&w(S.operator,S.left.operator);if(q||C(S)&&!L||!C(S)&&J)return i(R);if(0===R.length)return"";let Q=_(S.right),V=R.findIndex((W=>"string"!=typeof W&&!Array.isArray(W)&&"group"===W.type)),j=R.slice(0,-1===V?1:V+1),Y=R.slice(j.length,Q?-1:void 0),ie=Symbol("logicalChain-"+ ++D),ee=i([...j,l(Y)],{id:ie});if(!Q)return ee;let ce=s(R);return i([ee,y(ce,{groupId:ie})])},shouldInlineLogicalExpression:C}}}),fd=te({"src/language-js/print/angular.js"(e,r){ne();var{builders:{join:t,line:s,group:a}}=qe(),{hasNode:n,hasComment:u,getComments:i}=Ke(),{printBinaryishExpression:l}=ru();function y(g,c,f){return"NGMicrosyntaxKeyedExpression"===g.type&&"of"===g.key.name&&1===c&&"NGMicrosyntaxLet"===f.body[0].type&&null===f.body[0].value}r.exports={printAngular:function p(g,c,f){let F=g.getValue();if(F.type.startsWith("NG"))switch(F.type){case"NGRoot":return[f("node"),u(F.node)?" //"+i(F.node)[0].value.trimEnd():""];case"NGPipeExpression":return l(g,c,f);case"NGChainedExpression":return a(t([";",s],g.map((_=>function h(g){return n(g.getValue(),(c=>{switch(c.type){case void 0:return!1;case"CallExpression":case"OptionalCallExpression":case"AssignmentExpression":return!0}}))}(_)?f():["(",f(),")"]),"expressions")));case"NGEmptyExpression":return"";case"NGQuotedExpression":return[F.prefix,": ",F.value.trim()];case"NGMicrosyntax":return g.map(((_,w)=>[0===w?"":y(_.getValue(),w,F)?" ":[";",s],f()]),"body");case"NGMicrosyntaxKey":return/^[$_a-z][\w$]*(?:-[$_a-z][\w$])*$/i.test(F.name)?F.name:JSON.stringify(F.name);case"NGMicrosyntaxExpression":return[f("expression"),null===F.alias?"":[" as ",f("alias")]];case"NGMicrosyntaxKeyedExpression":{let _=g.getName(),w=g.getParentNode(),E=y(F,_,w)||(1===_&&("then"===F.key.name||"else"===F.key.name)||2===_&&"else"===F.key.name&&"NGMicrosyntaxKeyedExpression"===w.body[_-1].type&&"then"===w.body[_-1].key.name)&&"NGMicrosyntaxExpression"===w.body[0].type;return[f("key"),E?" ":": ",f("expression")]}case"NGMicrosyntaxLet":return["let ",f("key"),null===F.value?"":[" = ",f("value")]];case"NGMicrosyntaxAs":return[f("key")," as ",f("alias")];default:throw new Error(`Unknown Angular node type: ${JSON.stringify(F.type)}.`)}}}}}),Dd=te({"src/language-js/print/jsx.js"(e,r){ne();var{printComments:t,printDanglingComments:s,printCommentsSeparately:a}=et(),{builders:{line:n,hardline:u,softline:i,group:l,indent:p,conditionalGroup:y,fill:h,ifBreak:g,lineSuffixBoundary:c,join:f},utils:{willBreak:F}}=qe(),{getLast:_,getPreferredQuote:w}=Ue(),{isJsxNode:E,rawText:N,isCallExpression:x,isStringLiteral:I,isBinaryish:P,hasComment:$,CommentCheckFlags:D,hasNodeIgnoreComment:T}=Ke(),m=qt(),{willPrintOwnComments:C}=Eo(),o=U=>""===U||U===n||U===u||U===i;function d(U,Z,se){let fe=U.getValue();if("JSXElement"===fe.type&&function de(U){if(0===U.children.length)return!0;if(U.children.length>1)return!1;let Z=U.children[0];return"JSXText"===Z.type&&!ue(Z)}(fe))return[se("openingElement"),se("closingElement")];let ge="JSXElement"===fe.type?se("openingElement"):se("openingFragment"),he="JSXElement"===fe.type?se("closingElement"):se("closingFragment");if(1===fe.children.length&&"JSXExpressionContainer"===fe.children[0].type&&("TemplateLiteral"===fe.children[0].expression.type||"TaggedTemplateExpression"===fe.children[0].expression.type))return[ge,...U.map(se,"children"),he];fe.children=fe.children.map((A=>function Fe(U){return"JSXExpressionContainer"===U.type&&I(U.expression)&&" "===U.expression.value&&!$(U.expression)}(A)?{type:"JSXText",value:" ",raw:" "}:A));let we=fe.children.some(E),ke=fe.children.filter((A=>"JSXExpressionContainer"===A.type)).length>1,Re="JSXElement"===fe.type&&fe.openingElement.attributes.length>1,Ne=F(ge)||we||Re||ke,Pe="mdx"===U.getParentNode().rootMarker,oe=Z.singleQuote?"{' '}":'{" "}',H=Pe?" ":g([oe,i]," "),X=function v(U,Z,se,fe,ge){let he=[];return U.each(((we,ke,Re)=>{let Ne=we.getValue();if("JSXText"===Ne.type){let Pe=N(Ne);if(ue(Ne)){let H,oe=Pe.split(ce);if(""===oe[0]){if(he.push(""),oe.shift(),/\n/.test(oe[0])){let pe=Re[ke+1];he.push(b(ge,oe[1],Ne,pe))}else he.push(fe);oe.shift()}if(""===_(oe)&&(oe.pop(),H=oe.pop()),0===oe.length)return;for(let[pe,X]of oe.entries())pe%2==1?he.push(n):he.push(X);if(void 0!==H)if(/\n/.test(H)){let pe=Re[ke+1];he.push(b(ge,_(he),Ne,pe))}else he.push(fe);else{let pe=Re[ke+1];he.push(S(ge,_(he),Ne,pe))}}else/\n/.test(Pe)?Pe.match(/\n/g).length>1&&he.push("",u):he.push("",fe)}else{let Pe=se();he.push(Pe);let oe=Re[ke+1];if(oe&&ue(oe)){let pe=K(N(oe)).split(ce)[0];he.push(S(ge,pe,Ne,oe))}else he.push(u)}}),"children"),he}(U,0,se,H,fe.openingElement&&fe.openingElement.name&&"fbt"===fe.openingElement.name.name),le=fe.children.some((A=>ue(A)));for(let A=X.length-2;A>=0;A--){let G=""===X[A]&&""===X[A+1],re=X[A]===u&&""===X[A+1]&&X[A+2]===u,ye=(X[A]===i||X[A]===u)&&""===X[A+1]&&X[A+2]===H,Ce=X[A]===H&&""===X[A+1]&&(X[A+2]===i||X[A+2]===u),Be=X[A]===H&&""===X[A+1]&&X[A+2]===H,ve=X[A]===i&&""===X[A+1]&&X[A+2]===u||X[A]===u&&""===X[A+1]&&X[A+2]===i;re&&le||G||ye||Be||ve?X.splice(A,2):Ce&&X.splice(A+1,2)}for(;X.length>0&&o(_(X));)X.pop();for(;X.length>1&&o(X[0])&&o(X[1]);)X.shift(),X.shift();let Ae=[];for(let[A,G]of X.entries()){if(G===H){if(1===A&&""===X[A-1]){if(2===X.length){Ae.push(oe);continue}Ae.push([oe,u]);continue}if(A===X.length-1){Ae.push(oe);continue}if(""===X[A-1]&&X[A-2]===u){Ae.push(oe);continue}}Ae.push(G),F(G)&&(Ne=!0)}let Ee=le?h(Ae):l(Ae,{shouldBreak:!0});if(Pe)return Ee;let De=l([ge,p([u,Ee]),u,he]);return Ne?De:y([l([ge,...X,he]),De])}function S(U,Z,se,fe){return U?"":"JSXElement"===se.type&&!se.closingElement||fe&&"JSXElement"===fe.type&&!fe.closingElement?1===Z.length?i:u:i}function b(U,Z,se,fe){return U?u:1===Z.length?"JSXElement"===se.type&&!se.closingElement||fe&&"JSXElement"===fe.type&&!fe.closingElement?u:i:u}function q(U,Z,se){return U.selfClosing?[n,"/>"]:function J(U,Z,se){let fe=U.attributes.length>0&&$(_(U.attributes),D.Trailing);return 0===U.attributes.length&&!se||(Z.bracketSameLine||Z.jsxBracketSameLine)&&(!se||U.attributes.length>0)&&!fe}(U,Z,se)?[">"]:[i,">"]}function V(U,Z,se){return function B(U,Z,se){let fe=U.getParentNode();if(!fe||{ArrayExpression:!0,JSXAttribute:!0,JSXElement:!0,JSXExpressionContainer:!0,JSXFragment:!0,ExpressionStatement:!0,CallExpression:!0,OptionalCallExpression:!0,ConditionalExpression:!0,JsExpressionRoot:!0}[fe.type])return Z;let he=U.match(void 0,(ke=>"ArrowFunctionExpression"===ke.type),x,(ke=>"JSXExpressionContainer"===ke.type)),we=m(U,se);return l([we?"":g("("),p([i,Z]),i,we?"":g(")")],{shouldBreak:he})}(U,t(U,d(U,Z,se),Z),Z)}function Y(U,Z,se){let fe=U.getValue();return["{",U.call((ge=>{let he=["...",se()],we=ge.getValue();return $(we)&&C(ge)?[p([i,t(ge,he,Z)]),i]:he}),"JSXSpreadAttribute"===fe.type?"argument":"expression"),"}"]}var ce=new RegExp("([ \n\r\t]+)"),W=new RegExp("[^ \n\r\t]"),K=U=>U.replace(new RegExp("(?:^"+ce.source+"|"+ce.source+"$)"),"");function ue(U){return"JSXText"===U.type&&(W.test(N(U))||!/\n/.test(N(U)))}r.exports={hasJsxIgnoreComment:function z(U){let Z=U.getValue(),se=U.getParentNode();if(!(se&&Z&&E(Z)&&E(se)))return!1;let ge=null;for(let he=se.children.indexOf(Z);he>0;he--){let we=se.children[he-1];if("JSXText"!==we.type||ue(we)){ge=we;break}}return ge&&"JSXExpressionContainer"===ge.type&&"JSXEmptyExpression"===ge.expression.type&&T(ge.expression)},printJsx:function ie(U,Z,se){let fe=U.getValue();if(fe.type.startsWith("JSX"))switch(fe.type){case"JSXAttribute":return function k(U,Z,se){let fe=U.getValue(),ge=[];if(ge.push(se("name")),fe.value){let he;if(I(fe.value)){let ke=N(fe.value).slice(1,-1).replace(/&apos;/g,"'").replace(/&quot;/g,'"'),{escaped:Re,quote:Ne,regex:Pe}=w(ke,Z.jsxSingleQuote?"'":'"');ke=ke.replace(Pe,Re);let{leading:oe,trailing:H}=U.call((()=>a(U,Z)),"value");he=[oe,Ne,ke,Ne,H]}else he=se("value");ge.push("=",he)}return ge}(U,Z,se);case"JSXIdentifier":return String(fe.name);case"JSXNamespacedName":return f(":",[se("namespace"),se("name")]);case"JSXMemberExpression":return f(".",[se("object"),se("property")]);case"JSXSpreadAttribute":case"JSXSpreadChild":return Y(U,Z,se);case"JSXExpressionContainer":return function M(U,Z,se){let fe=U.getValue(),ge=(he,we)=>"JSXEmptyExpression"===he.type||!$(he)&&("ArrayExpression"===he.type||"ObjectExpression"===he.type||"ArrowFunctionExpression"===he.type||"AwaitExpression"===he.type&&(ge(he.argument,he)||"JSXElement"===he.argument.type)||x(he)||"FunctionExpression"===he.type||"TemplateLiteral"===he.type||"TaggedTemplateExpression"===he.type||"DoExpression"===he.type||E(we)&&("ConditionalExpression"===he.type||P(he)));return ge(fe.expression,U.getParentNode(0))?l(["{",se("expression"),c,"}"]):l(["{",p([i,se("expression")]),i,c,"}"])}(U,0,se);case"JSXFragment":case"JSXElement":return V(U,Z,se);case"JSXOpeningElement":return function R(U,Z,se){let fe=U.getValue(),ge=fe.name&&$(fe.name)||fe.typeParameters&&$(fe.typeParameters);if(fe.selfClosing&&0===fe.attributes.length&&!ge)return["<",se("name"),se("typeParameters")," />"];if(fe.attributes&&1===fe.attributes.length&&fe.attributes[0].value&&I(fe.attributes[0].value)&&!fe.attributes[0].value.value.includes("\n")&&!ge&&!$(fe.attributes[0]))return l(["<",se("name"),se("typeParameters")," ",...U.map(se,"attributes"),fe.selfClosing?" />":">"]);let he=fe.attributes&&fe.attributes.some((ke=>ke.value&&I(ke.value)&&ke.value.value.includes("\n"))),we=Z.singleAttributePerLine&&fe.attributes.length>1?u:n;return l(["<",se("name"),se("typeParameters"),p(U.map((()=>[we,se()]),"attributes")),...q(fe,Z,ge)],{shouldBreak:he})}(U,Z,se);case"JSXClosingElement":return function L(U,Z,se){let fe=U.getValue(),ge=[];ge.push("</");let he=se("name");return $(fe.name,D.Leading|D.Line)?ge.push(p([u,he]),u):$(fe.name,D.Leading|D.Block)?ge.push(" ",he):ge.push(he),ge.push(">"),ge}(U,0,se);case"JSXOpeningFragment":case"JSXClosingFragment":return function Q(U,Z){let se=U.getValue(),fe=$(se),ge=$(se,D.Line),he="JSXOpeningFragment"===se.type;return[he?"<":"</",p([ge?u:fe&&!he?" ":"",s(U,Z,!0)]),ge?u:"",">"]}(U,Z);case"JSXEmptyExpression":return function j(U,Z){let se=U.getValue(),fe=$(se,D.Line);return[s(U,Z,!fe),fe?u:""]}(U,Z);case"JSXText":throw new Error("JSXText should be handled by JSXElement");default:throw new Error(`Unknown JSX node type: ${JSON.stringify(fe.type)}.`)}}}}}),ct=te({"src/language-js/print/misc.js"(e,r){ne();var{isNonEmptyArray:t}=Ue(),{builders:{indent:s,join:a,line:n}}=qe(),{isFlowAnnotationComment:u}=Ke();function y(_,w,E){let N=_.getValue();if(!N.typeAnnotation)return"";let x=_.getParentNode(),I="DeclareFunction"===x.type&&x.id===N;return u(w.originalText,N.typeAnnotation)?[" /*: ",E("typeAnnotation")," */"]:[I?"":": ",E("typeAnnotation")]}r.exports={printOptionalToken:function i(_){let w=_.getValue();return!w.optional||"Identifier"===w.type&&w===_.getParentNode().key?"":"OptionalCallExpression"===w.type||"OptionalMemberExpression"===w.type&&w.computed?"?.":"?"},printDefiniteToken:function l(_){return _.getValue().definite||_.match(void 0,((w,E)=>"id"===E&&"VariableDeclarator"===w.type&&w.definite))?"!":""},printFunctionTypeParameters:function p(_,w,E){let N=_.getValue();return N.typeArguments?E("typeArguments"):N.typeParameters?E("typeParameters"):""},printBindExpressionCallee:function h(_,w,E){return["::",E("callee")]},printTypeScriptModifiers:function g(_,w,E){let N=_.getValue();return t(N.modifiers)?[a(" ",_.map(E,"modifiers"))," "]:""},printTypeAnnotation:y,printRestSpread:function f(_,w,E){return["...",E("argument"),y(_,w,E)]},adjustClause:function c(_,w,E){return"EmptyStatement"===_.type?";":"BlockStatement"===_.type||E?[" ",w]:s([n,w])},printDirective:function F(_,w){let E=_.slice(1,-1);if(E.includes('"')||E.includes("'"))return _;let N=w.singleQuote?"'":'"';return N+E+N}}}}),er=te({"src/language-js/print/array.js"(e,r){ne();var{printDanglingComments:t}=et(),{builders:{line:s,softline:a,hardline:n,group:u,indent:i,ifBreak:l,fill:p}}=qe(),{getLast:y,hasNewline:h}=Ue(),{shouldPrintComma:g,hasComment:c,CommentCheckFlags:f,isNextLineEmpty:F,isNumericLiteral:_,isSignedNumericLiteral:w}=Ke(),{locStart:E}=ut(),{printOptionalToken:N,printTypeAnnotation:x}=ct();function P(T,m){return T.elements.length>1&&T.elements.every((C=>C&&(_(C)||w(C)&&!c(C.argument))&&!c(C,f.Trailing|f.Line,(o=>!h(m.originalText,E(o),{backwards:!0})))))}function $(T,m,C,o){let d=[],v=[];return T.each((S=>{d.push(v,u(o())),v=[",",s],S.getValue()&&F(S.getValue(),m)&&v.push(a)}),C),d}function D(T,m,C,o){let d=[];return T.each(((v,S,b)=>{let B=S===b.length-1;d.push([C(),B?o:","]),B||d.push(F(v.getValue(),m)?[n,n]:c(b[S+1],f.Leading|f.Line)?n:s)}),"elements"),p(d)}r.exports={printArray:function I(T,m,C){let o=T.getValue(),d=[],v="TupleExpression"===o.type?"#[":"[";if(0===o.elements.length)c(o,f.Dangling)?d.push(u([v,t(T,m),a,"]"])):d.push(v,"]");else{let b=y(o.elements),B=!(b&&"RestElement"===b.type),k=null===b,M=Symbol("array"),R=!m.__inJestEach&&o.elements.length>1&&o.elements.every(((L,Q,V)=>{let j=L&&L.type;if("ArrayExpression"!==j&&"ObjectExpression"!==j)return!1;let Y=V[Q+1];if(Y&&j!==Y.type)return!1;let ie="ArrayExpression"===j?"elements":"properties";return L[ie]&&L[ie].length>1})),q=P(o,m),J=B?k?",":g(m)?q?l(",","",{groupId:M}):l(","):"":"";d.push(u([v,i([a,q?D(T,m,C,J):[$(T,m,"elements",C),J],t(T,m,!0)]),a,"]"],{shouldBreak:R,id:M}))}return d.push(N(T),x(T,m,C)),d},printArrayItems:$,isConciselyPrintedArray:P}}}),Ao=te({"src/language-js/print/call-arguments.js"(e,r){ne();var{printDanglingComments:t}=et(),{getLast:s,getPenultimate:a}=Ue(),{getFunctionParameters:n,hasComment:u,CommentCheckFlags:i,isFunctionCompositionArgs:l,isJsxNode:p,isLongCurriedCallExpression:y,shouldPrintComma:h,getCallArguments:g,iterateCallArgumentsPath:c,isNextLineEmpty:f,isCallExpression:F,isStringLiteral:_,isObjectProperty:w,isTSTypeExpression:E}=Ke(),{builders:{line:N,hardline:x,softline:I,group:P,indent:$,conditionalGroup:D,ifBreak:T,breakParent:m},utils:{willBreak:C}}=qe(),{ArgExpansionBailout:o}=Qt(),{isConciselyPrintedArray:d}=er();function S(q){let J=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return"ObjectExpression"===q.type&&(q.properties.length>0||u(q))||"ArrayExpression"===q.type&&(q.elements.length>0||u(q))||"TSTypeAssertion"===q.type&&S(q.expression)||E(q)&&S(q.expression)||"FunctionExpression"===q.type||"ArrowFunctionExpression"===q.type&&(!q.returnType||!q.returnType.typeAnnotation||"TSTypeReference"!==q.returnType.typeAnnotation.type||function M(q){return"BlockStatement"===q.type&&(q.body.some((J=>"EmptyStatement"!==J.type))||u(q,i.Dangling))}(q.body))&&("BlockStatement"===q.body.type||"ArrowFunctionExpression"===q.body.type&&S(q.body,!0)||"ObjectExpression"===q.body.type||"ArrayExpression"===q.body.type||!J&&(F(q.body)||"ConditionalExpression"===q.body.type)||p(q.body))||"DoExpression"===q.type||"ModuleExpression"===q.type}r.exports=function v(q,J,L){let Q=q.getValue(),V="ImportExpression"===Q.type,j=g(Q);if(0===j.length)return["(",t(q,J,!0),")"];if(function k(q){return 2===q.length&&"ArrowFunctionExpression"===q[0].type&&0===n(q[0]).length&&"BlockStatement"===q[0].body.type&&"ArrayExpression"===q[1].type&&!q.some((J=>u(J)))}(j))return["(",L(["arguments",0]),", ",L(["arguments",1]),")"];let Y=!1,ie=!1,ee=j.length-1,ce=[];c(q,((z,U)=>{let Z=z.getNode(),se=[L()];U===ee||(f(Z,J)?(0===U&&(ie=!0),Y=!0,se.push(",",x,x)):se.push(",",N)),ce.push(se)}));let W=V||Q.callee&&"Import"===Q.callee.type||!h(J,"all")?"":",";function K(){return P(["(",$([N,...ce]),W,N,")"],{shouldBreak:!0})}if(Y||"Decorator"!==q.getParentNode().type&&l(j))return K();let de=function B(q){if(2!==q.length)return!1;let[J,L]=q;return!("ModuleExpression"!==J.type||!function R(q){return"ObjectExpression"===q.type&&1===q.properties.length&&w(q.properties[0])&&"Identifier"===q.properties[0].key.type&&"type"===q.properties[0].key.name&&_(q.properties[0].value)&&"module"===q.properties[0].value.value}(L))||!u(J)&&("FunctionExpression"===J.type||"ArrowFunctionExpression"===J.type&&"BlockStatement"===J.body.type)&&"FunctionExpression"!==L.type&&"ArrowFunctionExpression"!==L.type&&"ConditionalExpression"!==L.type&&!S(L)}(j),ue=function b(q,J){let L=s(q),Q=a(q);return!u(L,i.Leading)&&!u(L,i.Trailing)&&S(L)&&(!Q||Q.type!==L.type)&&(2!==q.length||"ArrowFunctionExpression"!==Q.type||"ArrayExpression"!==L.type)&&!(q.length>1&&"ArrayExpression"===L.type&&d(L,J))}(j,J);if(de||ue){if(de?ce.slice(1).some(C):ce.slice(0,-1).some(C))return K();let z=[];try{q.try((()=>{c(q,((U,Z)=>{de&&0===Z&&(z=[[L([],{expandFirstArg:!0}),ce.length>1?",":"",ie?x:N,ie?x:""],...ce.slice(1)]),ue&&Z===ee&&(z=[...ce.slice(0,-1),L([],{expandLastArg:!0})])}))}))}catch(U){if(U instanceof o)return K();throw U}return[ce.some(C)?m:"",D([["(",...z,")"],de?["(",P(z[0],{shouldBreak:!0}),...z.slice(1),")"]:["(",...ce.slice(0,-1),P(s(z),{shouldBreak:!0}),")"],K()])]}let Fe=["(",$([I,...ce]),T(W),I,")"];return y(q)?Fe:P(Fe,{shouldBreak:ce.some(C)||Y})}}}),So=te({"src/language-js/print/member.js"(e,r){ne();var{builders:{softline:t,group:s,indent:a,label:n}}=qe(),{isNumericLiteral:u,isMemberExpression:i,isCallExpression:l}=Ke(),{printOptionalToken:p}=ct();function h(g,c,f){let F=f("property"),_=g.getValue(),w=p(g);return _.computed?!_.property||u(_.property)?[w,"[",F,"]"]:s([w,"[",a([t,F]),t,"]"]):[w,".",F]}r.exports={printMemberExpression:function y(g,c,f){let w,F=g.getValue(),_=g.getParentNode(),E=0;do{w=g.getParentNode(E),E++}while(w&&(i(w)||"TSNonNullExpression"===w.type));let N=f("object"),x=h(g,c,f),I=w&&("NewExpression"===w.type||"BindExpression"===w.type||"AssignmentExpression"===w.type&&"Identifier"!==w.left.type)||F.computed||"Identifier"===F.object.type&&"Identifier"===F.property.type&&!i(_)||("AssignmentExpression"===_.type||"VariableDeclarator"===_.type)&&(l(F.object)&&F.object.arguments.length>0||"TSNonNullExpression"===F.object.type&&l(F.object.expression)&&F.object.expression.arguments.length>0||"member-chain"===N.label);return n("member-chain"===N.label?"member-chain":"member",[N,I?x:s(a([t,x]))])},printMemberLookup:h}}}),md=te({"src/language-js/print/member-chain.js"(e,r){ne();var{printComments:t}=et(),{getLast:s,isNextLineEmptyAfterIndex:a,getNextNonSpaceNonCommentCharacterIndex:n}=Ue(),u=qt(),{isCallExpression:i,isMemberExpression:l,isFunctionOrArrowExpression:p,isLongCurriedCallExpression:y,isMemberish:h,isNumericLiteral:g,isSimpleCallArgument:c,hasComment:f,CommentCheckFlags:F,isNextLineEmpty:_}=Ke(),{locEnd:w}=ut(),{builders:{join:E,hardline:N,group:x,indent:I,conditionalGroup:P,breakParent:$,label:D},utils:{willBreak:T}}=qe(),m=Ao(),{printMemberLookup:C}=So(),{printOptionalToken:o,printFunctionTypeParameters:d,printBindExpressionCallee:v}=ct();r.exports=function S(b,B,k){let M=b.getParentNode(),R=!M||"ExpressionStatement"===M.type,q=[];function J(Ne){let{originalText:Pe}=B,oe=n(Pe,Ne,w);return")"===Pe.charAt(oe)?!1!==oe&&a(Pe,oe+1):_(Ne,B)}function L(Ne){let Pe=Ne.getValue();i(Pe)&&(h(Pe.callee)||i(Pe.callee))?(q.unshift({node:Pe,printed:[t(Ne,[o(Ne),d(Ne,B,k),m(Ne,B,k)],B),J(Pe)?N:""]}),Ne.call((oe=>L(oe)),"callee")):h(Pe)?(q.unshift({node:Pe,needsParens:u(Ne,B),printed:t(Ne,l(Pe)?C(Ne,B,k):v(Ne,B,k),B)}),Ne.call((oe=>L(oe)),"object")):"TSNonNullExpression"===Pe.type?(q.unshift({node:Pe,printed:t(Ne,"!",B)}),Ne.call((oe=>L(oe)),"expression")):q.unshift({node:Pe,printed:k()})}let Q=b.getValue();q.unshift({node:Q,printed:[o(b),d(b,B,k),m(b,B,k)]}),Q.callee&&b.call((Ne=>L(Ne)),"callee");let V=[],j=[q[0]],Y=1;for(;Y<q.length&&("TSNonNullExpression"===q[Y].node.type||i(q[Y].node)||l(q[Y].node)&&q[Y].node.computed&&g(q[Y].node.property));++Y)j.push(q[Y]);if(!i(q[0].node))for(;Y+1<q.length&&h(q[Y].node)&&h(q[Y+1].node);++Y)j.push(q[Y]);V.push(j),j=[];let ie=!1;for(;Y<q.length;++Y){if(ie&&h(q[Y].node)){if(q[Y].node.computed&&g(q[Y].node.property)){j.push(q[Y]);continue}V.push(j),j=[],ie=!1}(i(q[Y].node)||"ImportExpression"===q[Y].node.type)&&(ie=!0),j.push(q[Y]),f(q[Y].node,F.Trailing)&&(V.push(j),j=[],ie=!1)}function ee(Ne){return/^[A-Z]|^[$_]+$/.test(Ne)}j.length>0&&V.push(j);let K=V.length>=2&&!f(V[1][0].node)&&function W(Ne){let Pe=Ne[1].length>0&&Ne[1][0].node.computed;if(1===Ne[0].length){let H=Ne[0][0].node;return"ThisExpression"===H.type||"Identifier"===H.type&&(ee(H.name)||R&&function ce(Ne){return Ne.length<=B.tabWidth}(H.name)||Pe)}let oe=s(Ne[0]).node;return l(oe)&&"Identifier"===oe.property.type&&(ee(oe.property.name)||Pe)}(V);function de(Ne){let Pe=Ne.map((oe=>oe.printed));return Ne.length>0&&s(Ne).needsParens?["(",...Pe,")"]:Pe}let Fe=V.map(de),z=Fe,U=K?3:2,Z=V.flat(),se=Z.slice(1,-1).some((Ne=>f(Ne.node,F.Leading)))||Z.slice(0,-1).some((Ne=>f(Ne.node,F.Trailing)))||V[U]&&f(V[U][0].node,F.Leading);if(V.length<=U&&!se)return y(b)?z:x(z);let Re,fe=s(V[K?1:0]).node,ge=!i(fe)&&J(fe),he=[de(V[0]),K?V.slice(1,2).map(de):"",ge?N:"",function ue(Ne){return 0===Ne.length?"":I(x([N,E(N,Ne.map(de))]))}(V.slice(K?2:1))],we=q.map((Ne=>{let{node:Pe}=Ne;return Pe})).filter(i);return Re=se||we.length>2&&we.some((Ne=>!Ne.arguments.every((Pe=>c(Pe,0)))))||Fe.slice(0,-1).some(T)||function ke(){let Ne=s(s(V)).node,Pe=s(Fe);return i(Ne)&&T(Pe)&&we.slice(0,-1).some((oe=>oe.arguments.some(p)))}()?x(he):[T(z)||ge?$:"",P([z,he])],D("member-chain",Re)}}}),xo=te({"src/language-js/print/call-expression.js"(e,r){ne();var{builders:{join:t,group:s}}=qe(),a=qt(),{getCallArguments:n,hasFlowAnnotationComment:u,isCallExpression:i,isMemberish:l,isStringLiteral:p,isTemplateOnItsOwnLine:y,isTestCall:h,iterateCallArgumentsPath:g}=Ke(),c=md(),f=Ao(),{printOptionalToken:F,printFunctionTypeParameters:_}=ct();r.exports={printCallExpression:function w(N,x,I){let P=N.getValue(),$=N.getParentNode(),D="NewExpression"===P.type,T="ImportExpression"===P.type,m=F(N),C=n(P);if(C.length>0&&(!T&&!D&&function E(N,x){if("Identifier"!==N.callee.type)return!1;if("require"===N.callee.name)return!0;if("define"===N.callee.name){let I=n(N);return"ExpressionStatement"===x.type&&(1===I.length||2===I.length&&"ArrayExpression"===I[0].type||3===I.length&&p(I[0])&&"ArrayExpression"===I[1].type)}return!1}(P,$)||1===C.length&&y(C[0],x.originalText)||!D&&h(P,$))){let v=[];return g(N,(()=>{v.push(I())})),[D?"new ":"",I("callee"),m,_(N,x,I),"(",t(", ",v),")"]}let o=("babel"===x.parser||"babel-flow"===x.parser)&&P.callee&&"Identifier"===P.callee.type&&u(P.callee.trailingComments);if(o&&(P.callee.trailingComments[0].printed=!0),!T&&!D&&l(P.callee)&&!N.call((v=>a(v,x)),"callee"))return c(N,x,I);let d=[D?"new ":"",T?"import":I("callee"),m,o?`/*:: ${P.callee.trailingComments[0].value.slice(2).trim()} */`:"",_(N,x,I),f(N,x,I)];return T||i(P.callee)?s(d):d}}}}),tr=te({"src/language-js/print/assignment.js"(e,r){ne();var{isNonEmptyArray:t,getStringWidth:s}=Ue(),{builders:{line:a,group:n,indent:u,indentIfBreak:i,lineSuffixBoundary:l},utils:{cleanDoc:p,willBreak:y,canBreak:h}}=qe(),{hasLeadingOwnLineComment:g,isBinaryish:c,isStringLiteral:f,isLiteral:F,isNumericLiteral:_,isCallExpression:w,isMemberExpression:E,getCallArguments:N,rawText:x,hasComment:I,isSignedNumericLiteral:P,isObjectProperty:$}=Ke(),{shouldInlineLogicalExpression:D}=ru(),{printCallExpression:T}=xo();function m(W,K,de,ue,Fe,z){let U=function d(W,K,de,ue,Fe){let z=W.getValue(),U=z[Fe];if(!U)return"only-left";let Z=!b(U);if(W.match(b,B,(he=>!Z||"ExpressionStatement"!==he.type&&"VariableDeclaration"!==he.type)))return Z?"ArrowFunctionExpression"===U.type&&"ArrowFunctionExpression"===U.body.type?"chain-tail-arrow-chain":"chain-tail":"chain";if(!Z&&b(U.right)||g(K.originalText,U))return"break-after-operator";if("CallExpression"===U.type&&"require"===U.callee.name||"json5"===K.parser||"json"===K.parser)return"never-break-after-operator";if(function S(W){if(B(W)){let K=W.left||W.id;return"ObjectPattern"===K.type&&K.properties.length>2&&K.properties.some((de=>$(de)&&(!de.shorthand||de.value&&"AssignmentPattern"===de.value.type)))}return!1}(z)||function k(W){let K=function M(W){return function R(W){return"TSTypeAliasDeclaration"===W.type||"TypeAlias"===W.type}(W)&&W.typeParameters&&W.typeParameters.params?W.typeParameters.params:null}(W);if(t(K)){let de="TSTypeAliasDeclaration"===W.type?"constraint":"bound";if(K.length>1&&K.some((ue=>ue[de]||ue.default)))return!0}return!1}(z)||function q(W){if("VariableDeclarator"!==W.type)return!1;let{typeAnnotation:K}=W.id;if(!K||!K.typeAnnotation)return!1;let de=L(K.typeAnnotation);return t(de)&&de.length>1&&de.some((ue=>t(L(ue))||"TSConditionalType"===ue.type))}(z)||J(z)&&h(ue))return"break-lhs";let ge=function ie(W,K,de){if(!$(W))return!1;K=p(K);let ue=3;return"string"==typeof K&&s(K)<de.tabWidth+ue}(z,ue,K);return W.call((()=>function v(W,K,de,ue){let Fe=W.getValue();if(c(Fe)&&!D(Fe))return!0;switch(Fe.type){case"StringLiteralTypeAnnotation":case"SequenceExpression":return!0;case"ConditionalExpression":{let{test:Z}=Fe;return c(Z)&&!D(Z)}case"ClassExpression":return t(Fe.decorators)}if(ue)return!1;let z=Fe,U=[];for(;;)if("UnaryExpression"===z.type)z=z.argument,U.push("argument");else{if("TSNonNullExpression"!==z.type)break;z=z.expression,U.push("expression")}return!(!f(z)&&!W.call((()=>V(W,K,de)),...U))}(W,K,de,ge)),Fe)?"break-after-operator":ge||"TemplateLiteral"===U.type||"TaggedTemplateExpression"===U.type||"BooleanLiteral"===U.type||_(U)||"ClassExpression"===U.type?"never-break-after-operator":"fluid"}(W,K,de,ue,z),Z=de(z,{assignmentLayout:U});switch(U){case"break-after-operator":return n([n(ue),Fe,n(u([a,Z]))]);case"never-break-after-operator":return n([n(ue),Fe," ",Z]);case"fluid":{let se=Symbol("assignment");return n([n(ue),Fe,n(u(a),{id:se}),l,i(Z,{groupId:se})])}case"break-lhs":return n([ue,Fe," ",n(Z)]);case"chain":return[n(ue),Fe,a,Z];case"chain-tail":return[n(ue),Fe,u([a,Z])];case"chain-tail-arrow-chain":return[n(ue),Fe,Z];case"only-left":return ue}}function b(W){return"AssignmentExpression"===W.type}function B(W){return b(W)||"VariableDeclarator"===W.type}function J(W){return"VariableDeclarator"===W.type&&W.init&&"ArrowFunctionExpression"===W.init.type}function L(W){return function Q(W){return"TSTypeReference"===W.type||"GenericTypeAnnotation"===W.type}(W)&&W.typeParameters&&W.typeParameters.params?W.typeParameters.params:null}function V(W,K,de){let ue=arguments.length>3&&void 0!==arguments[3]&&arguments[3],Fe=W.getValue(),z=()=>V(W,K,de,!0);if("TSNonNullExpression"===Fe.type)return W.call(z,"expression");if(w(Fe)){if("member-chain"===T(W,K,de).label)return!1;let Z=N(Fe);return!(!(0===Z.length||1===Z.length&&function Y(W,K){let{printWidth:de}=K;if(I(W))return!1;let ue=.25*de;if("ThisExpression"===W.type||"Identifier"===W.type&&W.name.length<=ue||P(W)&&!I(W.argument))return!0;let Fe="Literal"===W.type&&"regex"in W&&W.regex.pattern||"RegExpLiteral"===W.type&&W.pattern;return Fe?Fe.length<=ue:f(W)?x(W).length<=ue:"TemplateLiteral"===W.type?0===W.expressions.length&&W.quasis[0].value.raw.length<=ue&&!W.quasis[0].value.raw.includes("\n"):F(W)}(Z[0],K))||function ee(W,K){let de=function ce(W){return W.typeParameters&&W.typeParameters.params||W.typeArguments&&W.typeArguments.params}(W);if(t(de)){if(de.length>1)return!0;if(1===de.length){let Fe=de[0];if("TSUnionType"===Fe.type||"UnionTypeAnnotation"===Fe.type||"TSIntersectionType"===Fe.type||"IntersectionTypeAnnotation"===Fe.type||"TSTypeLiteral"===Fe.type||"ObjectTypeAnnotation"===Fe.type)return!0}let ue=W.typeParameters?"typeParameters":"typeArguments";if(y(K(ue)))return!0}return!1}(Fe,de))&&W.call(z,"callee")}return E(Fe)?W.call(z,"object"):ue&&("Identifier"===Fe.type||"ThisExpression"===Fe.type)}r.exports={printVariableDeclarator:function o(W,K,de){return m(W,K,de,de("id")," =","init")},printAssignmentExpression:function C(W,K,de){let ue=W.getValue();return m(W,K,de,de("left"),[" ",ue.operator],"right")},printAssignment:m,isArrowFunctionVariableDeclarator:J}}}),Lr=te({"src/language-js/print/function-parameters.js"(e,r){ne();var{getNextNonSpaceNonCommentCharacter:t}=Ue(),{printDanglingComments:s}=et(),{builders:{line:a,hardline:n,softline:u,group:i,indent:l,ifBreak:p},utils:{removeLines:y,willBreak:h}}=qe(),{getFunctionParameters:g,iterateFunctionParametersPath:c,isSimpleType:f,isTestCall:F,isTypeAnnotationAFunction:_,isObjectType:w,isObjectTypePropertyAFunction:E,hasRestParameter:N,shouldPrintComma:x,hasComment:I,isNextLineEmpty:P}=Ke(),{locEnd:$}=ut(),{ArgExpansionBailout:D}=Qt(),{printFunctionTypeParameters:T}=ct();function C(v){if(!v)return!1;let S=g(v);if(1!==S.length)return!1;let[b]=S;return!I(b)&&("ObjectPattern"===b.type||"ArrayPattern"===b.type||"Identifier"===b.type&&b.typeAnnotation&&("TypeAnnotation"===b.typeAnnotation.type||"TSTypeAnnotation"===b.typeAnnotation.type)&&w(b.typeAnnotation.typeAnnotation)||"FunctionTypeParam"===b.type&&w(b.typeAnnotation)||"AssignmentPattern"===b.type&&("ObjectPattern"===b.left.type||"ArrayPattern"===b.left.type)&&("Identifier"===b.right.type||"ObjectExpression"===b.right.type&&0===b.right.properties.length||"ArrayExpression"===b.right.type&&0===b.right.elements.length))}r.exports={printFunctionParameters:function m(v,S,b,B,k){let M=v.getValue(),R=g(M),q=k?T(v,b,S):"";if(0===R.length)return[q,"(",s(v,b,!0,(ie=>")"===t(b.originalText,ie,$))),")"];let J=v.getParentNode(),L=F(J),Q=C(M),V=[];if(c(v,((ie,ee)=>{let ce=ee===R.length-1;ce&&M.rest&&V.push("..."),V.push(S()),!ce&&(V.push(","),L||Q?V.push(" "):P(R[ee],b)?V.push(n,n):V.push(a))})),B){if(h(q)||h(V))throw new D;return i([y(q),"(",y(V),")"])}let j=R.every((ie=>!ie.decorators));return Q&&j||L?[q,"(",...V,")"]:(E(J)||_(J)||"TypeAlias"===J.type||"UnionTypeAnnotation"===J.type||"TSUnionType"===J.type||"IntersectionTypeAnnotation"===J.type||"FunctionTypeAnnotation"===J.type&&J.returnType===M)&&1===R.length&&null===R[0].name&&M.this!==R[0]&&R[0].typeAnnotation&&null===M.typeParameters&&f(R[0].typeAnnotation)&&!M.rest?"always"===b.arrowParens?["(",...V,")"]:V:[q,"(",l([u,...V]),p(!N(M)&&x(b,"all")?",":""),u,")"]},shouldHugFunctionParameters:C,shouldGroupFunctionParameters:function d(v,S){let b=function o(v){let S;return v.returnType?(S=v.returnType,S.typeAnnotation&&(S=S.typeAnnotation)):v.typeAnnotation&&(S=v.typeAnnotation),S}(v);if(!b)return!1;let B=v.typeParameters&&v.typeParameters.params;if(B){if(B.length>1)return!1;if(1===B.length){let k=B[0];if(k.constraint||k.default)return!1}}return 1===g(v).length&&(w(b)||h(S))}}}}),Or=te({"src/language-js/print/type-annotation.js"(e,r){ne();var{printComments:t,printDanglingComments:s}=et(),{isNonEmptyArray:a}=Ue(),{builders:{group:n,join:u,line:i,softline:l,indent:p,align:y,ifBreak:h}}=qe(),g=qt(),{locStart:c}=ut(),{isSimpleType:f,isObjectType:F,hasLeadingOwnLineComment:_,isObjectTypePropertyAFunction:w,shouldPrintComma:E}=Ke(),{printAssignment:N}=tr(),{printFunctionParameters:x,shouldGroupFunctionParameters:I}=Lr(),{printArrayItems:P}=er();function $(b){if(f(b)||F(b))return!0;if("UnionTypeAnnotation"===b.type||"TSUnionType"===b.type){let B=b.types.filter((M=>"VoidTypeAnnotation"===M.type||"TSVoidKeyword"===M.type||"NullLiteralTypeAnnotation"===M.type||"TSNullKeyword"===M.type)).length,k=b.types.some((M=>"ObjectTypeAnnotation"===M.type||"TSTypeLiteral"===M.type||"GenericTypeAnnotation"===M.type||"TSTypeReference"===M.type));if(b.types.length-1===B&&k)return!0}return!1}r.exports={printOpaqueType:function D(b,B,k){let M=B.semi?";":"",R=b.getValue(),q=[];return q.push("opaque type ",k("id"),k("typeParameters")),R.supertype&&q.push(": ",k("supertype")),R.impltype&&q.push(" = ",k("impltype")),q.push(M),q},printTypeAlias:function T(b,B,k){let M=B.semi?";":"",R=b.getValue(),q=[];R.declare&&q.push("declare "),q.push("type ",k("id"),k("typeParameters"));let J="TSTypeAliasDeclaration"===R.type?"typeAnnotation":"right";return[N(b,B,k,q," =",J),M]},printIntersectionType:function m(b,B,k){let M=b.getValue(),R=b.map(k,"types"),q=[],J=!1;for(let L=0;L<R.length;++L)0===L?q.push(R[L]):F(M.types[L-1])&&F(M.types[L])?q.push([" & ",J?p(R[L]):R[L]]):F(M.types[L-1])||F(M.types[L])?(L>1&&(J=!0),q.push(" & ",L>1?p(R[L]):R[L])):q.push(p([" &",i,R[L]]));return n(q)},printUnionType:function C(b,B,k){let M=b.getValue(),R=b.getParentNode(),q=!("TypeParameterInstantiation"===R.type||"TSTypeParameterInstantiation"===R.type||"GenericTypeAnnotation"===R.type||"TSTypeReference"===R.type||"TSTypeAssertion"===R.type||"TupleTypeAnnotation"===R.type||"TSTupleType"===R.type||"FunctionTypeParam"===R.type&&!R.name&&b.getParentNode(1).this!==R||("TypeAlias"===R.type||"VariableDeclarator"===R.type||"TSTypeAliasDeclaration"===R.type)&&_(B.originalText,M)),J=$(M),L=b.map((j=>{let Y=k();return J||(Y=y(2,Y)),t(j,Y,B)}),"types");if(J)return u(" | ",L);let Q=q&&!_(B.originalText,M),V=[h([Q?i:"","| "]),u([i,"| "],L)];return g(b,B)?n([p(V),l]):"TupleTypeAnnotation"===R.type&&R.types.length>1||"TSTupleType"===R.type&&R.elementTypes.length>1?n([p([h(["(",l]),V]),l,h(")")]):n(q?p(V):V)},printFunctionType:function o(b,B,k){let M=b.getValue(),R=[],q=b.getParentNode(0),J=b.getParentNode(1),L=b.getParentNode(2),Q="TSFunctionType"===M.type||!(("ObjectTypeProperty"===q.type||"ObjectTypeInternalSlot"===q.type)&&!q.variance&&!q.optional&&c(q)===c(M)||"ObjectTypeCallProperty"===q.type||L&&"DeclareFunction"===L.type),V=Q&&("TypeAnnotation"===q.type||"TSTypeAnnotation"===q.type),j=V&&Q&&("TypeAnnotation"===q.type||"TSTypeAnnotation"===q.type)&&"ArrowFunctionExpression"===J.type;w(q)&&(Q=!0,V=!0),j&&R.push("(");let Y=x(b,k,B,!1,!0),ie=M.returnType||M.predicate||M.typeAnnotation?[Q?" => ":": ",k("returnType"),k("predicate"),k("typeAnnotation")]:"",ee=I(M,ie);return R.push(ee?n(Y):Y),ie&&R.push(ie),j&&R.push(")"),n(R)},printTupleType:function d(b,B,k){let M=b.getValue(),R="TSTupleType"===M.type?"elementTypes":"types",q=M[R],J=a(q),L=J?l:"";return n(["[",p([L,P(b,B,R,k)]),h(J&&E(B,"all")?",":""),s(b,B,!0),L,"]"])},printIndexedAccessType:function v(b,B,k){let M=b.getValue(),R="OptionalIndexedAccessType"===M.type&&M.optional?"?.[":"[";return[k("objectType"),R,k("indexType"),"]"]},shouldHugType:$,printJSDocType:function S(b,B,k){let M=b.getValue();return[M.postfix?"":k,B("typeAnnotation"),M.postfix?k:""]}}}}),jr=te({"src/language-js/print/type-parameters.js"(e,r){ne();var{printDanglingComments:t}=et(),{builders:{join:s,line:a,hardline:n,softline:u,group:i,indent:l,ifBreak:p}}=qe(),{isTestCall:y,hasComment:h,CommentCheckFlags:g,isTSXFile:c,shouldPrintComma:f,getFunctionParameters:F,isObjectType:_,getTypeScriptMappedTypeModifier:w}=Ke(),{createGroupIdMapper:E}=Ue(),{shouldHugType:N}=Or(),{isArrowFunctionVariableDeclarator:x}=tr(),I=E("typeParameters");function $(T,m){let C=T.getValue();if(!h(C,g.Dangling))return"";let o=!h(C,g.Line),d=t(T,m,o);return o?d:[d,n]}r.exports={printTypeParameter:function D(T,m,C){let o=T.getValue(),d=["TSTypeParameter"===o.type&&o.const?"const ":""],v=T.getParentNode();return"TSMappedType"===v.type?(v.readonly&&d.push(w(v.readonly,"readonly")," "),d.push("[",C("name")),o.constraint&&d.push(" in ",C("constraint")),v.nameType&&d.push(" as ",T.callParent((()=>C("nameType")))),d.push("]"),d):(o.variance&&d.push(C("variance")),o.in&&d.push("in "),o.out&&d.push("out "),d.push(C("name")),o.bound&&d.push(": ",C("bound")),o.constraint&&d.push(" extends ",C("constraint")),o.default&&d.push(" = ",C("default")),d)},printTypeParameters:function P(T,m,C,o){let d=T.getValue();if(!d[o])return"";if(!Array.isArray(d[o]))return C(o);let v=T.getNode(2),S=v&&y(v),b=T.match((M=>!(1===M[o].length&&_(M[o][0]))),void 0,((M,R)=>"typeAnnotation"===R),(M=>"Identifier"===M.type),x);if(0===d[o].length||!b&&(S||1===d[o].length&&("NullableTypeAnnotation"===d[o][0].type||N(d[o][0]))))return["<",s(", ",T.map(C,o)),$(T,m),">"];let k="TSTypeParameterInstantiation"===d.type?"":1===F(d).length&&c(m)&&!d[o][0].constraint&&"ArrowFunctionExpression"===T.getParentNode().type?",":f(m,"all")?p(","):"";return i(["<",l([u,s([",",a],T.map(C,o))]),k,u,">"],{id:I(d)})},getTypeParametersGroupId:I}}}),rr=te({"src/language-js/print/property.js"(e,r){ne();var{printComments:t}=et(),{printString:s,printNumber:a}=Ue(),{isNumericLiteral:n,isSimpleNumber:u,isStringLiteral:i,isStringPropSafeToUnquote:l,rawText:p}=Ke(),{printAssignment:y}=tr(),h=new WeakMap;function g(f,F,_){let w=f.getNode();if(w.computed)return["[",_("key"),"]"];let E=f.getParentNode(),{key:N}=w;if("consistent"===F.quoteProps&&!h.has(E)){let x=(E.properties||E.body||E.members).some((I=>!I.computed&&I.key&&i(I.key)&&!l(I,F)));h.set(E,x)}if(("Identifier"===N.type||n(N)&&u(a(p(N)))&&String(N.value)===a(p(N))&&"typescript"!==F.parser&&"babel-ts"!==F.parser)&&("json"===F.parser||"consistent"===F.quoteProps&&h.get(E))){let x=s(JSON.stringify("Identifier"===N.type?N.name:N.value.toString()),F);return f.call((I=>t(I,x,F)),"key")}return l(w,F)&&("as-needed"===F.quoteProps||"consistent"===F.quoteProps&&!h.get(E))?f.call((x=>t(x,/^\d/.test(N.value)?a(N.value):N.value,F)),"key"):_("key")}r.exports={printProperty:function c(f,F,_){return f.getValue().shorthand?_("value"):y(f,F,_,g(f,F,_),":","value")},printPropertyKey:g}}}),qr=te({"src/language-js/print/function.js"(e,r){ne();var t=Zt(),{printDanglingComments:s,printCommentsSeparately:a}=et(),n=lt(),{getNextNonSpaceNonCommentCharacterIndex:u}=Ue(),{builders:{line:i,softline:l,group:p,indent:y,ifBreak:h,hardline:g,join:c,indentIfBreak:f},utils:{removeLines:F,willBreak:_}}=qe(),{ArgExpansionBailout:w}=Qt(),{getFunctionParameters:E,hasLeadingOwnLineComment:N,isFlowAnnotationComment:x,isJsxNode:I,isTemplateOnItsOwnLine:P,shouldPrintComma:$,startsWithNoLookaheadToken:D,isBinaryish:T,isLineComment:m,hasComment:C,getComments:o,CommentCheckFlags:d,isCallLikeExpression:v,isCallExpression:S,getCallArguments:b,hasNakedLeftSide:B,getLeftSide:k}=Ke(),{locEnd:M}=ut(),{printFunctionParameters:R,shouldGroupFunctionParameters:q}=Lr(),{printPropertyKey:J}=rr(),{printFunctionTypeParameters:L}=ct();function j(U,Z,se){let fe=U.getNode(),ge=R(U,se,Z),he=K(U,se,Z),we=q(fe,he),ke=[L(U,Z,se),p([we?p(ge):ge,he])];return fe.body?ke.push(" ",se("body")):ke.push(Z.semi?";":""),ke}function W(U,Z){if("always"===Z.arrowParens)return!1;if("avoid"===Z.arrowParens){return function ce(U){let Z=E(U);return!(1!==Z.length||U.typeParameters||C(U,d.Dangling)||"Identifier"!==Z[0].type||Z[0].typeAnnotation||C(Z[0])||Z[0].optional||U.predicate||U.returnType)}(U.getValue())}return!1}function K(U,Z,se){let fe=U.getValue(),ge=Z("returnType");if(fe.returnType&&x(se.originalText,fe.returnType))return[" /*: ",ge," */"];let he=[ge];return fe.returnType&&fe.returnType.typeAnnotation&&he.unshift(": "),fe.predicate&&he.push(fe.returnType?" ":": ",Z("predicate")),he}function de(U,Z,se){let fe=U.getValue(),ge=Z.semi?";":"",he=[];fe.argument&&(function z(U,Z){if(N(U.originalText,Z))return!0;if(B(Z)){let fe,se=Z;for(;fe=k(se);)if(se=fe,N(U.originalText,se))return!0}return!1}(Z,fe.argument)?he.push([" (",y([g,se("argument")]),g,")"]):T(fe.argument)||"SequenceExpression"===fe.argument.type?he.push(p([h(" ("," "),y([l,se("argument")]),l,h(")")])):he.push(" ",se("argument")));let we=o(fe),ke=n(we),Re=ke&&m(ke);return Re&&he.push(ge),C(fe,d.Dangling)&&he.push(" ",s(U,Z,!0)),Re||he.push(ge),he}r.exports={printFunction:function Q(U,Z,se,fe){let ge=U.getValue(),he=!1;if(("FunctionDeclaration"===ge.type||"FunctionExpression"===ge.type)&&fe&&fe.expandLastArg){let Pe=U.getParentNode();S(Pe)&&b(Pe).length>1&&(he=!0)}let we=[];"TSDeclareFunction"===ge.type&&ge.declare&&we.push("declare "),ge.async&&we.push("async "),ge.generator?we.push("function* "):we.push("function "),ge.id&&we.push(Z("id"));let ke=R(U,Z,se,he),Re=K(U,Z,se),Ne=q(ge,Re);return we.push(L(U,se,Z),p([Ne?p(ke):ke,Re]),ge.body?" ":"",Z("body")),se.semi&&(ge.declare||!ge.body)&&we.push(";"),we},printArrowFunction:function ee(U,Z,se,fe){let ge=U.getValue(),he=[],we=[],ke=!1;if(function H(){let pe=function Y(U,Z,se,fe){let he=[];if(U.getValue().async&&he.push("async "),W(U,Z))he.push(se(["params",0]));else{let ke=fe&&(fe.expandLastArg||fe.expandFirstArg),Re=K(U,se,Z);if(ke){if(_(Re))throw new w;Re=p(F(Re))}he.push(p([R(U,se,Z,ke,!0),Re]))}let we=s(U,Z,!0,(ke=>{let Re=u(Z.originalText,ke,M);return!1!==Re&&"=>"===Z.originalText.slice(Re,Re+2)}));return we&&he.push(" ",we),he}(U,Z,se,fe);if(0===he.length)he.push(pe);else{let{leading:X,trailing:le}=a(U,Z);he.push([X,pe]),we.unshift(le)}ke=ke||ge.returnType&&E(ge).length>0||ge.typeParameters||E(ge).some((X=>"Identifier"!==X.type)),"ArrowFunctionExpression"!==ge.body.type||fe&&fe.expandLastArg?we.unshift(se("body",fe)):(ge=ge.body,U.call(H,"body"))}(),he.length>1)return function ie(U,Z,se,fe,ge,he){let we=U.getName(),ke=U.getParentNode(),Re=v(ke)&&"callee"===we,Ne=Boolean(Z&&Z.assignmentLayout),Pe="BlockStatement"!==he.body.type&&"ObjectExpression"!==he.body.type&&"SequenceExpression"!==he.body.type,oe=Re&&Pe||Z&&"chain-tail-arrow-chain"===Z.assignmentLayout,H=Symbol("arrow-chain");return"SequenceExpression"===he.body.type&&(ge=p(["(",y([l,ge]),l,")"])),p([p(y([Re||Ne?l:"",p(c([" =>",i],se),{shouldBreak:fe})]),{id:H,shouldBreak:oe})," =>",f(Pe?y([i,ge]):[" ",ge],{groupId:H}),Re?h(l,"",{groupId:H}):""])}(U,fe,he,ke,we,ge);let Re=he;if(Re.push(" =>"),!N(Z.originalText,ge.body)&&("ArrayExpression"===ge.body.type||"ObjectExpression"===ge.body.type||"BlockStatement"===ge.body.type||I(ge.body)||P(ge.body,Z.originalText)||"ArrowFunctionExpression"===ge.body.type||"DoExpression"===ge.body.type))return p([...Re," ",we]);if("SequenceExpression"===ge.body.type)return p([...Re,p([" (",y([l,we]),l,")"])]);let Ne=(fe&&fe.expandLastArg||"JSXExpressionContainer"===U.getParentNode().type)&&!C(ge),Pe=fe&&fe.expandLastArg&&$(Z,"all"),oe="ConditionalExpression"===ge.body.type&&!D(ge.body,(H=>"ObjectExpression"===H.type));return p([...Re,p([y([i,oe?h("","("):"",we,oe?h("",")"):""]),Ne?[h(Pe?",":""),l]:""])])},printMethod:function V(U,Z,se){let fe=U.getNode(),{kind:ge}=fe,he=fe.value||fe,we=[];return ge&&"init"!==ge&&"method"!==ge&&"constructor"!==ge?(t.ok("get"===ge||"set"===ge),we.push(ge," ")):he.async&&we.push("async "),he.generator&&we.push("*"),we.push(J(U,Z,se),fe.optional||fe.key.optional?"?":""),fe===he?we.push(j(U,Z,se)):"FunctionExpression"===he.type?we.push(U.call((ke=>j(ke,Z,se)),"value")):we.push(se("value")),we},printReturnStatement:function ue(U,Z,se){return["return",de(U,Z,se)]},printThrowStatement:function Fe(U,Z,se){return["throw",de(U,Z,se)]},printMethodInternal:j,shouldPrintParamsWithoutParens:W}}}),nu=te({"src/language-js/print/decorators.js"(e,r){ne();var{isNonEmptyArray:t,hasNewline:s}=Ue(),{builders:{line:a,hardline:n,join:u,breakParent:i,group:l}}=qe(),{locStart:p,locEnd:y}=ut(),{getParentExportDeclaration:h}=Ke();function F(w,E){return w.decorators.some((N=>s(E.originalText,y(N))))}function _(w){if("ExportDefaultDeclaration"!==w.type&&"ExportNamedDeclaration"!==w.type&&"DeclareExportDeclaration"!==w.type)return!1;let E=w.declaration&&w.declaration.decorators;return t(E)&&p(w)===p(E[0])}r.exports={printDecorators:function f(w,E,N){let x=w.getValue(),{decorators:I}=x;if(!t(I)||_(w.getParentNode()))return;let P="ClassExpression"===x.type||"ClassDeclaration"===x.type||F(x,E);return[h(w)?n:P?i:"",u(a,w.map(N,"decorators")),a]},printClassMemberDecorators:function g(w,E,N){let x=w.getValue();return l([u(a,w.map(N,"decorators")),F(x,E)?n:a])},printDecoratorsBeforeExport:function c(w,E,N){return[u(n,w.map(N,"declaration","decorators")),n]},hasDecoratorsBeforeExport:_}}}),nr=te({"src/language-js/print/class.js"(e,r){ne();var{isNonEmptyArray:t,createGroupIdMapper:s}=Ue(),{printComments:a,printDanglingComments:n}=et(),{builders:{join:u,line:i,hardline:l,softline:p,group:y,indent:h,ifBreak:g}}=qe(),{hasComment:c,CommentCheckFlags:f}=Ke(),{getTypeParametersGroupId:F}=jr(),{printMethod:_}=qr(),{printOptionalToken:w,printTypeAnnotation:E,printDefiniteToken:N}=ct(),{printPropertyKey:x}=rr(),{printAssignment:I}=tr(),{printClassMemberDecorators:P}=nu();var D=s("heritageGroup");function C(b){return b.typeParameters&&!c(b.typeParameters,f.Trailing|f.Line)&&!function m(b){return["superClass","extends","mixins","implements"].filter((B=>Boolean(b[B]))).length>1}(b)}function o(b,B,k,M){let R=b.getValue();if(!t(R[M]))return"";let q=n(b,B,!0,(J=>{let{marker:L}=J;return L===M}));return[C(R)?g(" ",i,{groupId:F(R.typeParameters)}):i,q,q&&l,M,y(h([i,u([",",i],b.map(k,M))]))]}function d(b,B,k){let M=k("superClass");return"AssignmentExpression"===b.getParentNode().type?y(g(["(",h([p,M]),p,")"],M)):M}r.exports={printClass:function $(b,B,k){let M=b.getValue(),R=[];M.declare&&R.push("declare "),M.abstract&&R.push("abstract "),R.push("class");let q=M.id&&c(M.id,f.Trailing)||M.typeParameters&&c(M.typeParameters,f.Trailing)||M.superClass&&c(M.superClass)||t(M.extends)||t(M.mixins)||t(M.implements),J=[],L=[];if(M.id&&J.push(" ",k("id")),J.push(k("typeParameters")),M.superClass){let Q=[d(b,B,k),k("superTypeParameters")],V=b.call((j=>["extends ",a(j,Q,B)]),"superClass");q?L.push(i,y(V)):L.push(" ",V)}else L.push(o(b,B,k,"extends"));if(L.push(o(b,B,k,"mixins"),o(b,B,k,"implements")),q){let Q;Q=C(M)?[...J,h(L)]:h([...J,L]),R.push(y(Q,{id:D(M)}))}else R.push(...J,...L);return R.push(" ",k("body")),R},printClassMethod:function v(b,B,k){let M=b.getValue(),R=[];return t(M.decorators)&&R.push(P(b,B,k)),M.accessibility&&R.push(M.accessibility+" "),M.readonly&&R.push("readonly "),M.declare&&R.push("declare "),M.static&&R.push("static "),("TSAbstractMethodDefinition"===M.type||M.abstract)&&R.push("abstract "),M.override&&R.push("override "),R.push(_(b,B,k)),R},printClassProperty:function S(b,B,k){let M=b.getValue(),R=[],q=B.semi?";":"";return t(M.decorators)&&R.push(P(b,B,k)),M.accessibility&&R.push(M.accessibility+" "),M.declare&&R.push("declare "),M.static&&R.push("static "),("TSAbstractPropertyDefinition"===M.type||"TSAbstractAccessorProperty"===M.type||M.abstract)&&R.push("abstract "),M.override&&R.push("override "),M.readonly&&R.push("readonly "),M.variance&&R.push(k("variance")),("ClassAccessorProperty"===M.type||"AccessorProperty"===M.type||"TSAbstractAccessorProperty"===M.type)&&R.push("accessor "),R.push(x(b,B,k),w(b),N(b),E(b,B,k)),[I(b,B,k,R," =","value"),q]},printHardlineAfterHeritage:function T(b){return g(l,"",{groupId:D(b)})}}}}),bo=te({"src/language-js/print/interface.js"(e,r){ne();var{isNonEmptyArray:t}=Ue(),{builders:{join:s,line:a,group:n,indent:u,ifBreak:i}}=qe(),{hasComment:l,identity:p,CommentCheckFlags:y}=Ke(),{getTypeParametersGroupId:h}=jr(),{printTypeScriptModifiers:g}=ct();r.exports={printInterface:function c(f,F,_){let w=f.getValue(),E=[];w.declare&&E.push("declare "),"TSInterfaceDeclaration"===w.type&&E.push(w.abstract?"abstract ":"",g(f,F,_)),E.push("interface");let N=[],x=[];"InterfaceTypeAnnotation"!==w.type&&N.push(" ",_("id"),_("typeParameters"));let I=w.typeParameters&&!l(w.typeParameters,y.Trailing|y.Line);return t(w.extends)&&x.push(I?i(" ",a,{groupId:h(w.typeParameters)}):a,"extends ",(1===w.extends.length?p:u)(s([",",a],f.map(_,"extends")))),w.id&&l(w.id,y.Trailing)||t(w.extends)?I?E.push(n([...N,u(x)])):E.push(n(u([...N,...x]))):E.push(...N,...x),E.push(" ",_("body")),n(E)}}}}),To=te({"src/language-js/print/module.js"(e,r){ne();var{isNonEmptyArray:t}=Ue(),{builders:{softline:s,group:a,indent:n,join:u,line:i,ifBreak:l,hardline:p}}=qe(),{printDanglingComments:y}=et(),{hasComment:h,CommentCheckFlags:g,shouldPrintComma:c,needsHardlineAfterDanglingComment:f,isStringLiteral:F,rawText:_}=Ke(),{locStart:w,hasSameLoc:E}=ut(),{hasDecoratorsBeforeExport:N,printDecoratorsBeforeExport:x}=nu();function T(S,b,B){let k=S.getValue();if(!k.source)return"";let M=[];return C(k,b)||M.push(" from"),M.push(" ",B("source")),M}function m(S,b,B){let k=S.getValue();if(C(k,b))return"";let M=[" "];if(t(k.specifiers)){let R=[],q=[];S.each((()=>{let J=S.getValue().type;if("ExportNamespaceSpecifier"===J||"ExportDefaultSpecifier"===J||"ImportNamespaceSpecifier"===J||"ImportDefaultSpecifier"===J)R.push(B());else{if("ExportSpecifier"!==J&&"ImportSpecifier"!==J)throw new Error(`Unknown specifier type ${JSON.stringify(J)}`);q.push(B())}}),"specifiers"),M.push(u(", ",R)),q.length>0&&(R.length>0&&M.push(", "),q.length>1||R.length>0||k.specifiers.some((L=>h(L)))?M.push(a(["{",n([b.bracketSpacing?i:s,u([",",i],q)]),l(c(b)?",":""),b.bracketSpacing?i:s,"}"])):M.push(["{",b.bracketSpacing?" ":"",...q,b.bracketSpacing?" ":"","}"]))}else M.push("{}");return M}function C(S,b){let{type:B,importKind:k,source:M,specifiers:R}=S;return"ImportDeclaration"===B&&!t(R)&&"type"!==k&&!/{\s*}/.test(b.originalText.slice(w(S),w(M)))}function o(S,b,B){let k=S.getNode();return t(k.assertions)?[" assert {",b.bracketSpacing?" ":"",u(", ",S.map(B,"assertions")),b.bracketSpacing?" ":"","}"]:""}r.exports={printImportDeclaration:function I(S,b,B){let k=S.getValue(),M=b.semi?";":"",R=[],{importKind:q}=k;return R.push("import"),q&&"value"!==q&&R.push(" ",q),R.push(m(S,b,B),T(S,b,B),o(S,b,B),M),R},printExportDeclaration:function P(S,b,B){let k=S.getValue(),M=[];N(k)&&M.push(x(S,b,B));let{type:R,exportKind:q,declaration:J}=k;return M.push("export"),(k.default||"ExportDefaultDeclaration"===R)&&M.push(" default"),h(k,g.Dangling)&&(M.push(" ",y(S,b,!0)),f(k)&&M.push(p)),J?M.push(" ",B("declaration")):M.push("type"===q?" type":"",m(S,b,B),T(S,b,B),o(S,b,B)),function D(S,b){if(!b.semi)return!1;let{type:B,declaration:k}=S,M=S.default||"ExportDefaultDeclaration"===B;if(!k)return!0;let{type:R}=k;return!(!M||"ClassDeclaration"===R||"FunctionDeclaration"===R||"TSInterfaceDeclaration"===R||"DeclareClass"===R||"DeclareFunction"===R||"TSDeclareFunction"===R||"EnumDeclaration"===R)}(k,b)&&M.push(";"),M},printExportAllDeclaration:function $(S,b,B){let k=S.getValue(),M=b.semi?";":"",R=[],{exportKind:q,exported:J}=k;return R.push("export"),"type"===q&&R.push(" type"),R.push(" *"),J&&R.push(" as ",B("exported")),R.push(T(S,b,B),o(S,b,B),M),R},printModuleSpecifier:function d(S,b,B){let k=S.getNode(),{type:M}=k,R=[],q="ImportSpecifier"===M?k.importKind:k.exportKind;q&&"value"!==q&&R.push(q," ");let J=M.startsWith("Import"),L=J?"imported":"local",Q=J?"local":"exported",V=k[L],j=k[Q],Y="",ie="";return"ExportNamespaceSpecifier"===M||"ImportNamespaceSpecifier"===M?Y="*":V&&(Y=B(L)),j&&!function v(S){if("ImportSpecifier"!==S.type&&"ExportSpecifier"!==S.type)return!1;let{local:b,["ImportSpecifier"===S.type?"imported":"exported"]:B}=S;if(b.type!==B.type||!E(b,B))return!1;if(F(b))return b.value===B.value&&_(b)===_(B);if("Identifier"===b.type)return b.name===B.name;return!1}(k)&&(ie=B(Q)),R.push(Y,Y&&ie?" as ":"",ie),R}}}}),uu=te({"src/language-js/print/object.js"(e,r){ne();var{printDanglingComments:t}=et(),{builders:{line:s,softline:a,group:n,indent:u,ifBreak:i,hardline:l}}=qe(),{getLast:p,hasNewlineInRange:y,hasNewline:h,isNonEmptyArray:g}=Ue(),{shouldPrintComma:c,hasComment:f,getComments:F,CommentCheckFlags:_,isNextLineEmpty:w}=Ke(),{locStart:E,locEnd:N}=ut(),{printOptionalToken:x,printTypeAnnotation:I}=ct(),{shouldHugFunctionParameters:P}=Lr(),{shouldHugType:$}=Or(),{printHardlineAfterHeritage:D}=nr();r.exports={printObject:function T(m,C,o){let S,d=C.semi?";":"",v=m.getValue();S="TSTypeLiteral"===v.type?"members":"TSInterfaceBody"===v.type?"body":"properties";let b="ObjectTypeAnnotation"===v.type,B=[S];b&&B.push("indexers","callProperties","internalSlots");let k=B.map((W=>v[W][0])).sort(((W,K)=>E(W)-E(K)))[0],M=m.getParentNode(0),R=b&&M&&("InterfaceDeclaration"===M.type||"DeclareInterface"===M.type||"DeclareClass"===M.type)&&"body"===m.getName(),q="TSInterfaceBody"===v.type||R||"ObjectPattern"===v.type&&"FunctionDeclaration"!==M.type&&"FunctionExpression"!==M.type&&"ArrowFunctionExpression"!==M.type&&"ObjectMethod"!==M.type&&"ClassMethod"!==M.type&&"ClassPrivateMethod"!==M.type&&"AssignmentPattern"!==M.type&&"CatchClause"!==M.type&&v.properties.some((W=>W.value&&("ObjectPattern"===W.value.type||"ArrayPattern"===W.value.type)))||"ObjectPattern"!==v.type&&k&&y(C.originalText,E(v),E(k)),J=R?";":"TSInterfaceBody"===v.type||"TSTypeLiteral"===v.type?i(d,";"):",",L="RecordExpression"===v.type?"#{":v.exact?"{|":"{",Q=v.exact?"|}":"}",V=[];for(let W of B)m.each((K=>{let de=K.getValue();V.push({node:de,printed:o(),loc:E(de)})}),W);B.length>1&&V.sort(((W,K)=>W.loc-K.loc));let j=[],Y=V.map((W=>{let K=[...j,n(W.printed)];return j=[J,s],("TSPropertySignature"===W.node.type||"TSMethodSignature"===W.node.type||"TSConstructSignatureDeclaration"===W.node.type)&&f(W.node,_.PrettierIgnore)&&j.shift(),w(W.node,C)&&j.push(l),K}));if(v.inexact){let W;if(f(v,_.Dangling)){let K=f(v,_.Line);W=[t(m,C,!0),K||h(C.originalText,N(p(F(v))))?l:s,"..."]}else W=["..."];Y.push([...j,...W])}let ce,ie=p(v[S]),ee=!(v.inexact||ie&&"RestElement"===ie.type||ie&&("TSPropertySignature"===ie.type||"TSCallSignatureDeclaration"===ie.type||"TSMethodSignature"===ie.type||"TSConstructSignatureDeclaration"===ie.type)&&f(ie,_.PrettierIgnore));if(0===Y.length){if(!f(v,_.Dangling))return[L,Q,I(m,C,o)];ce=n([L,t(m,C),a,Q,x(m),I(m,C,o)])}else ce=[R&&g(v.properties)?D(M):"",L,u([C.bracketSpacing?s:a,...Y]),i(ee&&(","!==J||c(C))?J:""),C.bracketSpacing?s:a,Q,x(m),I(m,C,o)];return m.match((W=>"ObjectPattern"===W.type&&!W.decorators),((W,K,de)=>P(W)&&("params"===K||"parameters"===K||"this"===K||"rest"===K)&&0===de))||m.match($,((W,K)=>"typeAnnotation"===K),((W,K)=>"typeAnnotation"===K),((W,K,de)=>P(W)&&("params"===K||"parameters"===K||"this"===K||"rest"===K)&&0===de))||!q&&m.match((W=>"ObjectPattern"===W.type),(W=>"AssignmentExpression"===W.type||"VariableDeclarator"===W.type))?ce:n(ce,{shouldBreak:q})}}}}),dd=te({"src/language-js/print/flow.js"(e,r){ne();var t=Zt(),{printDanglingComments:s}=et(),{printString:a,printNumber:n}=Ue(),{builders:{hardline:u,softline:i,group:l,indent:p}}=qe(),{getParentExportDeclaration:y,isFunctionNotation:h,isGetterOrSetter:g,rawText:c,shouldPrintComma:f}=Ke(),{locStart:F,locEnd:_}=ut(),{replaceTextEndOfLine:w}=Yt(),{printClass:E}=nr(),{printOpaqueType:N,printTypeAlias:x,printIntersectionType:I,printUnionType:P,printFunctionType:$,printTupleType:D,printIndexedAccessType:T}=Or(),{printInterface:m}=bo(),{printTypeParameter:C,printTypeParameters:o}=jr(),{printExportDeclaration:d,printExportAllDeclaration:v}=To(),{printArrayItems:S}=er(),{printObject:b}=uu(),{printPropertyKey:B}=rr(),{printOptionalToken:k,printTypeAnnotation:M,printRestSpread:R}=ct();function J(L,Q){let V=y(L);return V?(t.strictEqual(V.type,"DeclareExportDeclaration"),Q):["declare ",Q]}r.exports={printFlow:function q(L,Q,V){let j=L.getValue(),Y=Q.semi?";":"",ie=[];switch(j.type){case"DeclareClass":return J(L,E(L,Q,V));case"DeclareFunction":return J(L,["function ",V("id"),j.predicate?" ":"",V("predicate"),Y]);case"DeclareModule":return J(L,["module ",V("id")," ",V("body")]);case"DeclareModuleExports":return J(L,["module.exports",": ",V("typeAnnotation"),Y]);case"DeclareVariable":return J(L,["var ",V("id"),Y]);case"DeclareOpaqueType":return J(L,N(L,Q,V));case"DeclareInterface":return J(L,m(L,Q,V));case"DeclareTypeAlias":return J(L,x(L,Q,V));case"DeclareExportDeclaration":return J(L,d(L,Q,V));case"DeclareExportAllDeclaration":return J(L,v(L,Q,V));case"OpaqueType":return N(L,Q,V);case"TypeAlias":return x(L,Q,V);case"IntersectionTypeAnnotation":return I(L,Q,V);case"UnionTypeAnnotation":return P(L,Q,V);case"FunctionTypeAnnotation":return $(L,Q,V);case"TupleTypeAnnotation":return D(L,Q,V);case"GenericTypeAnnotation":return[V("id"),o(L,Q,V,"typeParameters")];case"IndexedAccessType":case"OptionalIndexedAccessType":return T(L,Q,V);case"TypeAnnotation":return V("typeAnnotation");case"TypeParameter":return C(L,Q,V);case"TypeofTypeAnnotation":return["typeof ",V("argument")];case"ExistsTypeAnnotation":return"*";case"EmptyTypeAnnotation":return"empty";case"MixedTypeAnnotation":return"mixed";case"ArrayTypeAnnotation":return[V("elementType"),"[]"];case"BooleanLiteralTypeAnnotation":return String(j.value);case"EnumDeclaration":return["enum ",V("id")," ",V("body")];case"EnumBooleanBody":case"EnumNumberBody":case"EnumStringBody":case"EnumSymbolBody":if("EnumSymbolBody"===j.type||j.explicitType){let ee=null;switch(j.type){case"EnumBooleanBody":ee="boolean";break;case"EnumNumberBody":ee="number";break;case"EnumStringBody":ee="string";break;case"EnumSymbolBody":ee="symbol"}ie.push("of ",ee," ")}if(0!==j.members.length||j.hasUnknownMembers){let ee=j.members.length>0?[u,S(L,Q,"members",V),j.hasUnknownMembers||f(Q)?",":""]:[];ie.push(l(["{",p([...ee,...j.hasUnknownMembers?[u,"..."]:[]]),s(L,Q,!0),u,"}"]))}else ie.push(l(["{",s(L,Q),i,"}"]));return ie;case"EnumBooleanMember":case"EnumNumberMember":case"EnumStringMember":return[V("id")," = ","object"==typeof j.init?V("init"):String(j.init)];case"EnumDefaultedMember":return V("id");case"FunctionTypeParam":{let ee=j.name?V("name"):L.getParentNode().this===j?"this":"";return[ee,k(L),ee?": ":"",V("typeAnnotation")]}case"InterfaceDeclaration":case"InterfaceTypeAnnotation":return m(L,Q,V);case"ClassImplements":case"InterfaceExtends":return[V("id"),V("typeParameters")];case"NullableTypeAnnotation":return["?",V("typeAnnotation")];case"Variance":{let{kind:ee}=j;return t.ok("plus"===ee||"minus"===ee),"plus"===ee?"+":"-"}case"ObjectTypeCallProperty":return j.static&&ie.push("static "),ie.push(V("value")),ie;case"ObjectTypeIndexer":return[j.static?"static ":"",j.variance?V("variance"):"","[",V("id"),j.id?": ":"",V("key"),"]: ",V("value")];case"ObjectTypeProperty":{let ee="";return j.proto?ee="proto ":j.static&&(ee="static "),[ee,g(j)?j.kind+" ":"",j.variance?V("variance"):"",B(L,Q,V),k(L),h(j)?"":": ",V("value")]}case"ObjectTypeAnnotation":return b(L,Q,V);case"ObjectTypeInternalSlot":return[j.static?"static ":"","[[",V("id"),"]]",k(L),j.method?"":": ",V("value")];case"ObjectTypeSpreadProperty":return R(L,Q,V);case"QualifiedTypeofIdentifier":case"QualifiedTypeIdentifier":return[V("qualification"),".",V("id")];case"StringLiteralTypeAnnotation":return w(a(c(j),Q));case"NumberLiteralTypeAnnotation":t.strictEqual(typeof j.value,"number");case"BigIntLiteralTypeAnnotation":return j.extra?n(j.extra.raw):n(j.raw);case"TypeCastExpression":return["(",V("expression"),M(L,Q,V),")"];case"TypeParameterDeclaration":case"TypeParameterInstantiation":{let ee=o(L,Q,V,"params");if("flow"===Q.parser){let ce=F(j),W=_(j),K=Q.originalText.lastIndexOf("/*",ce),de=Q.originalText.indexOf("*/",W);if(-1!==K&&-1!==de){let ue=Q.originalText.slice(K+2,de).trim();if(ue.startsWith("::")&&!ue.includes("/*")&&!ue.includes("*/"))return["/*:: ",ee," */"]}}return ee}case"InferredPredicate":return"%checks";case"DeclaredPredicate":return["%checks(",V("value"),")"];case"AnyTypeAnnotation":return"any";case"BooleanTypeAnnotation":return"boolean";case"BigIntTypeAnnotation":return"bigint";case"NullLiteralTypeAnnotation":return"null";case"NumberTypeAnnotation":return"number";case"SymbolTypeAnnotation":return"symbol";case"StringTypeAnnotation":return"string";case"VoidTypeAnnotation":return"void";case"ThisTypeAnnotation":return"this";case"Node":case"Printable":case"SourceLocation":case"Position":case"Statement":case"Function":case"Pattern":case"Expression":case"Declaration":case"Specifier":case"NamedSpecifier":case"Comment":case"MemberTypeAnnotation":case"Type":throw new Error("unprintable type: "+JSON.stringify(j.type))}}}}}),gd=te({"src/language-js/utils/is-ts-keyword-type.js"(e,r){ne(),r.exports=function t(s){let{type:a}=s;return a.startsWith("TS")&&a.endsWith("Keyword")}}}),Bo=te({"src/language-js/print/ternary.js"(e,r){ne();var{hasNewlineInRange:t}=Ue(),{isJsxNode:s,getComments:a,isCallExpression:n,isMemberExpression:u,isTSTypeExpression:i}=Ke(),{locStart:l,locEnd:p}=ut(),y=Pt(),{builders:{line:h,softline:g,group:c,indent:f,align:F,ifBreak:_,dedent:w,breakParent:E}}=qe();function x(D,T,m){let C=D.getValue(),o="ConditionalExpression"===C.type,d=o?"alternate":"falseType",v=D.getParentNode(),S=o?m("test"):[m("checkType")," ","extends"," ",m("extendsType")];return v.type===C.type&&v[d]===C?F(2,S):S}var I=new Map([["AssignmentExpression","right"],["VariableDeclarator","init"],["ReturnStatement","argument"],["ThrowStatement","argument"],["UnaryExpression","argument"],["YieldExpression","argument"]]);r.exports={printTernary:function $(D,T,m){let L,Q,C=D.getValue(),o="ConditionalExpression"===C.type,d=o?"consequent":"trueType",v=o?"alternate":"falseType",S=o?["test"]:["checkType","extendsType"],b=C[d],B=C[v],k=[],M=!1,R=D.getParentNode(),q=R.type===C.type&&S.some((ue=>R[ue]===C)),J=R.type===C.type&&!q,V=0;do{Q=L||C,L=D.getParentNode(V),V++}while(L&&L.type===C.type&&S.every((ue=>L[ue]!==Q)));let j=L||R,Y=Q;if(o&&(s(C[S[0]])||s(b)||s(B)||function N(D){let T=[D];for(let m=0;m<T.length;m++){let C=T[m];for(let o of["test","consequent","alternate"]){let d=C[o];if(s(d))return!0;"ConditionalExpression"===d.type&&T.push(d)}}return!1}(Y))){M=!0,J=!0;let ue=z=>[_("("),f([g,z]),g,_(")")],Fe=z=>"NullLiteral"===z.type||"Literal"===z.type&&null===z.value||"Identifier"===z.type&&"undefined"===z.name;k.push(" ? ",Fe(b)?m(d):ue(m(d))," : ",B.type===C.type||Fe(B)?m(v):ue(m(v)))}else{let ue=[h,"? ",b.type===C.type?_("","("):"",F(2,m(d)),b.type===C.type?_("",")"):"",h,": ",B.type===C.type?m(v):F(2,m(v))];k.push(R.type!==C.type||R[v]===C||q?ue:T.useTabs?w(f(ue)):F(Math.max(0,T.tabWidth-2),ue))}let ee=[...S.map((ue=>a(C[ue]))),a(b),a(B)].flat().some((ue=>y(ue)&&t(T.originalText,l(ue),p(ue)))),W=!M&&(u(R)||"NGPipeExpression"===R.type&&R.left===C)&&!R.computed,K=function P(D){let T=D.getValue();if("ConditionalExpression"!==T.type)return!1;let m,C=T;for(let o=0;!m;o++){let d=D.getParentNode(o);n(d)&&d.callee===C||u(d)&&d.object===C||"TSNonNullExpression"===d.type&&d.expression===C?C=d:"NewExpression"===d.type&&d.callee===C||i(d)&&d.expression===C?(m=D.getParentNode(o+1),C=d):m=d}return C!==T&&m[I.get(m.type)]===C}(D),de=(ue=[x(D,0,m),J?k:f(k),o&&W&&!K?g:""],R===j?c(ue,{shouldBreak:ee}):ee?[ue,E]:ue);var ue;return q||K?c([f([g,de]),g]):de}}}}),No=te({"src/language-js/print/statement.js"(e,r){ne();var{builders:{hardline:t}}=qe(),s=qt(),{getLeftSidePathName:a,hasNakedLeftSide:n,isJsxNode:u,isTheOnlyJsxElementInMarkdown:i,hasComment:l,CommentCheckFlags:p,isNextLineEmpty:y}=Ke(),{shouldPrintParamsWithoutParens:h}=qr();function g(x,I,P,$){let D=x.getValue(),T=[],m="ClassBody"===D.type,C=function c(x){for(let I=x.length-1;I>=0;I--){let P=x[I];if("EmptyStatement"!==P.type)return P}}(D[$]);return x.each(((o,d,v)=>{let S=o.getValue();if("EmptyStatement"===S.type)return;let b=P();I.semi||m||i(I,o)||!function f(x,I){return"ExpressionStatement"===x.getNode().type&&x.call(($=>F($,I)),"expression")}(o,I)?T.push(b):l(S,p.Leading)?T.push(P([],{needsSemi:!0})):T.push(";",b),!I.semi&&m&&E(S)&&function N(x,I){let{type:P,name:$}=x.key;if(!(x.computed||"Identifier"!==P||"static"!==$&&"get"!==$&&"set"!==$&&"accessor"!==$||x.value||x.typeAnnotation))return!0;if(!I||I.static||I.accessibility)return!1;if(!I.computed){let D=I.key&&I.key.name;if("in"===D||"instanceof"===D)return!0}if(E(I)&&I.variance&&!I.static&&!I.declare)return!0;switch(I.type){case"ClassProperty":case"PropertyDefinition":case"TSAbstractPropertyDefinition":return I.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{if((I.value?I.value.async:I.async)||"get"===I.kind||"set"===I.kind)return!1;let T=I.value?I.value.generator:I.generator;return!(!I.computed&&!T)}case"TSIndexSignature":return!0}return!1}(S,v[d+1])&&T.push(";"),S!==C&&(T.push(t),y(S,I)&&T.push(t))}),$),T}function F(x,I){let P=x.getValue();switch(P.type){case"ParenthesizedExpression":case"TypeCastExpression":case"ArrayExpression":case"ArrayPattern":case"TemplateLiteral":case"TemplateElement":case"RegExpLiteral":return!0;case"ArrowFunctionExpression":if(!h(x,I))return!0;break;case"UnaryExpression":{let{prefix:$,operator:D}=P;if($&&("+"===D||"-"===D))return!0;break}case"BindExpression":if(!P.object)return!0;break;case"Literal":if(P.regex)return!0;break;default:if(u(P))return!0}return!!s(x,I)||!!n(P)&&x.call(($=>F($,I)),...a(x,P))}var E=x=>{let{type:I}=x;return"ClassProperty"===I||"PropertyDefinition"===I||"ClassPrivateProperty"===I||"ClassAccessorProperty"===I||"AccessorProperty"===I||"TSAbstractPropertyDefinition"===I||"TSAbstractAccessorProperty"===I};r.exports={printBody:function _(x,I,P){return g(x,I,P,"body")},printSwitchCaseConsequent:function w(x,I,P){return g(x,I,P,"consequent")}}}}),wo=te({"src/language-js/print/block.js"(e,r){ne();var{printDanglingComments:t}=et(),{isNonEmptyArray:s}=Ue(),{builders:{hardline:a,indent:n}}=qe(),{hasComment:u,CommentCheckFlags:i,isNextLineEmpty:l}=Ke(),{printHardlineAfterHeritage:p}=nr(),{printBody:y}=No();function g(c,f,F){let _=c.getValue(),w=s(_.directives),E=_.body.some((I=>"EmptyStatement"!==I.type)),N=u(_,i.Dangling);if(!w&&!E&&!N)return"";let x=[];if(w&&c.each(((I,P,$)=>{x.push(F()),(P<$.length-1||E||N)&&(x.push(a),l(I.getValue(),f)&&x.push(a))}),"directives"),E&&x.push(y(c,f,F)),N&&x.push(t(c,f,!0)),"Program"===_.type){let I=c.getParentNode();(!I||"ModuleExpression"!==I.type)&&x.push(a)}return x}r.exports={printBlock:function h(c,f,F){let _=c.getValue(),w=[];if("StaticBlock"===_.type&&w.push("static "),"ClassBody"===_.type&&s(_.body)){let N=c.getParentNode();w.push(p(N))}w.push("{");let E=g(c,f,F);if(E)w.push(n([a,E]),a);else{let N=c.getParentNode(),x=c.getParentNode(1);"ArrowFunctionExpression"===N.type||"FunctionExpression"===N.type||"FunctionDeclaration"===N.type||"ObjectMethod"===N.type||"ClassMethod"===N.type||"ClassPrivateMethod"===N.type||"ForStatement"===N.type||"WhileStatement"===N.type||"DoWhileStatement"===N.type||"DoExpression"===N.type||"CatchClause"===N.type&&!x.finalizer||"TSModuleDeclaration"===N.type||"TSDeclareFunction"===N.type||"StaticBlock"===_.type||"ClassBody"===_.type||w.push(a)}return w.push("}"),w},printBlockBody:g}}}),yd=te({"src/language-js/print/typescript.js"(e,r){ne();var{printDanglingComments:t}=et(),{hasNewlineInRange:s}=Ue(),{builders:{join:a,line:n,hardline:u,softline:i,group:l,indent:p,conditionalGroup:y,ifBreak:h}}=qe(),{isStringLiteral:g,getTypeScriptMappedTypeModifier:c,shouldPrintComma:f,isCallExpression:F,isMemberExpression:_}=Ke(),w=gd(),{locStart:E,locEnd:N}=ut(),{printOptionalToken:x,printTypeScriptModifiers:I}=ct(),{printTernary:P}=Bo(),{printFunctionParameters:$,shouldGroupFunctionParameters:D}=Lr(),{printTemplateLiteral:T}=jt(),{printArrayItems:m}=er(),{printObject:C}=uu(),{printClassProperty:o,printClassMethod:d}=nr(),{printTypeParameter:v,printTypeParameters:S}=jr(),{printPropertyKey:b}=rr(),{printFunction:B,printMethodInternal:k}=qr(),{printInterface:M}=bo(),{printBlock:R}=wo(),{printTypeAlias:q,printIntersectionType:J,printUnionType:L,printFunctionType:Q,printTupleType:V,printIndexedAccessType:j,printJSDocType:Y}=Or();r.exports={printTypescript:function ie(ee,ce,W){let K=ee.getValue();if(!K.type.startsWith("TS"))return;if(w(K))return K.type.slice(2,-7).toLowerCase();let de=ce.semi?";":"",ue=[];switch(K.type){case"TSThisType":return"this";case"TSTypeAssertion":{let Fe=!("ArrayExpression"===K.expression.type||"ObjectExpression"===K.expression.type),z=l(["<",p([i,W("typeAnnotation")]),i,">"]),U=[h("("),p([i,W("expression")]),i,h(")")];return Fe?y([[z,W("expression")],[z,l(U,{shouldBreak:!0})],[z,W("expression")]]):l([z,W("expression")])}case"TSDeclareFunction":return B(ee,W,ce);case"TSExportAssignment":return["export = ",W("expression"),de];case"TSModuleBlock":return R(ee,ce,W);case"TSInterfaceBody":case"TSTypeLiteral":return C(ee,ce,W);case"TSTypeAliasDeclaration":return q(ee,ce,W);case"TSQualifiedName":return a(".",[W("left"),W("right")]);case"TSAbstractMethodDefinition":case"TSDeclareMethod":return d(ee,ce,W);case"TSAbstractAccessorProperty":case"TSAbstractPropertyDefinition":return o(ee,ce,W);case"TSInterfaceHeritage":case"TSExpressionWithTypeArguments":return ue.push(W("expression")),K.typeParameters&&ue.push(W("typeParameters")),ue;case"TSTemplateLiteralType":return T(ee,W,ce);case"TSNamedTupleMember":return[W("label"),K.optional?"?":"",": ",W("elementType")];case"TSRestType":return["...",W("typeAnnotation")];case"TSOptionalType":return[W("typeAnnotation"),"?"];case"TSInterfaceDeclaration":return M(ee,ce,W);case"TSClassImplements":case"TSInstantiationExpression":return[W("expression"),W("typeParameters")];case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return S(ee,ce,W,"params");case"TSTypeParameter":return v(ee,ce,W);case"TSSatisfiesExpression":case"TSAsExpression":{let Fe="TSAsExpression"===K.type?"as":"satisfies";ue.push(W("expression"),` ${Fe} `,W("typeAnnotation"));let z=ee.getParentNode();return F(z)&&z.callee===K||_(z)&&z.object===K?l([p([i,...ue]),i]):ue}case"TSArrayType":return[W("elementType"),"[]"];case"TSPropertySignature":return K.readonly&&ue.push("readonly "),ue.push(b(ee,ce,W),x(ee)),K.typeAnnotation&&ue.push(": ",W("typeAnnotation")),K.initializer&&ue.push(" = ",W("initializer")),ue;case"TSParameterProperty":return K.accessibility&&ue.push(K.accessibility+" "),K.export&&ue.push("export "),K.static&&ue.push("static "),K.override&&ue.push("override "),K.readonly&&ue.push("readonly "),ue.push(W("parameter")),ue;case"TSTypeQuery":return["typeof ",W("exprName"),W("typeParameters")];case"TSIndexSignature":{let Fe=ee.getParentNode(),z=K.parameters.length>1?h(f(ce)?",":""):"",U=l([p([i,a([", ",i],ee.map(W,"parameters"))]),z,i]);return[K.export?"export ":"",K.accessibility?[K.accessibility," "]:"",K.static?"static ":"",K.readonly?"readonly ":"",K.declare?"declare ":"","[",K.parameters?U:"",K.typeAnnotation?"]: ":"]",K.typeAnnotation?W("typeAnnotation"):"","ClassBody"===Fe.type?de:""]}case"TSTypePredicate":return[K.asserts?"asserts ":"",W("parameterName"),K.typeAnnotation?[" is ",W("typeAnnotation")]:""];case"TSNonNullExpression":return[W("expression"),"!"];case"TSImportType":return[K.isTypeOf?"typeof ":"","import(",W(K.parameter?"parameter":"argument"),")",K.qualifier?[".",W("qualifier")]:"",S(ee,ce,W,"typeParameters")];case"TSLiteralType":return W("literal");case"TSIndexedAccessType":return j(ee,ce,W);case"TSConstructSignatureDeclaration":case"TSCallSignatureDeclaration":case"TSConstructorType":if("TSConstructorType"===K.type&&K.abstract&&ue.push("abstract "),"TSCallSignatureDeclaration"!==K.type&&ue.push("new "),ue.push(l($(ee,W,ce,!1,!0))),K.returnType||K.typeAnnotation){let Fe="TSConstructorType"===K.type;ue.push(Fe?" => ":": ",W("returnType"),W("typeAnnotation"))}return ue;case"TSTypeOperator":return[K.operator," ",W("typeAnnotation")];case"TSMappedType":{let Fe=s(ce.originalText,E(K),N(K));return l(["{",p([ce.bracketSpacing?n:i,W("typeParameter"),K.optional?c(K.optional,"?"):"",K.typeAnnotation?": ":"",W("typeAnnotation"),h(de)]),t(ee,ce,!0),ce.bracketSpacing?n:i,"}"],{shouldBreak:Fe})}case"TSMethodSignature":{let Fe=K.kind&&"method"!==K.kind?`${K.kind} `:"";ue.push(K.accessibility?[K.accessibility," "]:"",Fe,K.export?"export ":"",K.static?"static ":"",K.readonly?"readonly ":"",K.abstract?"abstract ":"",K.declare?"declare ":"",K.computed?"[":"",W("key"),K.computed?"]":"",x(ee));let z=$(ee,W,ce,!1,!0),U=K.returnType?"returnType":"typeAnnotation",Z=K[U],se=Z?W(U):"",fe=D(K,se);return ue.push(fe?l(z):z),Z&&ue.push(": ",l(se)),l(ue)}case"TSNamespaceExportDeclaration":return ue.push("export as namespace ",W("id")),ce.semi&&ue.push(";"),l(ue);case"TSEnumDeclaration":return K.declare&&ue.push("declare "),K.modifiers&&ue.push(I(ee,ce,W)),K.const&&ue.push("const "),ue.push("enum ",W("id")," "),0===K.members.length?ue.push(l(["{",t(ee,ce),i,"}"])):ue.push(l(["{",p([u,m(ee,ce,"members",W),f(ce,"es5")?",":""]),t(ee,ce,!0),u,"}"])),ue;case"TSEnumMember":return K.computed?ue.push("[",W("id"),"]"):ue.push(W("id")),K.initializer&&ue.push(" = ",W("initializer")),ue;case"TSImportEqualsDeclaration":return K.isExport&&ue.push("export "),ue.push("import "),K.importKind&&"value"!==K.importKind&&ue.push(K.importKind," "),ue.push(W("id")," = ",W("moduleReference")),ce.semi&&ue.push(";"),l(ue);case"TSExternalModuleReference":return["require(",W("expression"),")"];case"TSModuleDeclaration":{let Fe=ee.getParentNode(),z=g(K.id),U="TSModuleDeclaration"===Fe.type,Z=K.body&&"TSModuleDeclaration"===K.body.type;if(U)ue.push(".");else{K.declare&&ue.push("declare "),ue.push(I(ee,ce,W));let se=ce.originalText.slice(E(K),E(K.id));"Identifier"===K.id.type&&"global"===K.id.name&&!/namespace|module/.test(se)||ue.push(z||/(?:^|\s)module(?:\s|$)/.test(se)?"module ":"namespace ")}return ue.push(W("id")),Z?ue.push(W("body")):K.body?ue.push(" ",l(W("body"))):ue.push(de),ue}case"TSConditionalType":return P(ee,ce,W);case"TSInferType":return["infer"," ",W("typeParameter")];case"TSIntersectionType":return J(ee,ce,W);case"TSUnionType":return L(ee,ce,W);case"TSFunctionType":return Q(ee,ce,W);case"TSTupleType":return V(ee,ce,W);case"TSTypeReference":return[W("typeName"),S(ee,ce,W,"typeParameters")];case"TSTypeAnnotation":return W("typeAnnotation");case"TSEmptyBodyFunctionExpression":return k(ee,ce,W);case"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return Y(ee,W,"?");case"TSJSDocNonNullableType":return Y(ee,W,"!");default:throw new Error(`Unknown TypeScript node type: ${JSON.stringify(K.type)}.`)}}}}}),hd=te({"src/language-js/print/comment.js"(e,r){ne();var{hasNewline:t}=Ue(),{builders:{join:s,hardline:a},utils:{replaceTextEndOfLine:n}}=qe(),{isLineComment:u}=Ke(),{locStart:i,locEnd:l}=ut(),p=Pt();r.exports={printComment:function y(c,f){let F=c.getValue();if(u(F))return f.originalText.slice(i(F),l(F)).trimEnd();if(p(F)){if(function h(c){let f=`*${c.value}*`.split("\n");return f.length>1&&f.every((F=>"*"===F.trim()[0]))}(F)){let E=function g(c){let f=c.value.split("\n");return["/*",s(a,f.map(((F,_)=>0===_?F.trimEnd():" "+(_<f.length-1?F.trim():F.trimStart())))),"*/"]}(F);return F.trailing&&!t(f.originalText,i(F),{backwards:!0})?[a,E]:E}let _=l(F),w="*-/"===f.originalText.slice(_-3,_);return["/*",n(F.value),w?"*-/":"*/"]}throw new Error("Not a comment: "+JSON.stringify(F))}}}}),vd=te({"src/language-js/print/literal.js"(e,r){ne();var{printString:t,printNumber:s}=Ue(),{replaceTextEndOfLine:a}=Yt(),{printDirective:n}=ct();function l(y){return y.toLowerCase()}function p(y){let{pattern:h,flags:g}=y;return g=[...g].sort().join(""),`/${h}/${g}`}r.exports={printLiteral:function u(y,h){let g=y.getNode();switch(g.type){case"RegExpLiteral":return p(g);case"BigIntLiteral":return l(g.bigint||g.extra.raw);case"NumericLiteral":return s(g.extra.raw);case"StringLiteral":return a(t(g.extra.raw,h));case"NullLiteral":return"null";case"BooleanLiteral":return String(g.value);case"DecimalLiteral":return s(g.value)+"m";case"Literal":{if(g.regex)return p(g.regex);if(g.bigint)return l(g.raw);if(g.decimal)return s(g.decimal)+"m";let{value:c}=g;return"number"==typeof c?s(g.raw):"string"==typeof c?function i(y){if("expression"!==y.getName())return;let h=y.getParentNode();return"ExpressionStatement"===h.type&&h.directive}(y)?n(g.raw,h):a(t(g.raw,h)):String(c)}}}}}}),Cd=te({"src/language-js/printer-estree.js"(e,r){ne();var{printDanglingComments:t}=et(),{hasNewline:s}=Ue(),{builders:{join:a,line:n,hardline:u,softline:i,group:l,indent:p},utils:{replaceTextEndOfLine:y}}=qe(),h=td(),g=rd(),{insertPragma:c}=Co(),f=Eo(),F=qt(),_=Fo(),{hasFlowShorthandAnnotationComment:w,hasComment:E,CommentCheckFlags:N,isTheOnlyJsxElementInMarkdown:x,isLineComment:I,isNextLineEmpty:P,needsHardlineAfterDanglingComment:$,hasIgnoreComment:D,isCallExpression:T,isMemberExpression:m,markerForIfWithoutBlockAndSameLineComment:C}=Ke(),{locStart:o,locEnd:d}=ut(),v=Pt(),{printHtmlBinding:S,isVueEventBindingExpression:b}=pd(),{printAngular:B}=fd(),{printJsx:k,hasJsxIgnoreComment:M}=Dd(),{printFlow:R}=dd(),{printTypescript:q}=yd(),{printOptionalToken:J,printBindExpressionCallee:L,printTypeAnnotation:Q,adjustClause:V,printRestSpread:j,printDefiniteToken:Y,printDirective:ie}=ct(),{printImportDeclaration:ee,printExportDeclaration:ce,printExportAllDeclaration:W,printModuleSpecifier:K}=To(),{printTernary:de}=Bo(),{printTemplateLiteral:ue}=jt(),{printArray:Fe}=er(),{printObject:z}=uu(),{printClass:U,printClassMethod:Z,printClassProperty:se}=nr(),{printProperty:fe}=rr(),{printFunction:ge,printArrowFunction:he,printMethod:we,printReturnStatement:ke,printThrowStatement:Re}=qr(),{printCallExpression:Ne}=xo(),{printVariableDeclarator:Pe,printAssignmentExpression:oe}=tr(),{printBinaryishExpression:H}=ru(),{printSwitchCaseConsequent:pe}=No(),{printMemberExpression:X}=So(),{printBlock:le,printBlockBody:Ae}=wo(),{printComment:Ee}=hd(),{printLiteral:De}=vd(),{printDecorators:A}=nu();r.exports={preprocess:_,print:function G(Ce,Be,ve,ze){let be=function re(Ce,Be,ve,ze){let be=Ce.getValue(),Ye=Be.semi?";":"";if(!be)return"";if("string"==typeof be)return be;for(let Ie of[De,S,B,k,R,q]){let Oe=Ie(Ce,Be,ve);if(typeof Oe<"u")return Oe}let Se=[];switch(be.type){case"JsExpressionRoot":return ve("node");case"JsonRoot":return[ve("node"),u];case"File":return be.program&&be.program.interpreter&&Se.push(ve(["program","interpreter"])),Se.push(ve("program")),Se;case"Program":return Ae(Ce,Be,ve);case"EmptyStatement":return"";case"ExpressionStatement":{if("__vue_event_binding"===Be.parser||"__vue_ts_event_binding"===Be.parser){let Oe=Ce.getParentNode();if("Program"===Oe.type&&1===Oe.body.length&&Oe.body[0]===be)return[ve("expression"),b(be.expression)?";":""]}let Ie=t(Ce,Be,!0,(Oe=>{let{marker:Je}=Oe;return Je===C}));return[ve("expression"),x(Be,Ce)?"":Ye,Ie?[" ",Ie]:""]}case"ParenthesizedExpression":return E(be.expression)||"ObjectExpression"!==be.expression.type&&"ArrayExpression"!==be.expression.type?l(["(",p([i,ve("expression")]),i,")"]):["(",ve("expression"),")"];case"AssignmentExpression":return oe(Ce,Be,ve);case"VariableDeclarator":return Pe(Ce,Be,ve);case"BinaryExpression":case"LogicalExpression":return H(Ce,Be,ve);case"AssignmentPattern":return[ve("left")," = ",ve("right")];case"OptionalMemberExpression":case"MemberExpression":return X(Ce,Be,ve);case"MetaProperty":return[ve("meta"),".",ve("property")];case"BindExpression":return be.object&&Se.push(ve("object")),Se.push(l(p([i,L(Ce,Be,ve)]))),Se;case"Identifier":return[be.name,J(Ce),Y(Ce),Q(Ce,Be,ve)];case"V8IntrinsicIdentifier":return["%",be.name];case"SpreadElement":case"SpreadElementPattern":case"SpreadProperty":case"SpreadPropertyPattern":case"RestElement":return j(Ce,Be,ve);case"FunctionDeclaration":case"FunctionExpression":return ge(Ce,ve,Be,ze);case"ArrowFunctionExpression":return he(Ce,Be,ve,ze);case"YieldExpression":return Se.push("yield"),be.delegate&&Se.push("*"),be.argument&&Se.push(" ",ve("argument")),Se;case"AwaitExpression":if(Se.push("await"),be.argument){Se.push(" ",ve("argument"));let Ie=Ce.getParentNode();if(T(Ie)&&Ie.callee===be||m(Ie)&&Ie.object===be){Se=[p([i,...Se]),i];let Oe=Ce.findAncestor((Je=>"AwaitExpression"===Je.type||"BlockStatement"===Je.type));if(!Oe||"AwaitExpression"!==Oe.type)return l(Se)}}return Se;case"ExportDefaultDeclaration":case"ExportNamedDeclaration":return ce(Ce,Be,ve);case"ExportAllDeclaration":return W(Ce,Be,ve);case"ImportDeclaration":return ee(Ce,Be,ve);case"ImportSpecifier":case"ExportSpecifier":case"ImportNamespaceSpecifier":case"ExportNamespaceSpecifier":case"ImportDefaultSpecifier":case"ExportDefaultSpecifier":return K(Ce,Be,ve);case"ImportAttribute":return[ve("key"),": ",ve("value")];case"Import":return"import";case"BlockStatement":case"StaticBlock":case"ClassBody":return le(Ce,Be,ve);case"ThrowStatement":return Re(Ce,Be,ve);case"ReturnStatement":return ke(Ce,Be,ve);case"NewExpression":case"ImportExpression":case"OptionalCallExpression":case"CallExpression":return Ne(Ce,Be,ve);case"ObjectExpression":case"ObjectPattern":case"RecordExpression":return z(Ce,Be,ve);case"ObjectProperty":case"Property":return be.method||"get"===be.kind||"set"===be.kind?we(Ce,Be,ve):fe(Ce,Be,ve);case"ObjectMethod":return we(Ce,Be,ve);case"Decorator":return["@",ve("expression")];case"ArrayExpression":case"ArrayPattern":case"TupleExpression":return Fe(Ce,Be,ve);case"SequenceExpression":{let Ie=Ce.getParentNode(0);if("ExpressionStatement"===Ie.type||"ForStatement"===Ie.type){let Oe=[];return Ce.each(((Je,Te)=>{0===Te?Oe.push(ve()):Oe.push(",",p([n,ve()]))}),"expressions"),l(Oe)}return l(a([",",n],Ce.map(ve,"expressions")))}case"ThisExpression":return"this";case"Super":return"super";case"Directive":return[ve("value"),Ye];case"DirectiveLiteral":return ie(be.extra.raw,Be);case"UnaryExpression":return Se.push(be.operator),/[a-z]$/.test(be.operator)&&Se.push(" "),E(be.argument)?Se.push(l(["(",p([i,ve("argument")]),i,")"])):Se.push(ve("argument")),Se;case"UpdateExpression":return Se.push(ve("argument"),be.operator),be.prefix&&Se.reverse(),Se;case"ConditionalExpression":return de(Ce,Be,ve);case"VariableDeclaration":{let je,Ie=Ce.map(ve,"declarations"),Oe=Ce.getParentNode(),Je="ForStatement"===Oe.type||"ForInStatement"===Oe.type||"ForOfStatement"===Oe.type,Te=be.declarations.some((Me=>Me.init));return 1!==Ie.length||E(be.declarations[0])?Ie.length>0&&(je=p(Ie[0])):je=Ie[0],Se=[be.declare?"declare ":"",be.kind,je?[" ",je]:"",p(Ie.slice(1).map((Me=>[",",Te&&!Je?u:n,Me])))],Je&&Oe.body!==be||Se.push(Ye),l(Se)}case"WithStatement":return l(["with (",ve("object"),")",V(be.body,ve("body"))]);case"IfStatement":{let Ie=V(be.consequent,ve("consequent")),Oe=l(["if (",l([p([i,ve("test")]),i]),")",Ie]);if(Se.push(Oe),be.alternate){let Je=E(be.consequent,N.Trailing|N.Line)||$(be),Te="BlockStatement"===be.consequent.type&&!Je;Se.push(Te?" ":u),E(be,N.Dangling)&&Se.push(t(Ce,Be,!0),Je?u:" "),Se.push("else",l(V(be.alternate,ve("alternate"),"IfStatement"===be.alternate.type)))}return Se}case"ForStatement":{let Ie=V(be.body,ve("body")),Oe=t(Ce,Be,!0),Je=Oe?[Oe,i]:"";return be.init||be.test||be.update?[Je,l(["for (",l([p([i,ve("init"),";",n,ve("test"),";",n,ve("update")]),i]),")",Ie])]:[Je,l(["for (;;)",Ie])]}case"WhileStatement":return l(["while (",l([p([i,ve("test")]),i]),")",V(be.body,ve("body"))]);case"ForInStatement":return l(["for (",ve("left")," in ",ve("right"),")",V(be.body,ve("body"))]);case"ForOfStatement":return l(["for",be.await?" await":""," (",ve("left")," of ",ve("right"),")",V(be.body,ve("body"))]);case"DoWhileStatement":{let Ie=V(be.body,ve("body"));return Se=[l(["do",Ie])],"BlockStatement"===be.body.type?Se.push(" "):Se.push(u),Se.push("while (",l([p([i,ve("test")]),i]),")",Ye),Se}case"DoExpression":return[be.async?"async ":"","do ",ve("body")];case"BreakStatement":return Se.push("break"),be.label&&Se.push(" ",ve("label")),Se.push(Ye),Se;case"ContinueStatement":return Se.push("continue"),be.label&&Se.push(" ",ve("label")),Se.push(Ye),Se;case"LabeledStatement":return"EmptyStatement"===be.body.type?[ve("label"),":;"]:[ve("label"),": ",ve("body")];case"TryStatement":return["try ",ve("block"),be.handler?[" ",ve("handler")]:"",be.finalizer?[" finally ",ve("finalizer")]:""];case"CatchClause":if(be.param){let Ie=E(be.param,(Je=>!v(Je)||Je.leading&&s(Be.originalText,d(Je))||Je.trailing&&s(Be.originalText,o(Je),{backwards:!0}))),Oe=ve("param");return["catch ",Ie?["(",p([i,Oe]),i,") "]:["(",Oe,") "],ve("body")]}return["catch ",ve("body")];case"SwitchStatement":return[l(["switch (",p([i,ve("discriminant")]),i,")"])," {",be.cases.length>0?p([u,a(u,Ce.map(((Ie,Oe,Je)=>{let Te=Ie.getValue();return[ve(),Oe!==Je.length-1&&P(Te,Be)?u:""]}),"cases"))]):"",u,"}"];case"SwitchCase":{be.test?Se.push("case ",ve("test"),":"):Se.push("default:"),E(be,N.Dangling)&&Se.push(" ",t(Ce,Be,!0));let Ie=be.consequent.filter((Oe=>"EmptyStatement"!==Oe.type));if(Ie.length>0){let Oe=pe(Ce,Be,ve);Se.push(1===Ie.length&&"BlockStatement"===Ie[0].type?[" ",Oe]:p([u,Oe]))}return Se}case"DebuggerStatement":return["debugger",Ye];case"ClassDeclaration":case"ClassExpression":return U(Ce,Be,ve);case"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":return Z(Ce,Be,ve);case"ClassProperty":case"PropertyDefinition":case"ClassPrivateProperty":case"ClassAccessorProperty":case"AccessorProperty":return se(Ce,Be,ve);case"TemplateElement":return y(be.value.raw);case"TemplateLiteral":return ue(Ce,ve,Be);case"TaggedTemplateExpression":return[ve("tag"),ve("typeParameters"),ve("quasi")];case"PrivateIdentifier":return["#",ve("name")];case"PrivateName":return["#",ve("id")];case"InterpreterDirective":return Se.push("#!",be.value,u),P(be,Be)&&Se.push(u),Se;case"TopicReference":return"%";case"ArgumentPlaceholder":return"?";case"ModuleExpression":{Se.push("module {");let Ie=ve("body");return Ie&&Se.push(p([u,Ie]),u),Se.push("}"),Se}default:throw new Error("unknown type: "+JSON.stringify(be.type))}}(Ce,Be,ve,ze);if(!be)return"";let Ye=Ce.getValue(),{type:Se}=Ye;if("ClassMethod"===Se||"ClassPrivateMethod"===Se||"ClassProperty"===Se||"ClassAccessorProperty"===Se||"AccessorProperty"===Se||"TSAbstractAccessorProperty"===Se||"PropertyDefinition"===Se||"TSAbstractPropertyDefinition"===Se||"ClassPrivateProperty"===Se||"MethodDefinition"===Se||"TSAbstractMethodDefinition"===Se||"TSDeclareMethod"===Se)return be;let Ie=[be],Oe=A(Ce,Be,ve),Je="ClassExpression"===Ye.type&&Oe;if(Oe&&(Ie=[...Oe,be],!Je))return l(Ie);if(!F(Ce,Be))return ze&&ze.needsSemi&&Ie.unshift(";"),1===Ie.length&&Ie[0]===be?be:Ie;if(Je&&(Ie=[p([n,...Ie])]),Ie.unshift("("),ze&&ze.needsSemi&&Ie.unshift(";"),w(Ye)){let[je]=Ye.trailingComments;Ie.push(" /*",je.value.trimStart(),"*/"),je.printed=!0}return Je&&Ie.push(n),Ie.push(")"),Ie},embed:h,insertPragma:c,massageAstNode:g,hasPrettierIgnore:Ce=>D(Ce)||M(Ce),willPrintOwnComments:f.willPrintOwnComments,canAttachComment:function ye(Ce){return Ce.type&&!v(Ce)&&!I(Ce)&&"EmptyStatement"!==Ce.type&&"TemplateElement"!==Ce.type&&"Import"!==Ce.type&&"TSEmptyBodyFunctionExpression"!==Ce.type},printComment:Ee,isBlockComment:v,handleComments:{avoidAstMutation:!0,ownLine:f.handleOwnLineComment,endOfLine:f.handleEndOfLineComment,remaining:f.handleRemainingComment},getCommentChildNodes:f.getCommentChildNodes}}}),Ed=te({"src/language-js/printer-estree-json.js"(e,r){ne();var{builders:{hardline:t,indent:s,join:a}}=qe(),n=Fo();function i(y){return"key"===y.getName()&&"ObjectProperty"===y.getParentNode().type}var l=new Set(["start","end","extra","loc","comments","leadingComments","trailingComments","innerComments","errors","range","tokens"]);function p(y,h){let{type:g}=y;if("ObjectProperty"!==g){if("UnaryExpression"===g&&"+"===y.operator)return h.argument;if("ArrayExpression"!==g)return"TemplateLiteral"===g?{type:"StringLiteral",value:y.quasis[0].value.cooked}:void 0;for(let[c,f]of y.elements.entries())null===f&&h.elements.splice(c,0,{type:"NullLiteral"})}else{let{key:c}=y;"Identifier"===c.type?h.key={type:"StringLiteral",value:c.name}:"NumericLiteral"===c.type&&(h.key={type:"StringLiteral",value:String(c.value)})}}p.ignoredProperties=l,r.exports={preprocess:n,print:function u(y,h,g){let c=y.getValue();switch(c.type){case"JsonRoot":return[g("node"),t];case"ArrayExpression":{if(0===c.elements.length)return"[]";let f=y.map((()=>null===y.getValue()?"null":g()),"elements");return["[",s([t,a([",",t],f)]),t,"]"]}case"ObjectExpression":return 0===c.properties.length?"{}":["{",s([t,a([",",t],y.map(g,"properties"))]),t,"}"];case"ObjectProperty":return[g("key"),": ",g("value")];case"UnaryExpression":return["+"===c.operator?"":c.operator,g("argument")];case"NullLiteral":return"null";case"BooleanLiteral":return c.value?"true":"false";case"StringLiteral":return JSON.stringify(c.value);case"NumericLiteral":return i(y)?JSON.stringify(String(c.value)):JSON.stringify(c.value);case"Identifier":return i(y)?JSON.stringify(c.name):c.name;case"TemplateLiteral":return g(["quasis",0]);case"TemplateElement":return JSON.stringify(c.value.cooked);default:throw new Error("unknown type: "+JSON.stringify(c.type))}},massageAstNode:p}}}),Mt=te({"src/common/common-options.js"(e,r){ne();var t="Common";r.exports={bracketSpacing:{since:"0.0.0",category:t,type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{since:"0.0.0",category:t,type:"boolean",default:!1,description:"Use single quotes instead of double quotes."},proseWrap:{since:"1.8.2",category:t,type:"choice",default:[{since:"1.8.2",value:!0},{since:"1.9.0",value:"preserve"}],description:"How to wrap prose.",choices:[{since:"1.9.0",value:"always",description:"Wrap prose if it exceeds the print width."},{since:"1.9.0",value:"never",description:"Do not wrap prose."},{since:"1.9.0",value:"preserve",description:"Wrap prose as-is."}]},bracketSameLine:{since:"2.4.0",category:t,type:"boolean",default:!1,description:"Put > of opening tags on the last line instead of on a new line."},singleAttributePerLine:{since:"2.6.0",category:t,type:"boolean",default:!1,description:"Enforce single attribute per line in HTML, Vue and JSX."}}}}),Fd=te({"src/language-js/options.js"(e,r){ne();var t=Mt(),s="JavaScript";r.exports={arrowParens:{since:"1.9.0",category:s,type:"choice",default:[{since:"1.9.0",value:"avoid"},{since:"2.0.0",value:"always"}],description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSameLine:t.bracketSameLine,bracketSpacing:t.bracketSpacing,jsxBracketSameLine:{since:"0.17.0",category:s,type:"boolean",description:"Put > on the last line instead of at a new line.",deprecated:"2.4.0"},semi:{since:"1.0.0",category:s,type:"boolean",default:!0,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},singleQuote:t.singleQuote,jsxSingleQuote:{since:"1.15.0",category:s,type:"boolean",default:!1,description:"Use single quotes in JSX."},quoteProps:{since:"1.17.0",category:s,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{since:"0.0.0",category:s,type:"choice",default:[{since:"0.0.0",value:!1},{since:"0.19.0",value:"none"},{since:"2.0.0",value:"es5"}],description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."},{value:"all",description:"Trailing commas wherever possible (including function arguments)."}]},singleAttributePerLine:t.singleAttributePerLine}}}),Ad=te({"src/language-js/parse/parsers.js"(){ne()}}),Ln=te({"node_modules/linguist-languages/data/JavaScript.json"(e,r){r.exports={name:"JavaScript",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:["js","node"],extensions:[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".javascript",".jsb",".jscad",".jsfl",".jslib",".jsm",".jspre",".jss",".jsx",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib"],filenames:["Jakefile"],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell"],languageId:183}}}),Sd=te({"node_modules/linguist-languages/data/TypeScript.json"(e,r){r.exports={name:"TypeScript",type:"programming",color:"#3178c6",aliases:["ts"],interpreters:["deno","ts-node"],extensions:[".ts",".cts",".mts"],tmScope:"source.ts",aceMode:"typescript",codemirrorMode:"javascript",codemirrorMimeType:"application/typescript",languageId:378}}}),xd=te({"node_modules/linguist-languages/data/TSX.json"(e,r){r.exports={name:"TSX",type:"programming",color:"#3178c6",group:"TypeScript",extensions:[".tsx"],tmScope:"source.tsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",languageId:94901924}}}),wa=te({"node_modules/linguist-languages/data/JSON.json"(e,r){r.exports={name:"JSON",type:"data",color:"#292929",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",aliases:["geojson","jsonl","topojson"],extensions:[".json",".4DForm",".4DProject",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".jsonl",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"],filenames:[".arcconfig",".auto-changelog",".c8rc",".htmlhintrc",".imgbotconfig",".nycrc",".tern-config",".tern-project",".watchmanconfig","Pipfile.lock","composer.lock","mcmod.info"],languageId:174}}}),bd=te({"node_modules/linguist-languages/data/JSON with Comments.json"(e,r){r.exports={name:"JSON with Comments",type:"data",color:"#292929",group:"JSON",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",aliases:["jsonc"],extensions:[".jsonc",".code-snippets",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"],filenames:[".babelrc",".devcontainer.json",".eslintrc.json",".jscsrc",".jshintrc",".jslintrc","api-extractor.json","devcontainer.json","jsconfig.json","language-configuration.json","tsconfig.json","tslint.json"],languageId:423}}}),Td=te({"node_modules/linguist-languages/data/JSON5.json"(e,r){r.exports={name:"JSON5",type:"data",color:"#267CB9",extensions:[".json5"],tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"application/json",languageId:175}}}),Bd=te({"src/language-js/index.js"(e,r){ne();var t=_t(),s=Cd(),a=Ed(),n=Fd(),u=Ad(),i=[t(Ln(),(p=>({since:"0.0.0",parsers:["babel","acorn","espree","meriyah","babel-flow","babel-ts","flow","typescript"],vscodeLanguageIds:["javascript","mongo"],interpreters:[...p.interpreters,"zx"],extensions:[...p.extensions.filter((y=>".jsx"!==y)),".wxs"]}))),t(Ln(),(()=>({name:"Flow",since:"0.0.0",parsers:["flow","babel-flow"],vscodeLanguageIds:["javascript"],aliases:[],filenames:[],extensions:[".js.flow"]}))),t(Ln(),(()=>({name:"JSX",since:"0.0.0",parsers:["babel","babel-flow","babel-ts","flow","typescript","espree","meriyah"],vscodeLanguageIds:["javascriptreact"],aliases:void 0,filenames:void 0,extensions:[".jsx"],group:"JavaScript",interpreters:void 0,tmScope:"source.js.jsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",color:void 0}))),t(Sd(),(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]}))),t(xd(),(()=>({since:"1.4.0",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]}))),t(wa(),(()=>({name:"JSON.stringify",since:"1.13.0",parsers:["json-stringify"],vscodeLanguageIds:["json"],extensions:[".importmap"],filenames:["package.json","package-lock.json","composer.json"]}))),t(wa(),(p=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["json"],extensions:p.extensions.filter((y=>".jsonl"!==y))}))),t(bd(),(p=>({since:"1.5.0",parsers:["json"],vscodeLanguageIds:["jsonc"],filenames:[...p.filenames,".eslintrc",".swcrc"]}))),t(Td(),(()=>({since:"1.13.0",parsers:["json5"],vscodeLanguageIds:["json5"]})))],l={estree:s,"estree-json":a};r.exports={languages:i,options:n,printers:l,parsers:u}}}),Nd=te({"src/language-css/clean.js"(e,r){ne();var{isFrontMatterNode:t}=Ue(),s=lt(),a=new Set(["raw","raws","sourceIndex","source","before","after","trailingComma"]);function n(i,l,p){if(t(i)&&"yaml"===i.lang&&delete l.value,"css-comment"===i.type&&"css-root"===p.type&&p.nodes.length>0&&((p.nodes[0]===i||t(p.nodes[0])&&p.nodes[1]===i)&&(delete l.text,/^\*\s*@(?:format|prettier)\s*$/.test(i.text))||"css-root"===p.type&&s(p.nodes)===i))return null;if("value-root"===i.type&&delete l.text,("media-query"===i.type||"media-query-list"===i.type||"media-feature-expression"===i.type)&&delete l.value,"css-rule"===i.type&&delete l.params,"selector-combinator"===i.type&&(l.value=l.value.replace(/\s+/g," ")),"media-feature"===i.type&&(l.value=l.value.replace(/ /g,"")),("value-word"===i.type&&(i.isColor&&i.isHex||["initial","inherit","unset","revert"].includes(l.value.replace().toLowerCase()))||"media-feature"===i.type||"selector-root-invalid"===i.type||"selector-pseudo"===i.type)&&(l.value=l.value.toLowerCase()),"css-decl"===i.type&&(l.prop=l.prop.toLowerCase()),("css-atrule"===i.type||"css-import"===i.type)&&(l.name=l.name.toLowerCase()),"value-number"===i.type&&(l.unit=l.unit.toLowerCase()),("media-feature"===i.type||"media-keyword"===i.type||"media-type"===i.type||"media-unknown"===i.type||"media-url"===i.type||"media-value"===i.type||"selector-attribute"===i.type||"selector-string"===i.type||"selector-class"===i.type||"selector-combinator"===i.type||"value-string"===i.type)&&l.value&&(l.value=function u(i){return i.replace(/'/g,'"').replace(/\\([^\dA-Fa-f])/g,"$1")}(l.value)),"selector-attribute"===i.type&&(l.attribute=l.attribute.trim(),l.namespace&&"string"==typeof l.namespace&&(l.namespace=l.namespace.trim(),0===l.namespace.length&&(l.namespace=!0)),l.value&&(l.value=l.value.trim().replace(/^["']|["']$/g,""),delete l.quoted)),("media-value"===i.type||"media-type"===i.type||"value-number"===i.type||"selector-root-invalid"===i.type||"selector-class"===i.type||"selector-combinator"===i.type||"selector-tag"===i.type)&&l.value&&(l.value=l.value.replace(/([\d+.Ee-]+)([A-Za-z]*)/g,((y,h,g)=>{let c=Number(h);return Number.isNaN(c)?y:c+g.toLowerCase()}))),"selector-tag"===i.type){let y=i.value.toLowerCase();["from","to"].includes(y)&&(l.value=y)}if("css-atrule"===i.type&&"supports"===i.name.toLowerCase()&&delete l.value,"selector-unknown"===i.type&&delete l.value,"value-comma_group"===i.type){let y=i.groups.findIndex((h=>"value-number"===h.type&&"..."===h.unit));-1!==y&&(l.groups[y].unit="",l.groups.splice(y+1,0,{type:"value-word",value:"...",isColor:!1,isHex:!1}))}return"value-comma_group"===i.type&&i.groups.some((y=>"value-atword"===y.type&&y.value.endsWith("[")||"value-word"===y.type&&y.value.startsWith("]")))?{type:"value-atword",value:i.groups.map((y=>y.value)).join(""),group:{open:null,close:null,groups:[],type:"value-paren_group"}}:void 0}n.ignoredProperties=a,r.exports=n}}),su=te({"src/utils/front-matter/print.js"(e,r){ne();var{builders:{hardline:t,markAsRoot:s}}=qe();r.exports=function a(n,u){if("yaml"===n.lang){let i=n.value.trim(),l=i?u(i,{parser:"yaml"},{stripTrailingHardline:!0}):"";return s([n.startDelimiter,t,l,l?t:"",n.endDelimiter])}}}}),wd=te({"src/language-css/embed.js"(e,r){ne();var{builders:{hardline:t}}=qe(),s=su();r.exports=function a(n,u,i){let l=n.getValue();if("front-matter"===l.type){let p=s(l,i);return p?[p,t]:""}}}}),_o=te({"src/utils/front-matter/parse.js"(e,r){ne();var t=new RegExp("^(?<startDelimiter>-{3}|\\+{3})(?<language>[^\\n]*)\\n(?:|(?<value>.*?)\\n)(?<endDelimiter>\\k<startDelimiter>|\\.{3})[^\\S\\n]*(?:\\n|$)","s");r.exports=function s(a){let n=a.match(t);if(!n)return{content:a};let{startDelimiter:u,language:i,value:l="",endDelimiter:p}=n.groups,y=i.trim()||"yaml";if("+++"===u&&(y="toml"),"yaml"!==y&&u!==p)return{content:a};let[h]=n;return{frontMatter:{type:"front-matter",lang:y,value:l,startDelimiter:u,endDelimiter:p,raw:h.replace(/\n$/,"")},content:h.replace(/[^\n]/g," ")+a.slice(h.length)}}}}),_d=te({"src/language-css/pragma.js"(e,r){ne();var t=Co(),s=_o();r.exports={hasPragma:function a(u){return t.hasPragma(s(u).content)},insertPragma:function n(u){let{frontMatter:i,content:l}=s(u);return(i?i.raw+"\n\n":"")+t.insertPragma(l)}}}}),Pd=te({"src/language-css/utils/index.js"(e,r){ne();var t=new Set(["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"]);function s(z,U){let fe,Z=Array.isArray(U)?U:[U],se=-1;for(;fe=z.getParentNode(++se);)if(Z.includes(fe.type))return se;return-1}function a(z,U){let Z=s(z,U);return-1===Z?null:z.getParentNode(Z)}var u=new Set(["initial","inherit","unset","revert"]);function x(z){return"value-operator"===z.type&&"*"===z.value}function I(z){return"value-operator"===z.type&&"/"===z.value}function P(z){return"value-operator"===z.type&&"+"===z.value}function $(z){return"value-operator"===z.type&&"-"===z.value}function D(z){return"value-operator"===z.type&&"%"===z.value}function R(z){var U,Z;return"value-comma_group"===z.type&&"value-colon"===(null===(U=z.groups)||void 0===U||null===(Z=U[1])||void 0===Z?void 0:Z.type)}function q(z){var U;return"value-paren_group"===z.type&&(null===(U=z.groups)||void 0===U?void 0:U[0])&&R(z.groups[0])}function ie(z){return"value-colon"===z?.type}r.exports={getAncestorCounter:s,getAncestorNode:a,getPropOfDeclNode:function n(z){var U;let Z=a(z,"css-decl");return null==Z||null===(U=Z.prop)||void 0===U?void 0:U.toLowerCase()},maybeToLowerCase:function p(z){return z.includes("$")||z.includes("@")||z.includes("#")||z.startsWith("%")||z.startsWith("--")||z.startsWith(":--")||z.includes("(")&&z.includes(")")?z:z.toLowerCase()},insideValueFunctionNode:function y(z,U){var Z;let se=a(z,"value-func");return(null==se||null===(Z=se.value)||void 0===Z?void 0:Z.toLowerCase())===U},insideICSSRuleNode:function h(z){var U;let Z=a(z,"css-rule"),se=null==Z||null===(U=Z.raws)||void 0===U?void 0:U.selector;return se&&(se.startsWith(":import")||se.startsWith(":export"))},insideAtRuleNode:function g(z,U){let Z=Array.isArray(U)?U:[U],se=a(z,"css-atrule");return se&&Z.includes(se.name.toLowerCase())},insideURLFunctionInImportAtRuleNode:function c(z){let U=z.getValue(),Z=a(z,"css-atrule");return"import"===Z?.name&&"url"===U.groups[0].value&&2===U.groups.length},isKeyframeAtRuleKeywords:function l(z,U){let Z=a(z,"css-atrule");return Z?.name&&Z.name.toLowerCase().endsWith("keyframes")&&["from","to"].includes(U.toLowerCase())},isWideKeywords:function i(z){return u.has(z.toLowerCase())},isLastNode:function F(z,U){var Z;let se=null===(Z=z.getParentNode())||void 0===Z?void 0:Z.nodes;return se&&se.indexOf(U)===se.length-1},isSCSSControlDirectiveNode:function o(z){return"css-atrule"===z.type&&["if","else","for","each","while"].includes(z.name)},isDetachedRulesetDeclarationNode:function _(z){let{selector:U}=z;return!!U&&("string"==typeof U&&/^@.+:.*$/.test(U)||U.value&&/^@.+:.*$/.test(U.value))},isRelationalOperatorNode:function C(z){return"value-word"===z.type&&["<",">","<=",">="].includes(z.value)},isEqualityOperatorNode:function m(z){return"value-word"===z.type&&["==","!="].includes(z.value)},isMultiplicationNode:x,isDivisionNode:I,isAdditionNode:P,isSubtractionNode:$,isModuloNode:D,isMathOperatorNode:function T(z){return x(z)||I(z)||P(z)||$(z)||D(z)},isEachKeywordNode:function N(z){return"value-word"===z.type&&"in"===z.value},isForKeywordNode:function w(z){return"value-word"===z.type&&["from","through","end"].includes(z.value)},isURLFunctionNode:function f(z){return"value-func"===z.type&&"url"===z.value.toLowerCase()},isIfElseKeywordNode:function E(z){return"value-word"===z.type&&["and","or","not"].includes(z.value)},hasComposesNode:function B(z){var U,Z;return"value-root"===(null===(U=z.value)||void 0===U?void 0:U.type)&&"value-value"===(null===(Z=z.value.group)||void 0===Z?void 0:Z.type)&&"composes"===z.prop.toLowerCase()},hasParensAroundNode:function k(z){var U,Z,se;return"value-paren_group"===(null===(U=z.value)||void 0===U||null===(Z=U.group)||void 0===Z||null===(se=Z.group)||void 0===se?void 0:se.type)&&null!==z.value.group.group.open&&null!==z.value.group.group.close},hasEmptyRawBefore:function M(z){var U;return""===(null===(U=z.raws)||void 0===U?void 0:U.before)},isDetachedRulesetCallNode:function d(z){var U;return(null===(U=z.raws)||void 0===U?void 0:U.params)&&/^\(\s*\)$/.test(z.raws.params)},isTemplatePlaceholderNode:function v(z){return z.name.startsWith("prettier-placeholder")},isTemplatePropNode:function S(z){return z.prop.startsWith("@prettier-placeholder")},isPostcssSimpleVarNode:function b(z,U){return"$$"===z.value&&"value-func"===z.type&&"value-word"===U?.type&&!U.raws.before},isKeyValuePairNode:R,isKeyValuePairInParenGroupNode:q,isKeyInValuePairNode:function ee(z,U){if(!R(U))return!1;let{groups:Z}=U,se=Z.indexOf(z);return-1!==se&&ie(Z[se+1])},isSCSSMapItemNode:function J(z){var U;let Z=z.getValue();if(0===Z.groups.length)return!1;let se=z.getParentNode(1);if(!(q(Z)||se&&q(se)))return!1;let fe=a(z,"css-decl");return!!(null!=fe&&null!==(U=fe.prop)&&void 0!==U&&U.startsWith("$")||q(se)||"value-func"===se.type)},isInlineValueCommentNode:function L(z){return"value-comment"===z.type&&z.inline},isHashNode:function Q(z){return"value-word"===z.type&&"#"===z.value},isLeftCurlyBraceNode:function V(z){return"value-word"===z.type&&"{"===z.value},isRightCurlyBraceNode:function j(z){return"value-word"===z.type&&"}"===z.value},isWordNode:function Y(z){return["value-word","value-atword"].includes(z.type)},isColonNode:ie,isMediaAndSupportsKeywords:function ce(z){return z.value&&["not","and","or"].includes(z.value.toLowerCase())},isColorAdjusterFuncNode:function W(z){return"value-func"===z.type&&t.has(z.value.toLowerCase())},lastLineHasInlineComment:function K(z){return/\/\//.test(z.split(/[\n\r]/).pop())},isAtWordPlaceholderNode:function de(z){return"value-atword"===z?.type&&z.value.startsWith("prettier-placeholder-")},isConfigurationNode:function ue(z,U){var Z,se;if("("!==(null===(Z=z.open)||void 0===Z?void 0:Z.value)||")"!==(null===(se=z.close)||void 0===se?void 0:se.value)||z.groups.some((fe=>"value-comma_group"!==fe.type)))return!1;if("value-comma_group"===U.type){let fe=U.groups.indexOf(z)-1,ge=U.groups[fe];if("value-word"===ge?.type&&"with"===ge.value)return!0}return!1},isParenGroupNode:function Fe(z){var U,Z;return"value-paren_group"===z.type&&"("===(null===(U=z.open)||void 0===U?void 0:U.value)&&")"===(null===(Z=z.close)||void 0===Z?void 0:Z.value)}}}}),Id=te({"src/utils/line-column-to-index.js"(e,r){ne(),r.exports=function(t,s){let a=0;for(let n=0;n<t.line-1;++n)a=s.indexOf("\n",a)+1;return a+t.column}}}),kd=te({"src/language-css/loc.js"(e,r){ne();var{skipEverythingButNewLine:t}=Pr(),s=lt(),a=Id();function n(c,f){return"number"==typeof c.sourceIndex?c.sourceIndex:c.source?a(c.source.start,f)-1:null}function u(c,f){if("css-comment"===c.type&&c.inline)return t(f,c.source.startOffset);let F=c.nodes&&s(c.nodes);return F&&c.source&&!c.source.end&&(c=F),c.source&&c.source.end?a(c.source.end,f):null}function l(c,f,F){c.source&&(c.source.startOffset=n(c,F)+f,c.source.endOffset=u(c,F)+f);for(let _ in c){let w=c[_];"source"===_||!w||"object"!=typeof w||l(w,f,F)}}function p(c){let f=c.source.startOffset;return"string"==typeof c.prop&&(f+=c.prop.length),"css-atrule"===c.type&&"string"==typeof c.name&&(f+=1+c.name.length+c.raws.afterName.match(/^\s*:?\s*/)[0].length),"css-atrule"!==c.type&&c.raws&&"string"==typeof c.raws.between&&(f+=c.raws.between.length),f}r.exports={locStart:function h(c){return c.source.startOffset},locEnd:function g(c){return c.source.endOffset},calculateLoc:function i(c,f){c.source&&(c.source.startOffset=n(c,f),c.source.endOffset=u(c,f));for(let F in c){let _=c[F];"source"===F||!_||"object"!=typeof _||("value-root"===_.type||"value-unknown"===_.type?l(_,p(c),_.text||_.value):i(_,f))}},replaceQuotesInInlineComments:function y(c){let _,f="initial",F="initial",w=!1,E=[];for(let N=0;N<c.length;N++){let x=c[N];switch(f){case"initial":if("'"===x){f="single-quotes";continue}if('"'===x){f="double-quotes";continue}if(("u"===x||"U"===x)&&"url("===c.slice(N,N+4).toLowerCase()){f="url",N+=3;continue}if("*"===x&&"/"===c[N-1]){f="comment-block";continue}if("/"===x&&"/"===c[N-1]){f="comment-inline",_=N-1;continue}continue;case"single-quotes":if("'"===x&&"\\"!==c[N-1]&&(f=F,F="initial"),"\n"===x||"\r"===x)return c;continue;case"double-quotes":if('"'===x&&"\\"!==c[N-1]&&(f=F,F="initial"),"\n"===x||"\r"===x)return c;continue;case"url":if(")"===x&&(f="initial"),"\n"===x||"\r"===x)return c;if("'"===x){f="single-quotes",F="url";continue}if('"'===x){f="double-quotes",F="url";continue}continue;case"comment-block":"/"===x&&"*"===c[N-1]&&(f="initial");continue;case"comment-inline":('"'===x||"'"===x||"*"===x)&&(w=!0),("\n"===x||"\r"===x)&&(w&&E.push([_,N]),f="initial",w=!1);continue}}for(let[N,x]of E)c=c.slice(0,N)+c.slice(N,x).replace(/["'*]/g," ")+c.slice(x);return c}}}}),Ld=te({"src/language-css/utils/is-less-parser.js"(e,r){ne(),r.exports=function t(s){return"css"===s.parser||"less"===s.parser}}}),Od=te({"src/language-css/utils/is-scss.js"(e,r){ne(),r.exports=function t(s,a){return"less"===s||"scss"===s?"scss"===s:/(?:\w\s*:\s*[^:}]+|#){|@import[^\n]+(?:url|,)/.test(a)}}}),jd=te({"src/language-css/utils/css-units.evaluate.js"(e,r){r.exports={em:"em",rem:"rem",ex:"ex",rex:"rex",cap:"cap",rcap:"rcap",ch:"ch",rch:"rch",ic:"ic",ric:"ric",lh:"lh",rlh:"rlh",vw:"vw",svw:"svw",lvw:"lvw",dvw:"dvw",vh:"vh",svh:"svh",lvh:"lvh",dvh:"dvh",vi:"vi",svi:"svi",lvi:"lvi",dvi:"dvi",vb:"vb",svb:"svb",lvb:"lvb",dvb:"dvb",vmin:"vmin",svmin:"svmin",lvmin:"lvmin",dvmin:"dvmin",vmax:"vmax",svmax:"svmax",lvmax:"lvmax",dvmax:"dvmax",cm:"cm",mm:"mm",q:"Q",in:"in",pt:"pt",pc:"pc",px:"px",deg:"deg",grad:"grad",rad:"rad",turn:"turn",s:"s",ms:"ms",hz:"Hz",khz:"kHz",dpi:"dpi",dpcm:"dpcm",dppx:"dppx",x:"x"}}}),qd=te({"src/language-css/utils/print-unit.js"(e,r){ne();var t=jd();r.exports=function s(a){let n=a.toLowerCase();return Object.prototype.hasOwnProperty.call(t,n)?t[n]:a}}}),Md=te({"src/language-css/printer-postcss.js"(e,r){ne();var t=lt(),{printNumber:s,printString:a,hasNewline:n,isFrontMatterNode:u,isNextLineEmpty:i,isNonEmptyArray:l}=Ue(),{builders:{join:p,line:y,hardline:h,softline:g,group:c,fill:f,indent:F,dedent:_,ifBreak:w,breakParent:E},utils:{removeLines:N,getDocParts:x}}=qe(),I=Nd(),P=wd(),{insertPragma:$}=_d(),{getAncestorNode:D,getPropOfDeclNode:T,maybeToLowerCase:m,insideValueFunctionNode:C,insideICSSRuleNode:o,insideAtRuleNode:d,insideURLFunctionInImportAtRuleNode:v,isKeyframeAtRuleKeywords:S,isWideKeywords:b,isLastNode:B,isSCSSControlDirectiveNode:k,isDetachedRulesetDeclarationNode:M,isRelationalOperatorNode:R,isEqualityOperatorNode:q,isMultiplicationNode:J,isDivisionNode:L,isAdditionNode:Q,isSubtractionNode:V,isMathOperatorNode:j,isEachKeywordNode:Y,isForKeywordNode:ie,isURLFunctionNode:ee,isIfElseKeywordNode:ce,hasComposesNode:W,hasParensAroundNode:K,hasEmptyRawBefore:de,isKeyValuePairNode:ue,isKeyInValuePairNode:Fe,isDetachedRulesetCallNode:z,isTemplatePlaceholderNode:U,isTemplatePropNode:Z,isPostcssSimpleVarNode:se,isSCSSMapItemNode:fe,isInlineValueCommentNode:ge,isHashNode:he,isLeftCurlyBraceNode:we,isRightCurlyBraceNode:ke,isWordNode:Re,isColonNode:Ne,isMediaAndSupportsKeywords:Pe,isColorAdjusterFuncNode:oe,lastLineHasInlineComment:H,isAtWordPlaceholderNode:pe,isConfigurationNode:X,isParenGroupNode:le}=Pd(),{locStart:Ae,locEnd:Ee}=kd(),De=Ld(),A=Od(),G=qd();function re(Te){return"es5"===Te.trailingComma||"all"===Te.trailingComma}function Ce(Te,je,Me){let ae=[];return Te.each(((nt,tt,Ve)=>{let We=Ve[tt-1];if(We&&"css-comment"===We.type&&"prettier-ignore"===We.text.trim()){let Xe=nt.getValue();ae.push(je.originalText.slice(Ae(Xe),Ee(Xe)))}else ae.push(Me());tt!==Ve.length-1&&("css-comment"===Ve[tt+1].type&&!n(je.originalText,Ae(Ve[tt+1]),{backwards:!0})&&!u(Ve[tt])||"css-atrule"===Ve[tt+1].type&&"else"===Ve[tt+1].name&&"css-comment"!==Ve[tt].type?ae.push(" "):(ae.push(je.__isHTMLStyleAttribute?y:h),i(je.originalText,nt.getValue(),Ee)&&!u(Ve[tt])&&ae.push(h)))}),"nodes"),ae}var Be=/(["'])(?:(?!\1)[^\\]|\\.)*\1/gs,Ye=new RegExp(Be.source+`|(${/[$@]?[A-Z_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/g.source})?(${/(?:\d*\.\d+|\d+\.?)(?:[Ee][+-]?\d+)?/g.source})(${/[A-Za-z]+/g.source})?`,"g");function Se(Te,je){return Te.replace(Be,(Me=>a(Me,je)))}function Ie(Te,je){let Me=je.singleQuote?"'":'"';return Te.includes('"')||Te.includes("'")?Te:Me+Te+Me}function Oe(Te){return Te.replace(Ye,((je,Me,ae,nt,tt)=>!ae&&nt?Je(nt)+m(tt||""):je))}function Je(Te){return s(Te).replace(/\.0(?=$|e)/,"")}r.exports={print:function ye(Te,je,Me){let ae=Te.getValue();if(!ae)return"";if("string"==typeof ae)return ae;switch(ae.type){case"front-matter":return[ae.raw,h];case"css-root":{let Ve=Ce(Te,je,Me),We=ae.raws.after.trim();return We.startsWith(";")&&(We=We.slice(1).trim()),[Ve,We?` ${We}`:"",x(Ve).length>0?h:""]}case"css-comment":{let Ve=ae.inline||ae.raws.inline,We=je.originalText.slice(Ae(ae),Ee(ae));return Ve?We.trimEnd():We}case"css-rule":return[Me("selector"),ae.important?" !important":"",ae.nodes?[ae.selector&&"selector-unknown"===ae.selector.type&&H(ae.selector.value)?y:" ","{",ae.nodes.length>0?F([h,Ce(Te,je,Me)]):"",h,"}",M(ae)?";":""]:";"];case"css-decl":{let Ve=Te.getParentNode(),{between:We}=ae.raws,Xe=We.trim(),st=":"===Xe,O=W(ae)?N(Me("value")):Me("value");return!st&&H(Xe)&&(O=F([h,_(O)])),[ae.raws.before.replace(/[\s;]/g,""),"css-atrule"===Ve.type&&Ve.variable||o(Te)?ae.prop:m(ae.prop),Xe.startsWith("//")?" ":"",Xe,ae.extend?"":" ",De(je)&&ae.extend&&ae.selector?["extend(",Me("selector"),")"]:"",O,ae.raws.important?ae.raws.important.replace(/\s*!\s*important/i," !important"):ae.important?" !important":"",ae.raws.scssDefault?ae.raws.scssDefault.replace(/\s*!default/i," !default"):ae.scssDefault?" !default":"",ae.raws.scssGlobal?ae.raws.scssGlobal.replace(/\s*!global/i," !global"):ae.scssGlobal?" !global":"",ae.nodes?[" {",F([g,Ce(Te,je,Me)]),g,"}"]:Z(ae)&&!Ve.raws.semicolon&&";"!==je.originalText[Ee(ae)-1]?"":je.__isHTMLStyleAttribute&&B(Te,ae)?w(";"):";"]}case"css-atrule":{let Ve=Te.getParentNode(),We=U(ae)&&!Ve.raws.semicolon&&";"!==je.originalText[Ee(ae)-1];if(De(je)){if(ae.mixin)return[Me("selector"),ae.important?" !important":"",We?"":";"];if(ae.function)return[ae.name,Me("params"),We?"":";"];if(ae.variable)return["@",ae.name,": ",ae.value?Me("value"):"",ae.raws.between.trim()?ae.raws.between.trim()+" ":"",ae.nodes?["{",F([ae.nodes.length>0?g:"",Ce(Te,je,Me)]),g,"}"]:"",We?"":";"]}return["@",z(ae)||ae.name.endsWith(":")?ae.name:m(ae.name),ae.params?[z(ae)?"":U(ae)?""===ae.raws.afterName?"":ae.name.endsWith(":")?" ":/^\s*\n\s*\n/.test(ae.raws.afterName)?[h,h]:/^\s*\n/.test(ae.raws.afterName)?h:" ":" ",Me("params")]:"",ae.selector?F([" ",Me("selector")]):"",ae.value?c([" ",Me("value"),k(ae)?K(ae)?" ":y:""]):"else"===ae.name?" ":"",ae.nodes?[k(ae)?"":ae.selector&&!ae.selector.nodes&&"string"==typeof ae.selector.value&&H(ae.selector.value)||!ae.selector&&"string"==typeof ae.params&&H(ae.params)?y:" ","{",F([ae.nodes.length>0?g:"",Ce(Te,je,Me)]),g,"}"]:We?"":";"]}case"media-query-list":{let Ve=[];return Te.each((We=>{let Xe=We.getValue();"media-query"===Xe.type&&""===Xe.value||Ve.push(Me())}),"nodes"),c(F(p(y,Ve)))}case"media-query":return[p(" ",Te.map(Me,"nodes")),B(Te,ae)?"":","];case"media-type":case"media-value":return Oe(Se(ae.value,je));case"media-feature-expression":return ae.nodes?["(",...Te.map(Me,"nodes"),")"]:ae.value;case"media-feature":return m(Se(ae.value.replace(/ +/g," "),je));case"media-colon":case"value-comma":return[ae.value," "];case"media-keyword":case"selector-string":return Se(ae.value,je);case"media-url":return Se(ae.value.replace(/^url\(\s+/gi,"url(").replace(/\s+\)$/g,")"),je);case"media-unknown":case"selector-comment":case"selector-nesting":case"value-paren":case"value-operator":case"value-unicode-range":case"value-unknown":return ae.value;case"selector-root":return c([d(Te,"custom-selector")?[D(Te,"css-atrule").customSelector,y]:"",p([",",d(Te,["extend","custom-selector","nest"])?y:h],Te.map(Me,"nodes"))]);case"selector-selector":return c(F(Te.map(Me,"nodes")));case"selector-tag":{let Ve=Te.getParentNode(),We=Ve&&Ve.nodes.indexOf(ae),Xe=We&&Ve.nodes[We-1];return[ae.namespace?[!0===ae.namespace?"":ae.namespace.trim(),"|"]:"","selector-nesting"===Xe.type?ae.value:Oe(S(Te,ae.value)?ae.value.toLowerCase():ae.value)]}case"selector-id":return["#",ae.value];case"selector-class":return[".",Oe(Se(ae.value,je))];case"selector-attribute":var nt;return["[",ae.namespace?[!0===ae.namespace?"":ae.namespace.trim(),"|"]:"",ae.attribute.trim(),null!==(nt=ae.operator)&&void 0!==nt?nt:"",ae.value?Ie(Se(ae.value.trim(),je),je):"",ae.insensitive?" i":"","]"];case"selector-combinator":if("+"===ae.value||">"===ae.value||"~"===ae.value||">>>"===ae.value){let Xe=Te.getParentNode();return["selector-selector"===Xe.type&&Xe.nodes[0]===ae?"":y,ae.value,B(Te,ae)?"":" "]}return[ae.value.trim().startsWith("(")?y:"",Oe(Se(ae.value.trim(),je))||y];case"selector-universal":return[ae.namespace?[!0===ae.namespace?"":ae.namespace.trim(),"|"]:"",ae.value];case"selector-pseudo":return[m(ae.value),l(ae.nodes)?c(["(",F([g,p([",",y],Te.map(Me,"nodes"))]),g,")"]):""];case"selector-unknown":{let Ve=D(Te,"css-rule");if(Ve&&Ve.isSCSSNesterProperty)return Oe(Se(m(ae.value),je));let We=Te.getParentNode();if(We.raws&&We.raws.selector){let st=Ae(We),O=st+We.raws.selector.length;return je.originalText.slice(st,O).trim()}let Xe=Te.getParentNode(1);if("value-paren_group"===We.type&&Xe&&"value-func"===Xe.type&&"selector"===Xe.value){let st=Ee(We.open)+1,O=Ae(We.close),me=je.originalText.slice(st,O).trim();return H(me)?[E,me]:me}return ae.value}case"value-value":case"value-root":return Me("group");case"value-comment":return je.originalText.slice(Ae(ae),Ee(ae));case"value-comma_group":{let Ve=Te.getParentNode(),We=Te.getParentNode(1),Xe=T(Te),st=Xe&&"value-value"===Ve.type&&("grid"===Xe||Xe.startsWith("grid-template")),O=D(Te,"css-atrule"),me=O&&k(O),_e=ae.groups.some((at=>ge(at))),He=Te.map(Me,"groups"),Ge=[],it=C(Te,"url"),Qe=!1,rt=!1;for(let at=0;at<ae.groups.length;++at){var tt;Ge.push(He[at]);let Ze=ae.groups[at-1],Le=ae.groups[at],$e=ae.groups[at+1],sr=ae.groups[at+2];if(it){($e&&Q($e)||Q(Le))&&Ge.push(" ");continue}if(d(Te,"forward")&&"value-word"===Le.type&&Le.value&&void 0!==Ze&&"value-word"===Ze.type&&"as"===Ze.value&&"value-operator"===$e.type&&"*"===$e.value||!$e||"value-word"===Le.type&&Le.value.endsWith("-")&&pe($e))continue;if("value-string"===Le.type&&Le.quoted){let $r=Le.value.lastIndexOf("#{"),Vr=Le.value.lastIndexOf("}");-1!==$r&&-1!==Vr?Qe=$r>Vr:-1!==$r?Qe=!0:-1!==Vr&&(Qe=!1)}if(Qe||Ne(Le)||Ne($e)||"value-atword"===Le.type&&(""===Le.value||Le.value.endsWith("["))||"value-word"===$e.type&&$e.value.startsWith("]")||"~"===Le.value||Le.value&&Le.value.includes("\\")&&$e&&"value-comment"!==$e.type||Ze&&Ze.value&&Ze.value.indexOf("\\")===Ze.value.length-1&&"value-operator"===Le.type&&"/"===Le.value||"\\"===Le.value||se(Le,$e)||he(Le)||we(Le)||ke($e)||we($e)&&de($e)||ke(Le)&&de($e)||"--"===Le.value&&he($e))continue;let Rr=j(Le),ou=j($e);if((Rr&&he($e)||ou&&ke(Le))&&de($e)||!Ze&&L(Le)||C(Te,"calc")&&(Q(Le)||Q($e)||V(Le)||V($e))&&de($e))continue;let qo=(Q(Le)||V(Le))&&0===at&&("value-number"===$e.type||$e.isHex)&&We&&oe(We)&&!de($e),lu=sr&&"value-func"===sr.type||sr&&Re(sr)||"value-func"===Le.type||Re(Le),cu="value-func"===$e.type||Re($e)||Ze&&"value-func"===Ze.type||Ze&&Re(Ze);if((J($e)||J(Le)||C(Te,"calc")||qo||!(L($e)&&!lu||L(Le)&&!cu||Q($e)&&!lu||Q(Le)&&!cu||V($e)||V(Le))||!(de($e)||Rr&&(!Ze||Ze&&j(Ze))))&&("scss"!==je.parser&&"less"!==je.parser||!Rr||"-"!==Le.value||!le($e)||Ee(Le)!==Ae($e.open)||"("!==$e.open.value)){if(ge(Le)){if("value-paren_group"===Ve.type){Ge.push(_(h));continue}Ge.push(h);continue}if(me&&(q($e)||R($e)||ce($e)||Y(Le)||ie(Le))){Ge.push(" ");continue}if(O&&"namespace"===O.name.toLowerCase()){Ge.push(" ");continue}if(st){Le.source&&$e.source&&Le.source.start.line!==$e.source.start.line?(Ge.push(h),rt=!0):Ge.push(" ");continue}if(ou){Ge.push(" ");continue}if(!($e&&"..."===$e.value||pe(Le)&&pe($e)&&Ee(Le)===Ae($e))){if(pe(Le)&&le($e)&&Ee(Le)===Ae($e.open)){Ge.push(g);continue}if("with"===Le.value&&le($e)){Ge.push(" ");continue}null!==(tt=Le.value)&&void 0!==tt&&tt.endsWith("#")&&"{"===$e.value&&le($e.group)||Ge.push(y)}}}return _e&&Ge.push(E),rt&&Ge.unshift(h),me?c(F(Ge)):v(Te)?c(f(Ge)):c(F(f(Ge)))}case"value-paren_group":{let Ve=Te.getParentNode();if(Ve&&ee(Ve)&&(1===ae.groups.length||ae.groups.length>0&&"value-comma_group"===ae.groups[0].type&&ae.groups[0].groups.length>0&&"value-word"===ae.groups[0].groups[0].type&&ae.groups[0].groups[0].value.startsWith("data:")))return[ae.open?Me("open"):"",p(",",Te.map(Me,"groups")),ae.close?Me("close"):""];if(!ae.open){let it=Te.map(Me,"groups"),Qe=[];for(let rt=0;rt<it.length;rt++)0!==rt&&Qe.push([",",y]),Qe.push(it[rt]);return c(F(f(Qe)))}let We=fe(Te),Xe=t(ae.groups),st=Xe&&"value-comment"===Xe.type,O=Fe(ae,Ve),me=X(ae,Ve),_e=me||We&&!O,He=me||O,Ge=c([ae.open?Me("open"):"",F([g,p([y],Te.map(((it,Qe)=>{let rt=it.getValue(),at=Qe===ae.groups.length-1,Ze=[Me(),at?"":","];if(ue(rt)&&"value-comma_group"===rt.type&&rt.groups&&"value-paren_group"!==rt.groups[0].type&&rt.groups[2]&&"value-paren_group"===rt.groups[2].type){let Le=x(Ze[0].contents.contents);Le[1]=c(Le[1]),Ze=[c(_(Ze))]}if(!at&&"value-comma_group"===rt.type&&l(rt.groups)){let Le=t(rt.groups);!Le.source&&Le.close&&(Le=Le.close),Le.source&&i(je.originalText,Le,Ee)&&Ze.push(h)}return Ze}),"groups"))]),w(!st&&A(je.parser,je.originalText)&&We&&re(je)?",":""),g,ae.close?Me("close"):""],{shouldBreak:_e});return He?_(Ge):Ge}case"value-func":return[ae.value,d(Te,"supports")&&Pe(ae)?" ":"",Me("group")];case"value-number":return[Je(ae.value),G(ae.unit)];case"value-word":return ae.isColor&&ae.isHex||b(ae.value)?ae.value.toLowerCase():ae.value;case"value-colon":{let Ve=Te.getParentNode(),We=Ve&&Ve.groups.indexOf(ae),Xe=We&&Ve.groups[We-1];return[ae.value,Xe&&"string"==typeof Xe.value&&"\\"===t(Xe.value)||C(Te,"url")?"":y]}case"value-string":return a(ae.raws.quote+ae.value+ae.raws.quote,je);case"value-atword":return["@",ae.value];default:throw new Error(`Unknown postcss type ${JSON.stringify(ae.type)}`)}},embed:P,insertPragma:$,massageAstNode:I}}}),Rd=te({"src/language-css/options.js"(e,r){ne();var t=Mt();r.exports={singleQuote:t.singleQuote}}}),$d=te({"src/language-css/parsers.js"(){ne()}}),Vd=te({"node_modules/linguist-languages/data/CSS.json"(e,r){r.exports={name:"CSS",type:"markup",tmScope:"source.css",aceMode:"css",codemirrorMode:"css",codemirrorMimeType:"text/css",color:"#563d7c",extensions:[".css"],languageId:50}}}),Wd=te({"node_modules/linguist-languages/data/PostCSS.json"(e,r){r.exports={name:"PostCSS",type:"markup",color:"#dc3a0c",tmScope:"source.postcss",group:"CSS",extensions:[".pcss",".postcss"],aceMode:"text",languageId:262764437}}}),Hd=te({"node_modules/linguist-languages/data/Less.json"(e,r){r.exports={name:"Less",type:"markup",color:"#1d365d",aliases:["less-css"],extensions:[".less"],tmScope:"source.css.less",aceMode:"less",codemirrorMode:"css",codemirrorMimeType:"text/css",languageId:198}}}),Gd=te({"node_modules/linguist-languages/data/SCSS.json"(e,r){r.exports={name:"SCSS",type:"markup",color:"#c6538c",tmScope:"source.css.scss",aceMode:"scss",codemirrorMode:"css",codemirrorMimeType:"text/x-scss",extensions:[".scss"],languageId:329}}}),Ud=te({"src/language-css/index.js"(e,r){ne();var t=_t(),s=Md(),a=Rd(),n=$d(),u=[t(Vd(),(l=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["css"],extensions:[...l.extensions,".wxss"]}))),t(Wd(),(()=>({since:"1.4.0",parsers:["css"],vscodeLanguageIds:["postcss"]}))),t(Hd(),(()=>({since:"1.4.0",parsers:["less"],vscodeLanguageIds:["less"]}))),t(Gd(),(()=>({since:"1.4.0",parsers:["scss"],vscodeLanguageIds:["scss"]})))],i={postcss:s};r.exports={languages:u,options:a,printers:i,parsers:n}}}),Jd=te({"src/language-handlebars/loc.js"(e,r){ne(),r.exports={locStart:function t(a){return a.loc.start.offset},locEnd:function s(a){return a.loc.end.offset}}}}),zd=te({"src/language-handlebars/clean.js"(e,r){function t(s,a){if("TextNode"===s.type){let n=s.chars.trim();if(!n)return null;a.chars=n.replace(/[\t\n\f\r ]+/g," ")}"AttrNode"===s.type&&"class"===s.name.toLowerCase()&&delete a.value}ne(),t.ignoredProperties=new Set(["loc","selfClosing"]),r.exports=t}}),Xd=te({"src/language-handlebars/html-void-elements.evaluate.js"(e,r){r.exports=["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"]}}),Kd=te({"src/language-handlebars/utils.js"(e,r){ne();var t=lt(),s=Xd();function n(x){return x.toUpperCase()===x}var i=new Set(s);function y(x){return h(x,["TextNode"])&&!/\S/.test(x.chars)}function h(x,I){return x&&I.includes(x.type)}function g(x,I){return h(x.getParentNode(0),I)}function F(x,I){var P,$,D,T;let m=x.getValue(),C=null!==(P=x.getParentNode(0))&&void 0!==P?P:{},o=null!==($=null!==(D=null!==(T=C.children)&&void 0!==T?T:C.body)&&void 0!==D?D:C.parts)&&void 0!==$?$:[],d=o.indexOf(m);return-1!==d&&o[d+I]}function _(x){return F(x,-(arguments.length>1&&void 0!==arguments[1]?arguments[1]:1))}function w(x){return F(x,1)}function E(x){return h(x,["MustacheCommentStatement"])&&"string"==typeof x.value&&"prettier-ignore"===x.value.trim()}r.exports={getNextNode:w,getPreviousNode:_,hasPrettierIgnore:function N(x){let I=x.getValue(),P=_(x,2);return E(I)||E(P)},isLastNodeOfSiblings:function a(x){let I=x.getValue(),P=x.getParentNode(0);return!!(g(x,["ElementNode"])&&t(P.children)===I||g(x,["Block"])&&t(P.body)===I)},isNextNodeOfSomeType:function f(x,I){return h(w(x),I)},isNodeOfSomeType:h,isParentOfSomeType:g,isPreviousNodeOfSomeType:function c(x,I){return h(_(x),I)},isVoid:function p(x){return!0===x.selfClosing||function l(x){return i.has(x.toLowerCase())&&!n(x[0])}(x.tag)||function u(x){return h(x,["ElementNode"])&&"string"==typeof x.tag&&!x.tag.startsWith(":")&&(n(x.tag[0])||x.tag.includes("."))}(x)&&x.children.every((I=>y(I)))},isWhitespaceNode:y}}}),Yd=te({"src/language-handlebars/printer-glimmer.js"(e,r){ne();var{builders:{dedent:t,fill:s,group:a,hardline:n,ifBreak:u,indent:i,join:l,line:p,softline:y},utils:{getDocParts:h,replaceTextEndOfLine:g}}=qe(),{getPreferredQuote:c,isNonEmptyArray:f}=Ue(),{locStart:F,locEnd:_}=Jd(),w=zd(),{getNextNode:E,getPreviousNode:N,hasPrettierIgnore:x,isLastNodeOfSiblings:I,isNextNodeOfSomeType:P,isNodeOfSomeType:$,isParentOfSomeType:D,isPreviousNodeOfSomeType:T,isVoid:m,isWhitespaceNode:C}=Kd();function v(H,pe){return F(H)-F(pe)}function b(H,pe,X){let Ae=H.getValue().children.every((Ee=>C(Ee)));return"ignore"===pe.htmlWhitespaceSensitivity&&Ae?"":H.map(((Ee,De)=>{let A=X();return 0===De&&"ignore"===pe.htmlWhitespaceSensitivity?[y,A]:A}),"children")}function B(H){return m(H)?u([y,"/>"],[" />",y]):u([y,">"],">")}function k(H){return[!1===H.escaped?"{{{":"{{",H.strip&&H.strip.open?"~":""]}function M(H){let pe=!1===H.escaped?"}}}":"}}";return[H.strip&&H.strip.close?"~":"",pe]}function R(H){return[k(H),H.openStrip.open?"~":"","#"]}function q(H){let pe=M(H);return[H.openStrip.close?"~":"",pe]}function J(H){return[k(H),H.closeStrip.open?"~":"","/"]}function L(H){let pe=M(H);return[H.closeStrip.close?"~":"",pe]}function Q(H){return[k(H),H.inverseStrip.open?"~":""]}function V(H){let pe=M(H);return[H.inverseStrip.close?"~":"",pe]}function j(H,pe){let X=H.getValue(),le=[],Ae=Pe(H,pe);return Ae&&le.push(a(Ae)),f(X.program.blockParams)&&le.push(oe(X.program)),a([R(X),Ne(H,pe),le.length>0?i([p,l(p,le)]):"",y,q(X)])}function Y(H,pe){return["ignore"===pe.htmlWhitespaceSensitivity?n:"",Q(H),"else",V(H)]}function ie(H,pe,X){let le=H.getValue(),Ae=H.getParentNode(1);return a([Q(Ae),["else"," ",X],i([p,a(Pe(H,pe)),...f(le.program.blockParams)?[p,oe(le.program)]:[]]),y,V(Ae)])}function ee(H,pe,X){let le=H.getValue();return"ignore"===X.htmlWhitespaceSensitivity?[ce(le)?y:n,J(le),pe("path"),L(le)]:[J(le),pe("path"),L(le)]}function ce(H){return $(H,["BlockStatement"])&&H.program.body.every((pe=>C(pe)))}function K(H){return $(H,["BlockStatement"])&&H.inverse}function de(H,pe,X){if(ce(H.getValue()))return"";let Ae=pe("program");return"ignore"===X.htmlWhitespaceSensitivity?i([n,Ae]):i(Ae)}function ue(H,pe,X){let le=H.getValue(),Ae=pe("inverse"),Ee="ignore"===X.htmlWhitespaceSensitivity?[n,Ae]:Ae;return function W(H){return K(H)&&1===H.inverse.body.length&&$(H.inverse.body[0],["BlockStatement"])&&H.inverse.body[0].path.parts[0]===H.path.parts[0]}(le)?Ee:K(le)?[Y(le,X),i(Ee)]:""}function Fe(H){return h(l(p,function z(H){return H.split(/[\t\n\f\r ]+/)}(H)))}function Z(H){return(H="string"==typeof H?H:"").split("\n").length-1}function ge(){let H=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return Array.from({length:Math.min(H,2)}).fill(n)}function he(H,pe){let{quote:X,regex:le}=c(H,pe);return[X,H.replace(le,`\\${X}`),X]}function ke(H,pe){let X=Ne(H,pe),le=Pe(H,pe);return le?i([X,p,a(le)]):X}function Re(H,pe){let X=Ne(H,pe),le=Pe(H,pe);return le?[i([X,p,le]),y]:X}function Ne(H,pe){return pe("path")}function Pe(H,pe){let X=H.getValue(),le=[];if(X.params.length>0){let Ae=H.map(pe,"params");le.push(...Ae)}if(X.hash&&X.hash.pairs.length>0){let Ae=pe("hash");le.push(Ae)}return 0===le.length?"":l(p,le)}function oe(H){return["as |",H.blockParams.join(" "),"|"]}r.exports={print:function d(H,pe,X){let le=H.getValue();if(!le)return"";if(x(H))return pe.originalText.slice(F(le),_(le));let Ae=pe.singleQuote?"'":'"';switch(le.type){case"Block":case"Program":case"Template":return a(H.map(X,"body"));case"ElementNode":{let Ee=a(function S(H,pe){let X=H.getValue(),le=["attributes","modifiers","comments"].filter((Ee=>f(X[Ee]))),Ae=le.flatMap((Ee=>X[Ee])).sort(v);for(let Ee of le)H.each((De=>{let A=Ae.indexOf(De.getValue());Ae.splice(A,1,[p,pe()])}),Ee);return f(X.blockParams)&&Ae.push(p,oe(X)),["<",X.tag,i(Ae),B(X)]}(H,X)),De="ignore"===pe.htmlWhitespaceSensitivity&&P(H,["ElementNode"])?y:"";if(m(le))return[Ee,De];let A=["</",le.tag,">"];return 0===le.children.length?[Ee,i(A),De]:"ignore"===pe.htmlWhitespaceSensitivity?[Ee,i(b(H,pe,X)),n,i(A),De]:[Ee,i(a(b(H,pe,X))),i(A),De]}case"BlockStatement":{let Ee=H.getParentNode(1);return Ee&&Ee.inverse&&1===Ee.inverse.body.length&&Ee.inverse.body[0]===le&&Ee.inverse.body[0].path.parts[0]===Ee.path.parts[0]?[ie(H,X,Ee.inverse.body[0].path.parts[0]),de(H,X,pe),ue(H,X,pe)]:[j(H,X),a([de(H,X,pe),ue(H,X,pe),ee(H,X,pe)])]}case"ElementModifierStatement":return a(["{{",Re(H,X),"}}"]);case"MustacheStatement":return a([k(le),Re(H,X),M(le)]);case"SubExpression":return a(["(",ke(H,X),y,")"]);case"AttrNode":{let Ee="TextNode"===le.value.type;if(Ee&&""===le.value.chars&&F(le.value)===_(le.value))return le.name;let A=Ee?c(le.value.chars,Ae).quote:"ConcatStatement"===le.value.type?c(le.value.parts.filter((re=>"TextNode"===re.type)).map((re=>re.chars)).join(""),Ae).quote:"",G=X("value");return[le.name,"=",A,"class"===le.name&&A?a(i(G)):G,A]}case"ConcatStatement":return H.map(X,"parts");case"Hash":return l(p,H.map(X,"pairs"));case"HashPair":return[le.key,"=",X("value")];case"TextNode":{let Ee=le.chars.replace(/{{/g,"\\{{"),De=function U(H){for(let pe=0;pe<2;pe++){let X=H.getParentNode(pe);if(X&&"AttrNode"===X.type)return X.name.toLowerCase()}}(H);if(De){if("class"===De){let Ye=Ee.trim().split(/\s+/).join(" "),Se=!1,Ie=!1;return D(H,["ConcatStatement"])&&(T(H,["MustacheStatement"])&&/^\s/.test(Ee)&&(Se=!0),P(H,["MustacheStatement"])&&/\s$/.test(Ee)&&""!==Ye&&(Ie=!0)),[Se?p:"",Ye,Ie?p:""]}return g(Ee)}let G=/^[\t\n\f\r ]*$/.test(Ee),re=!N(H),ye=!E(H);if("ignore"!==pe.htmlWhitespaceSensitivity){let Ye=/^[\t\n\f\r ]*/,Se=/[\t\n\f\r ]*$/,Ie=ye&&D(H,["Template"]),Oe=re&&D(H,["Template"]);if(G){if(Oe||Ie)return"";let ae=[p],nt=Z(Ee);return nt&&(ae=ge(nt)),I(H)&&(ae=ae.map((tt=>t(tt)))),ae}let[Je]=Ee.match(Ye),[Te]=Ee.match(Se),je=[];if(Je){je=[p];let ae=Z(Je);ae&&(je=ge(ae)),Ee=Ee.replace(Ye,"")}let Me=[];if(Te){if(!Ie){Me=[p];let ae=Z(Te);ae&&(Me=ge(ae)),I(H)&&(Me=Me.map((nt=>t(nt))))}Ee=Ee.replace(Se,"")}return[...je,s(Fe(Ee)),...Me]}let Ce=Z(Ee),Be=function se(H){H="string"==typeof H?H:"";let pe=(H.match(/^([^\S\n\r]*[\n\r])+/g)||[])[0]||"";return Z(pe)}(Ee),ve=function fe(H){H="string"==typeof H?H:"";let pe=(H.match(/([\n\r][^\S\n\r]*)+$/g)||[])[0]||"";return Z(pe)}(Ee);if((re||ye)&&G&&D(H,["Block","ElementNode","Template"]))return"";G&&Ce?(Be=Math.min(Ce,2),ve=0):(P(H,["BlockStatement","ElementNode"])&&(ve=Math.max(ve,1)),T(H,["BlockStatement","ElementNode"])&&(Be=Math.max(Be,1)));let ze="",be="";return 0===ve&&P(H,["MustacheStatement"])&&(be=" "),0===Be&&T(H,["MustacheStatement"])&&(ze=" "),re&&(Be=0,ze=""),ye&&(ve=0,be=""),Ee=Ee.replace(/^[\t\n\f\r ]+/g,ze).replace(/[\t\n\f\r ]+$/,be),[...ge(Be),s(Fe(Ee)),...ge(ve)]}case"MustacheCommentStatement":{let Ee=F(le),De=_(le),A="~"===pe.originalText.charAt(Ee+2),G="~"===pe.originalText.charAt(De-3),re=le.value.includes("}}")?"--":"";return["{{",A?"~":"","!",re,le.value,re,G?"~":"","}}"]}case"PathExpression":return le.original;case"BooleanLiteral":case"NumberLiteral":return String(le.value);case"CommentStatement":return["\x3c!--",le.value,"--\x3e"];case"StringLiteral":if(function we(H){let pe=0,X=H.getParentNode(pe);for(;X&&$(X,["SubExpression"]);)pe++,X=H.getParentNode(pe);return!!(X&&$(H.getParentNode(pe+1),["ConcatStatement"])&&$(H.getParentNode(pe+2),["AttrNode"]))}(H)){let Ee=pe.singleQuote?'"':"'";return he(le.value,Ee)}return he(le.value,Ae);case"UndefinedLiteral":return"undefined";case"NullLiteral":return"null";default:throw new Error("unknown glimmer type: "+JSON.stringify(le.type))}},massageAstNode:w}}}),Qd=te({"src/language-handlebars/parsers.js"(){ne()}}),Zd=te({"node_modules/linguist-languages/data/Handlebars.json"(e,r){r.exports={name:"Handlebars",type:"markup",color:"#f7931e",aliases:["hbs","htmlbars"],extensions:[".handlebars",".hbs"],tmScope:"text.html.handlebars",aceMode:"handlebars",languageId:155}}}),eg=te({"src/language-handlebars/index.js"(e,r){ne();var t=_t(),s=Yd(),a=Qd(),n=[t(Zd(),(()=>({since:"2.3.0",parsers:["glimmer"],vscodeLanguageIds:["handlebars"]})))],u={glimmer:s};r.exports={languages:n,printers:u,parsers:a}}}),tg=te({"src/language-graphql/pragma.js"(e,r){ne(),r.exports={hasPragma:function t(a){return/^\s*#[^\S\n]*@(?:format|prettier)\s*(?:\n|$)/.test(a)},insertPragma:function s(a){return"# @format\n\n"+a}}}}),rg=te({"src/language-graphql/loc.js"(e,r){ne(),r.exports={locStart:function t(a){return"number"==typeof a.start?a.start:a.loc&&a.loc.start},locEnd:function s(a){return"number"==typeof a.end?a.end:a.loc&&a.loc.end}}}}),ng=te({"src/language-graphql/printer-graphql.js"(e,r){ne();var{builders:{join:t,hardline:s,line:a,softline:n,group:u,indent:i,ifBreak:l}}=qe(),{isNextLineEmpty:p,isNonEmptyArray:y}=Ue(),{insertPragma:h}=tg(),{locStart:g,locEnd:c}=rg();function F(P,$,D){if(0===D.directives.length)return"";let T=t(a,P.map($,"directives"));return"FragmentDefinition"===D.kind||"OperationDefinition"===D.kind?u([a,T]):[" ",u(i([n,T]))]}function _(P,$,D,T){return P.map(((m,C,o)=>{let d=D();return C<o.length-1&&p($.originalText,m.getValue(),c)?[d,s]:d}),T)}function N(P,$,D){let T=P.getNode(),m=[],{interfaces:C}=T,o=P.map((d=>D(d)),"interfaces");for(let d=0;d<C.length;d++){let v=C[d];m.push(o[d]);let S=C[d+1];if(S){let b=$.originalText.slice(v.loc.end,S.loc.start),B=b.includes("#"),k=b.replace(/#.*/g,"").trim();m.push(","===k?",":" &",B?a:" ")}}return m}function x(P,$){"StringValue"===P.kind&&P.block&&!P.value.includes("\n")&&($.value=$.value.trim())}x.ignoredProperties=new Set(["loc","comments"]),r.exports={print:function f(P,$,D){let T=P.getValue();if(!T)return"";if("string"==typeof T)return T;switch(T.kind){case"Document":{let m=[];return P.each(((C,o,d)=>{m.push(D()),o!==d.length-1&&(m.push(s),p($.originalText,C.getValue(),c)&&m.push(s))}),"definitions"),[...m,s]}case"OperationDefinition":{let m="{"!==$.originalText[g(T)],C=Boolean(T.name);return[m?T.operation:"",m&&C?[" ",D("name")]:"",m&&!C&&y(T.variableDefinitions)?" ":"",y(T.variableDefinitions)?u(["(",i([n,t([l("",", "),n],P.map(D,"variableDefinitions"))]),n,")"]):"",F(P,D,T),T.selectionSet&&(m||C)?" ":"",D("selectionSet")]}case"FragmentDefinition":return["fragment ",D("name"),y(T.variableDefinitions)?u(["(",i([n,t([l("",", "),n],P.map(D,"variableDefinitions"))]),n,")"]):""," on ",D("typeCondition"),F(P,D,T)," ",D("selectionSet")];case"SelectionSet":return["{",i([s,t(s,_(P,$,D,"selections"))]),s,"}"];case"Field":return u([T.alias?[D("alias"),": "]:"",D("name"),T.arguments.length>0?u(["(",i([n,t([l("",", "),n],_(P,$,D,"arguments"))]),n,")"]):"",F(P,D,T),T.selectionSet?" ":"",D("selectionSet")]);case"Name":case"IntValue":case"FloatValue":case"EnumValue":return T.value;case"StringValue":if(T.block){let m=T.value.replace(/"""/g,"\\$&").split("\n");return 1===m.length&&(m[0]=m[0].trim()),m.every((C=>""===C))&&(m.length=0),t(s,['"""',...m,'"""'])}return['"',T.value.replace(/["\\]/g,"\\$&").replace(/\n/g,"\\n"),'"'];case"BooleanValue":return T.value?"true":"false";case"NullValue":return"null";case"Variable":return["$",D("name")];case"ListValue":return u(["[",i([n,t([l("",", "),n],P.map(D,"values"))]),n,"]"]);case"ObjectValue":return u(["{",$.bracketSpacing&&T.fields.length>0?" ":"",i([n,t([l("",", "),n],P.map(D,"fields"))]),n,l("",$.bracketSpacing&&T.fields.length>0?" ":""),"}"]);case"ObjectField":case"Argument":return[D("name"),": ",D("value")];case"Directive":return["@",D("name"),T.arguments.length>0?u(["(",i([n,t([l("",", "),n],_(P,$,D,"arguments"))]),n,")"]):""];case"NamedType":return D("name");case"VariableDefinition":return[D("variable"),": ",D("type"),T.defaultValue?[" = ",D("defaultValue")]:"",F(P,D,T)];case"ObjectTypeExtension":case"ObjectTypeDefinition":return[D("description"),T.description?s:"","ObjectTypeExtension"===T.kind?"extend ":"","type ",D("name"),T.interfaces.length>0?[" implements ",...N(P,$,D)]:"",F(P,D,T),T.fields.length>0?[" {",i([s,t(s,_(P,$,D,"fields"))]),s,"}"]:""];case"FieldDefinition":return[D("description"),T.description?s:"",D("name"),T.arguments.length>0?u(["(",i([n,t([l("",", "),n],_(P,$,D,"arguments"))]),n,")"]):"",": ",D("type"),F(P,D,T)];case"DirectiveDefinition":return[D("description"),T.description?s:"","directive ","@",D("name"),T.arguments.length>0?u(["(",i([n,t([l("",", "),n],_(P,$,D,"arguments"))]),n,")"]):"",T.repeatable?" repeatable":""," on ",t(" | ",P.map(D,"locations"))];case"EnumTypeExtension":case"EnumTypeDefinition":return[D("description"),T.description?s:"","EnumTypeExtension"===T.kind?"extend ":"","enum ",D("name"),F(P,D,T),T.values.length>0?[" {",i([s,t(s,_(P,$,D,"values"))]),s,"}"]:""];case"EnumValueDefinition":return[D("description"),T.description?s:"",D("name"),F(P,D,T)];case"InputValueDefinition":return[D("description"),T.description?T.description.block?s:a:"",D("name"),": ",D("type"),T.defaultValue?[" = ",D("defaultValue")]:"",F(P,D,T)];case"InputObjectTypeExtension":case"InputObjectTypeDefinition":return[D("description"),T.description?s:"","InputObjectTypeExtension"===T.kind?"extend ":"","input ",D("name"),F(P,D,T),T.fields.length>0?[" {",i([s,t(s,_(P,$,D,"fields"))]),s,"}"]:""];case"SchemaExtension":return["extend schema",F(P,D,T),...T.operationTypes.length>0?[" {",i([s,t(s,_(P,$,D,"operationTypes"))]),s,"}"]:[]];case"SchemaDefinition":return[D("description"),T.description?s:"","schema",F(P,D,T)," {",T.operationTypes.length>0?i([s,t(s,_(P,$,D,"operationTypes"))]):"",s,"}"];case"OperationTypeDefinition":return[D("operation"),": ",D("type")];case"InterfaceTypeExtension":case"InterfaceTypeDefinition":return[D("description"),T.description?s:"","InterfaceTypeExtension"===T.kind?"extend ":"","interface ",D("name"),T.interfaces.length>0?[" implements ",...N(P,$,D)]:"",F(P,D,T),T.fields.length>0?[" {",i([s,t(s,_(P,$,D,"fields"))]),s,"}"]:""];case"FragmentSpread":return["...",D("name"),F(P,D,T)];case"InlineFragment":return["...",T.typeCondition?[" on ",D("typeCondition")]:"",F(P,D,T)," ",D("selectionSet")];case"UnionTypeExtension":case"UnionTypeDefinition":return u([D("description"),T.description?s:"",u(["UnionTypeExtension"===T.kind?"extend ":"","union ",D("name"),F(P,D,T),T.types.length>0?[" =",l(""," "),i([l([a,"  "]),t([a,"| "],P.map(D,"types"))])]:""])]);case"ScalarTypeExtension":case"ScalarTypeDefinition":return[D("description"),T.description?s:"","ScalarTypeExtension"===T.kind?"extend ":"","scalar ",D("name"),F(P,D,T)];case"NonNullType":return[D("type"),"!"];case"ListType":return["[",D("type"),"]"];default:throw new Error("unknown graphql type: "+JSON.stringify(T.kind))}},massageAstNode:x,hasPrettierIgnore:function I(P){var $;let D=P.getValue();return null==D||null===($=D.comments)||void 0===$?void 0:$.some((T=>"prettier-ignore"===T.value.trim()))},insertPragma:h,printComment:function E(P){let $=P.getValue();if("Comment"===$.kind)return"#"+$.value.trimEnd();throw new Error("Not a comment: "+JSON.stringify($))},canAttachComment:function w(P){return P.kind&&"Comment"!==P.kind}}}}),ug=te({"src/language-graphql/options.js"(e,r){ne();var t=Mt();r.exports={bracketSpacing:t.bracketSpacing}}}),sg=te({"src/language-graphql/parsers.js"(){ne()}}),ig=te({"node_modules/linguist-languages/data/GraphQL.json"(e,r){r.exports={name:"GraphQL",type:"data",color:"#e10098",extensions:[".graphql",".gql",".graphqls"],tmScope:"source.graphql",aceMode:"text",languageId:139}}}),ag=te({"src/language-graphql/index.js"(e,r){ne();var t=_t(),s=ng(),a=ug(),n=sg(),u=[t(ig(),(()=>({since:"1.5.0",parsers:["graphql"],vscodeLanguageIds:["graphql"]})))],i={graphql:s};r.exports={languages:u,options:a,printers:i,parsers:n}}}),Po=te({"node_modules/collapse-white-space/index.js"(e,r){ne(),r.exports=function t(s){return String(s).replace(/\s+/g," ")}}}),Io=te({"src/language-markdown/loc.js"(e,r){ne(),r.exports={locStart:function t(a){return a.position.start.offset},locEnd:function s(a){return a.position.end.offset}}}}),og=te({"src/language-markdown/constants.evaluate.js"(e,r){r.exports={cjkPattern:"(?:[\\u02ea-\\u02eb\\u1100-\\u11ff\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u303f\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u3190-\\u3191\\u3196-\\u31ba\\u31c0-\\u31e3\\u31f0-\\u321e\\u322a-\\u3247\\u3260-\\u327e\\u328a-\\u32b0\\u32c0-\\u32cb\\u32d0-\\u3370\\u337b-\\u337f\\u33e0-\\u33fe\\u3400-\\u4db5\\u4e00-\\u9fef\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufe10-\\ufe1f\\ufe30-\\ufe6f\\uff00-\\uffef]|[\\ud840-\\ud868\\ud86a-\\ud86c\\ud86f-\\ud872\\ud874-\\ud879][\\udc00-\\udfff]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67]|\\ud83c[\\ude00\\ude50-\\ude51]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])(?:[\\ufe00-\\ufe0f]|\\udb40[\\udd00-\\uddef])?",kPattern:"[\\u1100-\\u11ff\\u3001-\\u3003\\u3008-\\u3011\\u3013-\\u301f\\u302e-\\u3030\\u3037\\u30fb\\u3131-\\u318e\\u3200-\\u321e\\u3260-\\u327e\\ua960-\\ua97c\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\ufe45-\\ufe46\\uff61-\\uff65\\uffa0-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]",punctuationPattern:"[\\u0021-\\u002f\\u003a-\\u0040\\u005b-\\u0060\\u007b-\\u007e\\u00a1\\u00a7\\u00ab\\u00b6-\\u00b7\\u00bb\\u00bf\\u037e\\u0387\\u055a-\\u055f\\u0589-\\u058a\\u05be\\u05c0\\u05c3\\u05c6\\u05f3-\\u05f4\\u0609-\\u060a\\u060c-\\u060d\\u061b\\u061e-\\u061f\\u066a-\\u066d\\u06d4\\u0700-\\u070d\\u07f7-\\u07f9\\u0830-\\u083e\\u085e\\u0964-\\u0965\\u0970\\u09fd\\u0a76\\u0af0\\u0c77\\u0c84\\u0df4\\u0e4f\\u0e5a-\\u0e5b\\u0f04-\\u0f12\\u0f14\\u0f3a-\\u0f3d\\u0f85\\u0fd0-\\u0fd4\\u0fd9-\\u0fda\\u104a-\\u104f\\u10fb\\u1360-\\u1368\\u1400\\u166e\\u169b-\\u169c\\u16eb-\\u16ed\\u1735-\\u1736\\u17d4-\\u17d6\\u17d8-\\u17da\\u1800-\\u180a\\u1944-\\u1945\\u1a1e-\\u1a1f\\u1aa0-\\u1aa6\\u1aa8-\\u1aad\\u1b5a-\\u1b60\\u1bfc-\\u1bff\\u1c3b-\\u1c3f\\u1c7e-\\u1c7f\\u1cc0-\\u1cc7\\u1cd3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205e\\u207d-\\u207e\\u208d-\\u208e\\u2308-\\u230b\\u2329-\\u232a\\u2768-\\u2775\\u27c5-\\u27c6\\u27e6-\\u27ef\\u2983-\\u2998\\u29d8-\\u29db\\u29fc-\\u29fd\\u2cf9-\\u2cfc\\u2cfe-\\u2cff\\u2d70\\u2e00-\\u2e2e\\u2e30-\\u2e4f\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301f\\u3030\\u303d\\u30a0\\u30fb\\ua4fe-\\ua4ff\\ua60d-\\ua60f\\ua673\\ua67e\\ua6f2-\\ua6f7\\ua874-\\ua877\\ua8ce-\\ua8cf\\ua8f8-\\ua8fa\\ua8fc\\ua92e-\\ua92f\\ua95f\\ua9c1-\\ua9cd\\ua9de-\\ua9df\\uaa5c-\\uaa5f\\uaade-\\uaadf\\uaaf0-\\uaaf1\\uabeb\\ufd3e-\\ufd3f\\ufe10-\\ufe19\\ufe30-\\ufe52\\ufe54-\\ufe61\\ufe63\\ufe68\\ufe6a-\\ufe6b\\uff01-\\uff03\\uff05-\\uff0a\\uff0c-\\uff0f\\uff1a-\\uff1b\\uff1f-\\uff20\\uff3b-\\uff3d\\uff3f\\uff5b\\uff5d\\uff5f-\\uff65]|\\ud800[\\udd00-\\udd02\\udf9f\\udfd0]|\\ud801[\\udd6f]|\\ud802[\\udc57\\udd1f\\udd3f\\ude50-\\ude58\\ude7f\\udef0-\\udef6\\udf39-\\udf3f\\udf99-\\udf9c]|\\ud803[\\udf55-\\udf59]|\\ud804[\\udc47-\\udc4d\\udcbb-\\udcbc\\udcbe-\\udcc1\\udd40-\\udd43\\udd74-\\udd75\\uddc5-\\uddc8\\uddcd\\udddb\\udddd-\\udddf\\ude38-\\ude3d\\udea9]|\\ud805[\\udc4b-\\udc4f\\udc5b\\udc5d\\udcc6\\uddc1-\\uddd7\\ude41-\\ude43\\ude60-\\ude6c\\udf3c-\\udf3e]|\\ud806[\\udc3b\\udde2\\ude3f-\\ude46\\ude9a-\\ude9c\\ude9e-\\udea2]|\\ud807[\\udc41-\\udc45\\udc70-\\udc71\\udef7-\\udef8\\udfff]|\\ud809[\\udc70-\\udc74]|\\ud81a[\\ude6e-\\ude6f\\udef5\\udf37-\\udf3b\\udf44]|\\ud81b[\\ude97-\\ude9a\\udfe2]|\\ud82f[\\udc9f]|\\ud836[\\ude87-\\ude8b]|\\ud83a[\\udd5e-\\udd5f]"}}}),iu=te({"src/language-markdown/utils.js"(e,r){ne();var{getLast:t}=Ue(),{locStart:s,locEnd:a}=Io(),{cjkPattern:n,kPattern:u,punctuationPattern:i}=og(),l=["liquidNode","inlineCode","emphasis","esComment","strong","delete","wikiLink","link","linkReference","image","imageReference","footnote","footnoteReference","sentence","whitespace","word","break","inlineMath"],p=[...l,"tableCell","paragraph","heading"],y=new RegExp(u),h=new RegExp(i);function c(E,N){let[,x,I,P]=N.slice(E.position.start.offset,E.position.end.offset).match(/^\s*(\d+)(\.|\))(\s*)/);return{numberText:x,marker:I,leadingSpaces:P}}r.exports={mapAst:function _(E,N){return function x(I,P,$){let D=Object.assign({},N(I,P,$));return D.children&&(D.children=D.children.map(((T,m)=>x(T,m,[D,...$])))),D}(E,null,[])},splitText:function g(E,N){let x="non-cjk",I="cj-letter",$="cjk-punctuation",D=[],T=("preserve"===N.proseWrap?E:E.replace(new RegExp(`(${n})\n(${n})`,"g"),"$1$2")).split(/([\t\n ]+)/);for(let[C,o]of T.entries()){if(C%2==1){D.push({type:"whitespace",value:/\n/.test(o)?"\n":" "});continue}if((0===C||C===T.length-1)&&""===o)continue;let d=o.split(new RegExp(`(${n})`));for(let[v,S]of d.entries())if(0!==v&&v!==d.length-1||""!==S){if(v%2==0){""!==S&&m({type:"word",value:S,kind:x,hasLeadingPunctuation:h.test(S[0]),hasTrailingPunctuation:h.test(t(S))});continue}m(h.test(S)?{type:"word",value:S,kind:$,hasLeadingPunctuation:!0,hasTrailingPunctuation:!0}:{type:"word",value:S,kind:y.test(S)?"k-letter":I,hasLeadingPunctuation:!1,hasTrailingPunctuation:!1})}}return D;function m(C){let o=t(D);o&&"word"===o.type&&(o.kind===x&&C.kind===I&&!o.hasTrailingPunctuation||o.kind===I&&C.kind===x&&!C.hasLeadingPunctuation?D.push({type:"whitespace",value:" "}):!function d(v,S){return o.kind===v&&C.kind===S||o.kind===S&&C.kind===v}(x,$)&&![o.value,C.value].some((v=>/\u3000/.test(v)))&&D.push({type:"whitespace",value:""})),D.push(C)}},punctuationPattern:i,getFencedCodeBlockValue:function F(E,N){let{value:x}=E;return E.position.end.offset===N.length&&x.endsWith("\n")&&N.endsWith("\n")?x.slice(0,-1):x},getOrderedListItemInfo:c,hasGitDiffFriendlyOrderedList:function f(E,N){if(!E.ordered||E.children.length<2)return!1;let x=Number(c(E.children[0],N.originalText).numberText),I=Number(c(E.children[1],N.originalText).numberText);if(0===x&&E.children.length>2){let P=Number(c(E.children[2],N.originalText).numberText);return 1===I&&1===P}return 1===I},INLINE_NODE_TYPES:l,INLINE_NODE_WRAPPER_TYPES:p,isAutolink:function w(E){if("link"!==E?.type||1!==E.children.length)return!1;let[N]=E.children;return s(E)===s(N)&&a(E)===a(N)}}}}),lg=te({"src/language-markdown/embed.js"(e,r){ne();var{inferParserByLanguage:t,getMaxContinuousCount:s}=Ue(),{builders:{hardline:a,markAsRoot:n},utils:{replaceEndOfLine:u}}=qe(),i=su(),{getFencedCodeBlockValue:l}=iu();r.exports=function p(y,h,g,c){let f=y.getValue();if("code"===f.type&&null!==f.lang){let F=t(f.lang,c);if(F){let _=c.__inJsTemplate?"~":"`",w=_.repeat(Math.max(3,s(f.value,_)+1)),E={parser:F};"tsx"===f.lang&&(E.filepath="dummy.tsx");let N=g(l(f,c.originalText),E,{stripTrailingHardline:!0});return n([w,f.lang,f.meta?" "+f.meta:"",a,u(N),a,w])}}switch(f.type){case"front-matter":return i(f,g);case"importExport":return[g(f.value,{parser:"babel"},{stripTrailingHardline:!0}),a];case"jsx":return g(`<$>${f.value}</$>`,{parser:"__js_expression",rootMarker:"mdx"},{stripTrailingHardline:!0})}return null}}}),ko=te({"src/language-markdown/pragma.js"(e,r){ne();var t=_o(),s=["format","prettier"];function a(n){let u=`@(${s.join("|")})`,i=new RegExp([`\x3c!--\\s*${u}\\s*--\x3e`,`{\\s*\\/\\*\\s*${u}\\s*\\*\\/\\s*}`,`\x3c!--.*\r?\n[\\s\\S]*(^|\n)[^\\S\n]*${u}[^\\S\n]*($|\n)[\\s\\S]*\n.*--\x3e`].join("|"),"m"),l=n.match(i);return 0===l?.index}r.exports={startWithPragma:a,hasPragma:n=>a(t(n).content.trimStart()),insertPragma:n=>{let u=t(n),i=`\x3c!-- @${s[0]} --\x3e`;return u.frontMatter?`${u.frontMatter.raw}\n\n${i}\n\n${u.content}`:`${i}\n\n${u.content}`}}}}),cg=te({"src/language-markdown/print-preprocess.js"(e,r){ne();var t=lt(),{getOrderedListItemInfo:s,mapAst:a,splitText:n}=iu(),u=/^.$/su;function g(w,E,N){return a(w,(x=>{if(!x.children)return x;let I=x.children.reduce(((P,$)=>{let D=t(P);return D&&E(D,$)?P.splice(-1,1,N(D,$)):P.push($),P}),[]);return Object.assign(Object.assign({},x),{},{children:I})}))}r.exports=function i(w,E){return w=function h(w){return g(w,((E,N)=>"importExport"===E.type&&"importExport"===N.type),((E,N)=>({type:"importExport",value:E.value+"\n\n"+N.value,position:{start:E.position.start,end:N.position.end}})))}(w=function l(w){return a(w,(E=>"import"!==E.type&&"export"!==E.type?E:Object.assign(Object.assign({},E),{},{type:"importExport"})))}(w=function f(w,E){return a(w,((N,x,I)=>{let[P]=I;if("text"!==N.type)return N;let{value:$}=N;return"paragraph"===P.type&&(0===x&&($=$.trimStart()),x===P.children.length-1&&($=$.trimEnd())),{type:"sentence",position:N.position,children:n($,E)}}))}(w=function _(w,E){return a(w,((I,P,$)=>{if("list"===I.type&&I.children.length>0){for(let D=0;D<$.length;D++){let T=$[D];if("list"===T.type&&!T.isAligned)return I.isAligned=!1,I}I.isAligned=x(I)}return I}));function N(I){return 0===I.children.length?-1:I.children[0].position.start.column-1}function x(I){if(!I.ordered)return!0;let[P,$]=I.children;if(s(P,E.originalText).leadingSpaces.length>1)return!0;let T=N(P);return-1!==T&&(1===I.children.length?T%E.tabWidth==0:T===N($)&&(T%E.tabWidth==0||s($,E.originalText).leadingSpaces.length>1))}}(w=function F(w,E){return a(w,((N,x,I)=>{if("code"===N.type){let P=/^\n?(?: {4,}|\t)/.test(E.originalText.slice(N.position.start.offset,N.position.end.offset));if(N.isIndented=P,P)for(let $=0;$<I.length;$++){let D=I[$];if(D.hasIndentedCodeblock)break;"list"===D.type&&(D.hasIndentedCodeblock=!0)}}return N}))}(w=function p(w,E){return a(w,(N=>"inlineCode"!==N.type||"preserve"===E.proseWrap?N:Object.assign(Object.assign({},N),{},{value:N.value.replace(/\s+/g," ")})))}(w=function c(w){return g(w,((E,N)=>"text"===E.type&&"text"===N.type),((E,N)=>({type:"text",value:E.value+N.value,position:{start:E.position.start,end:N.position.end}})))}(w=function y(w,E){return a(w,(N=>"text"===N.type&&"*"!==N.value&&"_"!==N.value&&u.test(N.value)&&N.position.end.offset-N.position.start.offset!==N.value.length?Object.assign(Object.assign({},N),{},{value:E.originalText.slice(N.position.start.offset,N.position.end.offset)}):N))}(w,E)),E),E),E),E)))}}}),pg=te({"src/language-markdown/clean.js"(e,r){ne();var t=Po(),{isFrontMatterNode:s}=Ue(),{startWithPragma:a}=ko(),n=new Set(["position","raw"]);function u(i,l,p){if(("front-matter"===i.type||"code"===i.type||"yaml"===i.type||"import"===i.type||"export"===i.type||"jsx"===i.type)&&delete l.value,"list"===i.type&&delete l.isAligned,("list"===i.type||"listItem"===i.type)&&(delete l.spread,delete l.loose),"text"===i.type||("inlineCode"===i.type&&(l.value=i.value.replace(/[\t\n ]+/g," ")),"wikiLink"===i.type&&(l.value=i.value.trim().replace(/[\t\n]+/g," ")),("definition"===i.type||"linkReference"===i.type||"imageReference"===i.type)&&(l.label=t(i.label)),("definition"===i.type||"link"===i.type||"image"===i.type)&&i.title&&(l.title=i.title.replace(/\\(["')])/g,"$1")),p&&"root"===p.type&&p.children.length>0&&(p.children[0]===i||s(p.children[0])&&p.children[1]===i)&&"html"===i.type&&a(i.value)))return null}u.ignoredProperties=n,r.exports=u}}),fg=te({"src/language-markdown/printer-markdown.js"(e,r){ne();var t=Po(),{getLast:s,getMinNotPresentContinuousCount:a,getMaxContinuousCount:n,getStringWidth:u,isNonEmptyArray:i}=Ue(),{builders:{breakParent:l,join:p,line:y,literalline:h,markAsRoot:g,hardline:c,softline:f,ifBreak:F,fill:_,align:w,indent:E,group:N,hardlineWithoutBreakParent:x},utils:{normalizeDoc:I,replaceTextEndOfLine:P},printer:{printDocToString:$}}=qe(),D=lg(),{insertPragma:T}=ko(),{locStart:m,locEnd:C}=Io(),o=cg(),d=pg(),{getFencedCodeBlockValue:v,hasGitDiffFriendlyOrderedList:S,splitText:b,punctuationPattern:B,INLINE_NODE_TYPES:k,INLINE_NODE_WRAPPER_TYPES:M,isAutolink:R}=iu(),q=new Set(["importExport"]),J=["heading","tableCell","link","wikiLink"],L=new Set(["listItem","definition","footnoteDefinition"]);function V(oe,H,pe,X){let le=oe.getValue(),Ae=null===le.checked?"":le.checked?"[x] ":"[ ] ";return[Ae,ue(oe,H,pe,{processor:(Ee,De)=>{if(0===De&&"list"!==Ee.getValue().type)return w(" ".repeat(Ae.length),pe());let A=" ".repeat(function ke(oe,H,pe){return oe<H?H:oe>pe?pe:oe}(H.tabWidth-X.length,0,3));return[A,w(A,pe())]}})]}function Y(oe,H){return function ie(oe,H,pe){let X=-1;for(let le of H.children)if(le.type===oe.type&&pe(le)?X++:X=-1,le===oe)return X}(oe,H,(pe=>pe.ordered===oe.ordered))}function ee(oe,H){let le,pe=Array.isArray(H)?H:[H],X=-1;for(;le=oe.getParentNode(++X);)if(pe.includes(le.type))return X;return-1}function ce(oe,H){let pe=ee(oe,H);return-1===pe?null:oe.getParentNode(pe)}function W(oe,H,pe){if("preserve"===pe.proseWrap&&"\n"===H)return c;let X="always"===pe.proseWrap&&!ce(oe,J);return""!==H?X?y:" ":X?f:""}function de(oe,H,pe){let X=[],le=null,{children:Ae}=oe.getValue();for(let[Ee,De]of Ae.entries())switch(U(De)){case"start":null===le&&(le={index:Ee,offset:De.position.end.offset});break;case"end":null!==le&&(X.push({start:le,end:{index:Ee,offset:De.position.start.offset}}),le=null)}return ue(oe,H,pe,{processor:(Ee,De)=>{if(X.length>0){let A=X[0];if(De===A.start.index)return[Fe(Ae[A.start.index]),H.originalText.slice(A.start.offset,A.end.offset),Fe(Ae[A.end.index])];if(A.start.index<De&&De<A.end.index)return!1;if(De===A.end.index)return X.shift(),!1}return pe()}})}function ue(oe,H,pe){let A,X=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},{postprocessor:le}=X,Ae=X.processor||(()=>pe()),Ee=oe.getValue(),De=[];return oe.each(((G,re)=>{let ye=G.getValue(),Ce=Ae(G,re);if(!1!==Ce){let Be={parts:De,prevNode:A,parentNode:Ee,options:H};(function Z(oe,H){let pe=0===H.parts.length,X=k.includes(oe.type),le="html"===oe.type&&M.includes(H.parentNode.type);return!pe&&!X&&!le})(ye,Be)&&(De.push(c),A&&q.has(A.type)||(function se(oe,H){var pe,X,le;let Ee=(H.prevNode&&H.prevNode.type)===oe.type&&L.has(oe.type),De="listItem"===H.parentNode.type&&!H.parentNode.loose,A="listItem"===(null===(pe=H.prevNode)||void 0===pe?void 0:pe.type)&&H.prevNode.loose,G="next"===U(H.prevNode),re="html"===oe.type&&"html"===(null===(X=H.prevNode)||void 0===X?void 0:X.type)&&H.prevNode.position.end.line+1===oe.position.start.line,ye="html"===oe.type&&"listItem"===H.parentNode.type&&"paragraph"===(null===(le=H.prevNode)||void 0===le?void 0:le.type)&&H.prevNode.position.end.line+1===oe.position.start.line;return A||!(Ee||De||G||re||ye)}(ye,Be)||fe(ye,Be))&&De.push(c),fe(ye,Be)&&De.push(c)),De.push(Ce),A=ye}}),"children"),le?le(De):De}function Fe(oe){return"html"===oe.type?oe.value:"paragraph"===oe.type&&Array.isArray(oe.children)&&1===oe.children.length&&"esComment"===oe.children[0].type?["{/* ",oe.children[0].value," */}"]:void 0}function z(oe){let H=oe;for(;i(H.children);)H=s(H.children);return H}function U(oe){let H;if("html"===oe.type)H=oe.value.match(/^<!--\s*prettier-ignore(?:-(start|end))?\s*-->$/);else{let pe;"esComment"===oe.type?pe=oe:"paragraph"===oe.type&&1===oe.children.length&&"esComment"===oe.children[0].type&&(pe=oe.children[0]),pe&&(H=pe.value.match(/^prettier-ignore(?:-(start|end))?$/))}return!!H&&(H[1]||"next")}function fe(oe,H){let pe=H.prevNode&&"list"===H.prevNode.type,X="code"===oe.type&&oe.isIndented;return pe&&X}function he(oe){let H=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],pe=[" ",...Array.isArray(H)?H:[H]];return new RegExp(pe.map((X=>`\\${X}`)).join("|")).test(oe)?`<${oe}>`:oe}function we(oe,H){if(!oe)return"";if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2])return" "+we(oe,H,!1);if((oe=oe.replace(/\\(["')])/g,"$1")).includes('"')&&oe.includes("'")&&!oe.includes(")"))return`(${oe})`;let X=oe.split("'").length-1,le=oe.split('"').length-1,Ae=X>le?'"':le>X||H.singleQuote?"'":'"';return`${Ae}${oe=(oe=oe.replace(/\\/,"\\\\")).replace(new RegExp(`(${Ae})`,"g"),"\\$1")}${Ae}`}function Ne(oe){return`[${t(oe.label)}]`}function Pe(oe){return`[^${oe.label}]`}r.exports={preprocess:o,print:function Q(oe,H,pe){let X=oe.getValue();if(function ge(oe){let H=ce(oe,["linkReference","imageReference"]);return H&&("linkReference"!==H.type||"full"!==H.referenceType)}(oe))return b(H.originalText.slice(X.position.start.offset,X.position.end.offset),H).map((le=>"word"===le.type?le.value:""===le.value?"":W(oe,le.value,H)));switch(X.type){case"front-matter":return H.originalText.slice(X.position.start.offset,X.position.end.offset);case"root":return 0===X.children.length?"":[I(de(oe,H,pe)),q.has(z(X).type)?"":c];case"paragraph":return ue(oe,H,pe,{postprocessor:_});case"sentence":return ue(oe,H,pe);case"word":{let le=X.value.replace(/\*/g,"\\$&").replace(new RegExp([`(^|${B})(_+)`,`(_+)(${B}|$)`].join("|"),"g"),((De,A,G,re,ye)=>(G?`${A}${G}`:`${re}${ye}`).replace(/_/g,"\\_"))),Ae=(De,A,G)=>"sentence"===De.type&&0===G,Ee=(De,A,G)=>R(De.children[G-1]);return le!==X.value&&(oe.match(void 0,Ae,Ee)||oe.match(void 0,Ae,((De,A,G)=>"emphasis"===De.type&&0===G),Ee))&&(le=le.replace(/^(\\?[*_])+/,(De=>De.replace(/\\/g,"")))),le}case"whitespace":{let le=oe.getParentNode(),Ae=le.children.indexOf(X),Ee=le.children[Ae+1],De=Ee&&/^>|^(?:[*+-]|#{1,6}|\d+[).])$/.test(Ee.value)?"never":H.proseWrap;return W(oe,X.value,{proseWrap:De})}case"emphasis":{let le;if(R(X.children[0]))le=H.originalText[X.position.start.offset];else{let Ae=oe.getParentNode(),Ee=Ae.children.indexOf(X),De=Ae.children[Ee-1],A=Ae.children[Ee+1];le=De&&"sentence"===De.type&&De.children.length>0&&"word"===s(De.children).type&&!s(De.children).hasTrailingPunctuation||A&&"sentence"===A.type&&A.children.length>0&&"word"===A.children[0].type&&!A.children[0].hasLeadingPunctuation||ce(oe,"emphasis")?"*":"_"}return[le,ue(oe,H,pe),le]}case"strong":return["**",ue(oe,H,pe),"**"];case"delete":return["~~",ue(oe,H,pe),"~~"];case"inlineCode":{let le=a(X.value,"`"),Ae="`".repeat(le||1),Ee=le&&!/^\s/.test(X.value)?" ":"";return[Ae,Ee,X.value,Ee,Ae]}case"wikiLink":{let le="";return le="preserve"===H.proseWrap?X.value:X.value.replace(/[\t\n]+/g," "),["[[",le,"]]"]}case"link":switch(H.originalText[X.position.start.offset]){case"<":{let le="mailto:";return["<",X.url.startsWith(le)&&H.originalText.slice(X.position.start.offset+1,X.position.start.offset+1+le.length)!==le?X.url.slice(le.length):X.url,">"]}case"[":return["[",ue(oe,H,pe),"](",he(X.url,")"),we(X.title,H),")"];default:return H.originalText.slice(X.position.start.offset,X.position.end.offset)}case"image":return["![",X.alt||"","](",he(X.url,")"),we(X.title,H),")"];case"blockquote":return["> ",w("> ",ue(oe,H,pe))];case"heading":return["#".repeat(X.depth)+" ",ue(oe,H,pe)];case"code":{if(X.isIndented){let Ee=" ".repeat(4);return w(Ee,[Ee,...P(X.value,c)])}let le=H.__inJsTemplate?"~":"`",Ae=le.repeat(Math.max(3,n(X.value,le)+1));return[Ae,X.lang||"",X.meta?" "+X.meta:"",c,...P(v(X,H.originalText),c),c,Ae]}case"html":{let le=oe.getParentNode(),Ae="root"===le.type&&s(le.children)===X?X.value.trimEnd():X.value,Ee=/^<!--.*-->$/s.test(Ae);return P(Ae,Ee?c:g(h))}case"list":{let le=Y(X,oe.getParentNode()),Ae=S(X,H);return ue(oe,H,pe,{processor:(Ee,De)=>{let A=function re(){let ye=X.ordered?(0===De?X.start:Ae?1:X.start+De)+(le%2==0?". ":") "):le%2==0?"- ":"* ";return X.isAligned||X.hasIndentedCodeblock?function j(oe,H){let pe=X();return oe+" ".repeat(pe>=4?0:pe);function X(){let le=oe.length%H.tabWidth;return 0===le?0:H.tabWidth-le}}(ye,H):ye}(),G=Ee.getValue();return 2===G.children.length&&"html"===G.children[1].type&&G.children[0].position.start.column!==G.children[1].position.start.column?[A,V(Ee,H,pe,A)]:[A,w(" ".repeat(A.length),V(Ee,H,pe,A))]}})}case"thematicBreak":{let le=ee(oe,"list");return-1===le?"---":Y(oe.getParentNode(le),oe.getParentNode(le+1))%2==0?"***":"---"}case"linkReference":return["[",ue(oe,H,pe),"]","full"===X.referenceType?Ne(X):"collapsed"===X.referenceType?"[]":""];case"imageReference":return"full"===X.referenceType?["![",X.alt||"","]",Ne(X)]:["![",X.alt,"]","collapsed"===X.referenceType?"[]":""];case"definition":{let le="always"===H.proseWrap?y:" ";return N([Ne(X),":",E([le,he(X.url),null===X.title?"":[le,we(X.title,H,!1)]])])}case"footnote":return["[^",ue(oe,H,pe),"]"];case"footnoteReference":return Pe(X);case"footnoteDefinition":{let le=oe.getParentNode().children[oe.getName()+1],Ae=1===X.children.length&&"paragraph"===X.children[0].type&&("never"===H.proseWrap||"preserve"===H.proseWrap&&X.children[0].position.start.line===X.children[0].position.end.line);return[Pe(X),": ",Ae?ue(oe,H,pe):N([w(" ".repeat(4),ue(oe,H,pe,{processor:(Ee,De)=>0===De?N([f,pe()]):pe()})),le&&"footnoteDefinition"===le.type?f:""])]}case"table":return function K(oe,H,pe){let X=oe.getValue(),le=[],Ae=oe.map((ye=>ye.map(((Ce,Be)=>{let ve=$(pe(),H).formatted,ze=u(ve);return le[Be]=Math.max(le[Be]||3,ze),{text:ve,width:ze}}),"children")),"children"),Ee=A(!1);if("never"!==H.proseWrap)return[l,Ee];let De=A(!0);return[l,N(F(De,Ee))];function A(ye){let Ce=[re(Ae[0],ye),G(ye)];return Ae.length>1&&Ce.push(p(x,Ae.slice(1).map((Be=>re(Be,ye))))),p(x,Ce)}function G(ye){return`| ${le.map(((Be,ve)=>{let ze=X.align[ve],Ye="center"===ze||"right"===ze?":":"-";return`${"center"===ze||"left"===ze?":":"-"}${ye?"-":"-".repeat(Be-2)}${Ye}`})).join(" | ")} |`}function re(ye,Ce){return`| ${ye.map(((ve,ze)=>{let{text:be,width:Ye}=ve;if(Ce)return be;let Se=le[ze]-Ye,Ie=X.align[ze],Oe=0;"right"===Ie?Oe=Se:"center"===Ie&&(Oe=Math.floor(Se/2));let Je=Se-Oe;return`${" ".repeat(Oe)}${be}${" ".repeat(Je)}`})).join(" | ")} |`}}(oe,H,pe);case"tableCell":return ue(oe,H,pe);case"break":return/\s/.test(H.originalText[X.position.start.offset])?["  ",g(h)]:["\\",c];case"liquidNode":return P(X.value,c);case"importExport":return[X.value,c];case"esComment":return["{/* ",X.value," */}"];case"jsx":return X.value;case"math":return["$$",c,X.value?[...P(X.value,c),c]:"","$$"];case"inlineMath":return H.originalText.slice(m(X),C(X));default:throw new Error(`Unknown markdown type ${JSON.stringify(X.type)}`)}},embed:D,massageAstNode:d,hasPrettierIgnore:function Re(oe){let H=Number(oe.getName());return 0!==H&&"next"===U(oe.getParentNode().children[H-1])},insertPragma:T}}}),Dg=te({"src/language-markdown/options.js"(e,r){ne();var t=Mt();r.exports={proseWrap:t.proseWrap,singleQuote:t.singleQuote}}}),mg=te({"src/language-markdown/parsers.js"(){ne()}}),_a=te({"node_modules/linguist-languages/data/Markdown.json"(e,r){r.exports={name:"Markdown",type:"prose",color:"#083fa1",aliases:["pandoc"],aceMode:"markdown",codemirrorMode:"gfm",codemirrorMimeType:"text/x-gfm",wrap:!0,extensions:[".md",".livemd",".markdown",".mdown",".mdwn",".mdx",".mkd",".mkdn",".mkdown",".ronn",".scd",".workbook"],filenames:["contents.lr"],tmScope:"source.gfm",languageId:222}}}),dg=te({"src/language-markdown/index.js"(e,r){ne();var t=_t(),s=fg(),a=Dg(),n=mg(),u=[t(_a(),(l=>({since:"1.8.0",parsers:["markdown"],vscodeLanguageIds:["markdown"],filenames:[...l.filenames,"README"],extensions:l.extensions.filter((p=>".mdx"!==p))}))),t(_a(),(()=>({name:"MDX",since:"1.15.0",parsers:["mdx"],vscodeLanguageIds:["mdx"],filenames:[],extensions:[".mdx"]})))],i={mdast:s};r.exports={languages:u,options:a,printers:i,parsers:n}}}),gg=te({"src/language-html/clean.js"(e,r){ne();var{isFrontMatterNode:t}=Ue(),s=new Set(["sourceSpan","startSourceSpan","endSourceSpan","nameSpan","valueSpan"]);function a(n,u){if("text"===n.type||"comment"===n.type||t(n)||"yaml"===n.type||"toml"===n.type)return null;"attribute"===n.type&&delete u.value,"docType"===n.type&&delete u.value}a.ignoredProperties=s,r.exports=a}}),yg=te({"src/language-html/constants.evaluate.js"(e,r){r.exports={CSS_DISPLAY_TAGS:{area:"none",base:"none",basefont:"none",datalist:"none",head:"none",link:"none",meta:"none",noembed:"none",noframes:"none",param:"block",rp:"none",script:"block",source:"block",style:"none",template:"inline",track:"block",title:"none",html:"block",body:"block",address:"block",blockquote:"block",center:"block",div:"block",figure:"block",figcaption:"block",footer:"block",form:"block",header:"block",hr:"block",legend:"block",listing:"block",main:"block",p:"block",plaintext:"block",pre:"block",xmp:"block",slot:"contents",ruby:"ruby",rt:"ruby-text",article:"block",aside:"block",h1:"block",h2:"block",h3:"block",h4:"block",h5:"block",h6:"block",hgroup:"block",nav:"block",section:"block",dir:"block",dd:"block",dl:"block",dt:"block",ol:"block",ul:"block",li:"list-item",table:"table",caption:"table-caption",colgroup:"table-column-group",col:"table-column",thead:"table-header-group",tbody:"table-row-group",tfoot:"table-footer-group",tr:"table-row",td:"table-cell",th:"table-cell",fieldset:"block",button:"inline-block",details:"block",summary:"block",dialog:"block",meter:"inline-block",progress:"inline-block",object:"inline-block",video:"inline-block",audio:"inline-block",select:"inline-block",option:"block",optgroup:"block"},CSS_DISPLAY_DEFAULT:"inline",CSS_WHITE_SPACE_TAGS:{listing:"pre",plaintext:"pre",pre:"pre",xmp:"pre",nobr:"nowrap",table:"initial",textarea:"pre-wrap"},CSS_WHITE_SPACE_DEFAULT:"normal"}}}),hg=te({"src/language-html/utils/is-unknown-namespace.js"(e,r){ne(),r.exports=function t(s){return"element"===s.type&&!s.hasExplicitNamespace&&!["html","svg"].includes(s.namespace)}}}),Rt=te({"src/language-html/utils/index.js"(e,r){ne();var{inferParserByLanguage:t,isFrontMatterNode:s}=Ue(),{builders:{line:a,hardline:n,join:u},utils:{getDocParts:i,replaceTextEndOfLine:l}}=qe(),{CSS_DISPLAY_TAGS:p,CSS_DISPLAY_DEFAULT:y,CSS_WHITE_SPACE_TAGS:h,CSS_WHITE_SPACE_DEFAULT:g}=yg(),c=hg(),f=new Set(["\t","\n","\f","\r"," "]),_=A=>A.replace(/[\t\n\f\r ]+$/,""),N=A=>(A=>A.replace(/^[\t\f\r ]*\n/g,""))(_(A)),I=A=>A.match(/^[\t\n\f\r ]*/)[0];function o(A){return"element"===A.type&&("script"===A.fullName||"style"===A.fullName||"svg:style"===A.fullName||c(A)&&("script"===A.name||"style"===A.name))}function S(A){return we(A).startsWith("pre")}function q(A){return"element"===A.type&&A.children.length>0&&(["html","head","ul","ol","select"].includes(A.name)||A.cssDisplay.startsWith("table")&&"table-cell"!==A.cssDisplay)}function L(A){return Y(A)||"element"===A.type&&"br"===A.fullName||Q(A)}function Q(A){return V(A)&&j(A)}function V(A){return A.hasLeadingSpaces&&(A.prev?A.prev.sourceSpan.end.line<A.sourceSpan.start.line:"root"===A.parent.type||A.parent.startSourceSpan.end.line<A.sourceSpan.start.line)}function j(A){return A.hasTrailingSpaces&&(A.next?A.next.sourceSpan.start.line>A.sourceSpan.end.line:"root"===A.parent.type||A.parent.endSourceSpan&&A.parent.endSourceSpan.start.line>A.sourceSpan.end.line)}function Y(A){switch(A.type){case"ieConditionalComment":case"comment":case"directive":return!0;case"element":return["script","select"].includes(A.name)}return!1}function ce(A){let{type:G,lang:re}=A.attrMap;return"module"===G||"text/javascript"===G||"text/babel"===G||"application/javascript"===G||"jsx"===re?"babel":"application/x-typescript"===G||"ts"===re||"tsx"===re?"typescript":"text/markdown"===G?"markdown":"text/html"===G?"html":G&&(G.endsWith("json")||G.endsWith("importmap"))||"speculationrules"===G?"json":"text/x-handlebars-template"===G?"glimmer":void 0}function de(A){return"block"===A||"list-item"===A||A.startsWith("table")}function se(A){return we(A).startsWith("pre")}function we(A){return"element"===A.type&&(!A.namespace||c(A))&&h[A.name]||g}function Re(A){let G=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function ke(A){let G=Number.POSITIVE_INFINITY;for(let re of A.split("\n")){if(0===re.length)continue;if(!f.has(re[0]))return 0;let ye=I(re).length;re.length!==ye&&ye<G&&(G=ye)}return G===Number.POSITIVE_INFINITY?0:G}(A);return 0===G?A:A.split("\n").map((re=>re.slice(G))).join("\n")}var oe=new Set(["template","style","script"]);function H(A,G){return pe(A,G)&&!oe.has(A.fullName)}function pe(A,G){return"vue"===G.parser&&"element"===A.type&&"root"===A.parent.type&&"html"!==A.fullName.toLowerCase()}function X(A,G){return pe(A,G)&&(H(A,G)||A.attrMap.lang&&"html"!==A.attrMap.lang)}r.exports={htmlTrim:A=>(A=>A.replace(/^[\t\n\f\r ]+/,""))(_(A)),htmlTrimPreserveIndentation:N,hasHtmlWhitespace:A=>/[\t\n\f\r ]/.test(A),getLeadingAndTrailingHtmlWhitespace:A=>{let[,G,re,ye]=A.match(/^([\t\n\f\r ]*)(.*?)([\t\n\f\r ]*)$/s);return{leadingWhitespace:G,trailingWhitespace:ye,text:re}},canHaveInterpolation:function d(A){return A.children&&!o(A)},countChars:function Ne(A,G){let re=0;for(let ye=0;ye<A.length;ye++)A[ye]===G&&re++;return re},countParents:function fe(A,G){let re=0;for(let ye=A.stack.length-1;ye>=0;ye--){let Ce=A.stack[ye];Ce&&"object"==typeof Ce&&!Array.isArray(Ce)&&G(Ce)&&re++}return re},dedentString:Re,forceBreakChildren:q,forceBreakContent:function R(A){return q(A)||"element"===A.type&&A.children.length>0&&(["body","script","style"].includes(A.name)||A.children.some((G=>function ee(A){return A.children&&A.children.some((G=>"text"!==G.type))}(G))))||A.firstChild&&A.firstChild===A.lastChild&&"text"!==A.firstChild.type&&V(A.firstChild)&&(!A.lastChild.isTrailingSpaceSensitive||j(A.lastChild))},forceNextEmptyLine:function M(A){return s(A)||A.next&&A.sourceSpan.end&&A.sourceSpan.end.line+1<A.next.sourceSpan.start.line},getLastDescendant:function ie(A){return A.lastChild?ie(A.lastChild):A},getNodeCssStyleDisplay:function he(A,G){if(A.prev&&"comment"===A.prev.type){let ye=A.prev.value.match(/^\s*display:\s*([a-z]+)\s*$/);if(ye)return ye[1]}let re=!1;if("element"===A.type&&"svg"===A.namespace){if(!function ge(A,G){let re=A;for(;re;){if(G(re))return!0;re=re.parent}return!1}(A,(ye=>"svg:foreignObject"===ye.fullName)))return"svg"===A.name?"inline-block":"block";re=!0}switch(G.htmlWhitespaceSensitivity){case"strict":return"inline";case"ignore":return"block";default:return"vue"===G.parser&&A.parent&&"root"===A.parent.type?"block":"element"===A.type&&(!A.namespace||re||c(A))&&p[A.name]||y}},getNodeCssStyleWhiteSpace:we,hasPrettierIgnore:function T(A){return!("attribute"===A.type||!A.parent||!A.prev)&&function m(A){return"comment"===A.type&&"prettier-ignore"===A.value.trim()}(A.prev)},inferScriptParser:function K(A,G){return"script"!==A.name||A.attrMap.src?"style"===A.name?function W(A,G){let{lang:re}=A.attrMap;return re&&"postcss"!==re&&"css"!==re?"scss"===re?"scss":"less"===re?"less":"stylus"===re?t("stylus",G):void 0:"css"}(A,G):G&&X(A,G)?ce(A)||!("src"in A.attrMap)&&t(A.attrMap.lang,G):void 0:A.attrMap.lang||A.attrMap.type?ce(A):"babel"},isVueCustomBlock:H,isVueNonHtmlBlock:X,isVueScriptTag:function De(A,G){return pe(A,G)&&"script"===A.name},isVueSlotAttribute:function le(A){let G=A.fullName;return"#"===G.charAt(0)||"slot-scope"===G||"v-slot"===G||G.startsWith("v-slot:")},isVueSfcBindingsAttribute:function Ae(A,G){let re=A.parent;if(!pe(re,G))return!1;let ye=re.fullName,Ce=A.fullName;return"script"===ye&&"setup"===Ce||"style"===ye&&"vars"===Ce},isVueSfcBlock:pe,isDanglingSpaceSensitiveNode:function k(A){return function Z(A){return!de(A)&&"inline-block"!==A}(A.cssDisplay)&&!o(A)},isIndentationSensitiveNode:S,isLeadingSpaceSensitiveNode:function b(A,G){let re=function ye(){return!s(A)&&(!("text"!==A.type&&"interpolation"!==A.type||!A.prev||"text"!==A.prev.type&&"interpolation"!==A.prev.type)||!(!A.parent||"none"===A.parent.cssDisplay)&&(!!se(A.parent)||!(!A.prev&&("root"===A.parent.type||se(A)&&A.parent||o(A.parent)||H(A.parent,G)||!function ue(A){return!de(A)&&"inline-block"!==A}(A.parent.cssDisplay))||A.prev&&!function U(A){return!de(A)}(A.prev.cssDisplay))))}();return re&&!A.prev&&A.parent&&A.parent.tagDefinition&&A.parent.tagDefinition.ignoreFirstLf?"interpolation"===A.type:re},isPreLikeNode:se,isScriptLikeTag:o,isTextLikeNode:function C(A){return"text"===A.type||"comment"===A.type},isTrailingSpaceSensitiveNode:function B(A,G){return!s(A)&&(!("text"!==A.type&&"interpolation"!==A.type||!A.next||"text"!==A.next.type&&"interpolation"!==A.next.type)||!(!A.parent||"none"===A.parent.cssDisplay)&&(!!se(A.parent)||!(!A.next&&("root"===A.parent.type||se(A)&&A.parent||o(A.parent)||H(A.parent,G)||!function Fe(A){return!de(A)&&"inline-block"!==A}(A.parent.cssDisplay))||A.next&&!function z(A){return!de(A)}(A.next.cssDisplay))))},isWhitespaceSensitiveNode:function v(A){return o(A)||"interpolation"===A.type||S(A)},isUnknownNamespace:c,preferHardlineAsLeadingSpaces:function J(A){return Y(A)||A.prev&&L(A.prev)||Q(A)},preferHardlineAsTrailingSpaces:L,shouldPreserveContent:function D(A,G){return!!("ieConditionalComment"===A.type&&A.lastChild&&!A.lastChild.isSelfClosing&&!A.lastChild.endSourceSpan||"ieConditionalComment"===A.type&&!A.complete||se(A)&&A.children.some((re=>"text"!==re.type&&"interpolation"!==re.type))||X(A,G)&&!o(A)&&"interpolation"!==A.type)},unescapeQuoteEntities:function Pe(A){return A.replace(/&apos;/g,"'").replace(/&quot;/g,'"')},getTextValueParts:function Ee(A){let G=arguments.length>1&&void 0!==arguments[1]?arguments[1]:A.value;return A.parent.isWhitespaceSensitive?A.parent.isIndentationSensitive?l(G):l(Re(N(G)),n):i(u(a,(A=>A.split(/[\t\n\f\r ]+/))(G)))}}}}),vg=te({"node_modules/angular-html-parser/lib/compiler/src/chars.js"(e){function t(i){return e.$0<=i&&i<=e.$9}ne(),Object.defineProperty(e,"__esModule",{value:!0}),e.$EOF=0,e.$BSPACE=8,e.$TAB=9,e.$LF=10,e.$VTAB=11,e.$FF=12,e.$CR=13,e.$SPACE=32,e.$BANG=33,e.$DQ=34,e.$HASH=35,e.$$=36,e.$PERCENT=37,e.$AMPERSAND=38,e.$SQ=39,e.$LPAREN=40,e.$RPAREN=41,e.$STAR=42,e.$PLUS=43,e.$COMMA=44,e.$MINUS=45,e.$PERIOD=46,e.$SLASH=47,e.$COLON=58,e.$SEMICOLON=59,e.$LT=60,e.$EQ=61,e.$GT=62,e.$QUESTION=63,e.$0=48,e.$7=55,e.$9=57,e.$A=65,e.$E=69,e.$F=70,e.$X=88,e.$Z=90,e.$LBRACKET=91,e.$BACKSLASH=92,e.$RBRACKET=93,e.$CARET=94,e.$_=95,e.$a=97,e.$b=98,e.$e=101,e.$f=102,e.$n=110,e.$r=114,e.$t=116,e.$u=117,e.$v=118,e.$x=120,e.$z=122,e.$LBRACE=123,e.$BAR=124,e.$RBRACE=125,e.$NBSP=160,e.$PIPE=124,e.$TILDA=126,e.$AT=64,e.$BT=96,e.isWhitespace=function r(i){return i>=e.$TAB&&i<=e.$SPACE||i==e.$NBSP},e.isDigit=t,e.isAsciiLetter=function s(i){return i>=e.$a&&i<=e.$z||i>=e.$A&&i<=e.$Z},e.isAsciiHexDigit=function a(i){return i>=e.$a&&i<=e.$f||i>=e.$A&&i<=e.$F||t(i)},e.isNewLine=function n(i){return i===e.$LF||i===e.$CR},e.isOctalDigit=function u(i){return e.$0<=i&&i<=e.$7}}}),Cg=te({"node_modules/angular-html-parser/lib/compiler/src/aot/static_symbol.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=class{constructor(s,a,n){this.filePath=s,this.name=a,this.members=n}assertNoMembers(){if(this.members.length)throw new Error(`Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`)}};e.StaticSymbol=r;e.StaticSymbolCache=class{constructor(){this.cache=new Map}get(s,a,n){let i=`"${s}".${a}${(n=n||[]).length?`.${n.join(".")}`:""}`,l=this.cache.get(i);return l||(l=new r(s,a,n),this.cache.set(i,l)),l}}}}),Eg=te({"node_modules/angular-html-parser/lib/compiler/src/util.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=/-+([a-z0-9])/g;function n(o,d,v){let S=o.indexOf(d);return-1==S?v:[o.slice(0,S).trim(),o.slice(S+1).trim()]}function u(o,d,v){return Array.isArray(o)?d.visitArray(o,v):function E(o){return"object"==typeof o&&null!==o&&Object.getPrototypeOf(o)===w}(o)?d.visitStringMap(o,v):null==o||"string"==typeof o||"number"==typeof o||"boolean"==typeof o?d.visitPrimitive(o,v):d.visitOther(o,v)}e.dashCaseToCamelCase=function t(o){return o.replace(r,(function(){for(var d=arguments.length,v=new Array(d),S=0;S<d;S++)v[S]=arguments[S];return v[1].toUpperCase()}))},e.splitAtColon=function s(o,d){return n(o,":",d)},e.splitAtPeriod=function a(o,d){return n(o,".",d)},e.visitValue=u,e.isDefined=function i(o){return null!=o},e.noUndefined=function l(o){return void 0===o?null:o};e.ValueTransformer=class{visitArray(o,d){return o.map((v=>u(v,this,d)))}visitStringMap(o,d){let v={};return Object.keys(o).forEach((S=>{v[S]=u(o[S],this,d)})),v}visitPrimitive(o,d){return o}visitOther(o,d){return o}},e.SyncAsync={assertSync:o=>{if(P(o))throw new Error("Illegal state: value cannot be a promise");return o},then:(o,d)=>P(o)?o.then(d):d(o),all:o=>o.some(P)?Promise.all(o):o},e.error=function y(o){throw new Error(`Internal Error: ${o}`)},e.syntaxError=function h(o,d){let v=Error(o);return v[g]=!0,d&&(v[c]=d),v};var g="ngSyntaxError",c="ngParseErrors";e.isSyntaxError=function f(o){return o[g]},e.getParseErrors=function F(o){return o[c]||[]},e.escapeRegExp=function _(o){return o.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};var w=Object.getPrototypeOf({});function P(o){return!!o&&"function"==typeof o.then}e.utf8Encode=function N(o){let d="";for(let v=0;v<o.length;v++){let S=o.charCodeAt(v);if(S>=55296&&S<=56319&&o.length>v+1){let b=o.charCodeAt(v+1);b>=56320&&b<=57343&&(v++,S=(S-55296<<10)+b-56320+65536)}S<=127?d+=String.fromCharCode(S):S<=2047?d+=String.fromCharCode(S>>6&31|192,63&S|128):S<=65535?d+=String.fromCharCode(S>>12|224,S>>6&63|128,63&S|128):S<=2097151&&(d+=String.fromCharCode(S>>18&7|240,S>>12&63|128,S>>6&63|128,63&S|128))}return d},e.stringify=function x(o){if("string"==typeof o)return o;if(o instanceof Array)return"["+o.map(x).join(", ")+"]";if(null==o)return""+o;if(o.overriddenName)return`${o.overriddenName}`;if(o.name)return`${o.name}`;if(!o.toString)return"object";let d=o.toString();if(null==d)return""+d;let v=d.indexOf("\n");return-1===v?d:d.substring(0,v)},e.resolveForwardRef=function I(o){return"function"==typeof o&&o.hasOwnProperty("__forward_ref__")?o():o},e.isPromise=P;e.Version=class{constructor(o){this.full=o;let d=o.split(".");this.major=d[0],this.minor=d[1],this.patch=d.slice(2).join(".")}};var D=typeof window<"u"&&window,T=typeof self<"u"&&typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&self,C=typeof globalThis<"u"&&globalThis||D||T;e.global=C}}),Fg=te({"node_modules/angular-html-parser/lib/compiler/src/compile_metadata.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=Cg(),t=Eg(),s=/^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))|(\@[-\w]+)$/;function a(v){return v.replace(/\W/g,"_")}e.sanitizeIdentifier=a;var g,v,n=0;function u(v){if(!v||!v.reference)return null;let S=v.reference;if(S instanceof r.StaticSymbol)return S.name;if(S.__anonymousType)return S.__anonymousType;let b=t.stringify(S);return b.indexOf("(")>=0?(b="anonymous_"+n++,S.__anonymousType=b):b=a(b),b}e.identifierName=u,e.identifierModuleUrl=function i(v){let S=v.reference;return S instanceof r.StaticSymbol?S.filePath:`./${t.stringify(S)}`},e.viewClassName=function l(v,S){return`View_${u({reference:v})}_${S}`},e.rendererTypeName=function p(v){return`RenderType_${u({reference:v})}`},e.hostViewClassName=function y(v){return`HostView_${u({reference:v})}`},e.componentFactoryName=function h(v){return`${u({reference:v})}NgFactory`},(v=g=e.CompileSummaryKind||(e.CompileSummaryKind={}))[v.Pipe=0]="Pipe",v[v.Directive=1]="Directive",v[v.NgModule=2]="NgModule",v[v.Injectable=3]="Injectable",e.tokenName=function c(v){return null!=v.value?a(v.value):u(v.identifier)},e.tokenReference=function f(v){return null!=v.identifier?v.identifier.reference:v.value};e.CompileStylesheetMetadata=class{constructor(){let{moduleUrl:v,styles:S,styleUrls:b}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.moduleUrl=v||null,this.styles=P(S),this.styleUrls=P(b)}};e.CompileTemplateMetadata=class{constructor(v){let{encapsulation:S,template:b,templateUrl:B,htmlAst:k,styles:M,styleUrls:R,externalStylesheets:q,animations:J,ngContentSelectors:L,interpolation:Q,isInline:V,preserveWhitespaces:j}=v;if(this.encapsulation=S,this.template=b,this.templateUrl=B,this.htmlAst=k,this.styles=P(M),this.styleUrls=P(R),this.externalStylesheets=P(q),this.animations=J?D(J):[],this.ngContentSelectors=L||[],Q&&2!=Q.length)throw new Error("'interpolation' should have a start and an end symbol.");this.interpolation=Q,this.isInline=V,this.preserveWhitespaces=j}toSummary(){return{ngContentSelectors:this.ngContentSelectors,encapsulation:this.encapsulation,styles:this.styles,animations:this.animations}}};var w=class{static create(v){let{isHost:S,type:b,isComponent:B,selector:k,exportAs:M,changeDetection:R,inputs:q,outputs:J,host:L,providers:Q,viewProviders:V,queries:j,guards:Y,viewQueries:ie,entryComponents:ee,template:ce,componentViewType:W,rendererType:K,componentFactory:de}=v,ue={},Fe={},z={};null!=L&&Object.keys(L).forEach((se=>{let fe=L[se],ge=se.match(s);null===ge?z[se]=fe:null!=ge[1]?Fe[ge[1]]=fe:null!=ge[2]&&(ue[ge[2]]=fe)}));let U={};q?.forEach((se=>{let fe=t.splitAtColon(se,[se,se]);U[fe[0]]=fe[1]}));let Z={};return J?.forEach((se=>{let fe=t.splitAtColon(se,[se,se]);Z[fe[0]]=fe[1]})),new w({isHost:S,type:b,isComponent:!!B,selector:k,exportAs:M,changeDetection:R,inputs:U,outputs:Z,hostListeners:ue,hostProperties:Fe,hostAttributes:z,providers:Q,viewProviders:V,queries:j,guards:Y,viewQueries:ie,entryComponents:ee,template:ce,componentViewType:W,rendererType:K,componentFactory:de})}constructor(v){let{isHost:S,type:b,isComponent:B,selector:k,exportAs:M,changeDetection:R,inputs:q,outputs:J,hostListeners:L,hostProperties:Q,hostAttributes:V,providers:j,viewProviders:Y,queries:ie,guards:ee,viewQueries:ce,entryComponents:W,template:K,componentViewType:de,rendererType:ue,componentFactory:Fe}=v;this.isHost=!!S,this.type=b,this.isComponent=B,this.selector=k,this.exportAs=M,this.changeDetection=R,this.inputs=q,this.outputs=J,this.hostListeners=L,this.hostProperties=Q,this.hostAttributes=V,this.providers=P(j),this.viewProviders=P(Y),this.queries=P(ie),this.guards=ee,this.viewQueries=P(ce),this.entryComponents=P(W),this.template=K,this.componentViewType=de,this.rendererType=ue,this.componentFactory=Fe}toSummary(){return{summaryKind:g.Directive,type:this.type,isComponent:this.isComponent,selector:this.selector,exportAs:this.exportAs,inputs:this.inputs,outputs:this.outputs,hostListeners:this.hostListeners,hostProperties:this.hostProperties,hostAttributes:this.hostAttributes,providers:this.providers,viewProviders:this.viewProviders,queries:this.queries,guards:this.guards,viewQueries:this.viewQueries,entryComponents:this.entryComponents,changeDetection:this.changeDetection,template:this.template&&this.template.toSummary(),componentViewType:this.componentViewType,rendererType:this.rendererType,componentFactory:this.componentFactory}}};e.CompileDirectiveMetadata=w;e.CompilePipeMetadata=class{constructor(v){let{type:S,name:b,pure:B}=v;this.type=S,this.name=b,this.pure=!!B}toSummary(){return{summaryKind:g.Pipe,type:this.type,name:this.name,pure:this.pure}}};e.CompileShallowModuleMetadata=class{};e.CompileNgModuleMetadata=class{constructor(v){let{type:S,providers:b,declaredDirectives:B,exportedDirectives:k,declaredPipes:M,exportedPipes:R,entryComponents:q,bootstrapComponents:J,importedModules:L,exportedModules:Q,schemas:V,transitiveModule:j,id:Y}=v;this.type=S||null,this.declaredDirectives=P(B),this.exportedDirectives=P(k),this.declaredPipes=P(M),this.exportedPipes=P(R),this.providers=P(b),this.entryComponents=P(q),this.bootstrapComponents=P(J),this.importedModules=P(L),this.exportedModules=P(Q),this.schemas=P(V),this.id=Y||null,this.transitiveModule=j||null}toSummary(){let v=this.transitiveModule;return{summaryKind:g.NgModule,type:this.type,entryComponents:v.entryComponents,providers:v.providers,modules:v.modules,exportedDirectives:v.exportedDirectives,exportedPipes:v.exportedPipes}}};function P(v){return v||[]}e.TransitiveCompileNgModuleMetadata=class{constructor(){this.directivesSet=new Set,this.directives=[],this.exportedDirectivesSet=new Set,this.exportedDirectives=[],this.pipesSet=new Set,this.pipes=[],this.exportedPipesSet=new Set,this.exportedPipes=[],this.modulesSet=new Set,this.modules=[],this.entryComponentsSet=new Set,this.entryComponents=[],this.providers=[]}addProvider(v,S){this.providers.push({provider:v,module:S})}addDirective(v){this.directivesSet.has(v.reference)||(this.directivesSet.add(v.reference),this.directives.push(v))}addExportedDirective(v){this.exportedDirectivesSet.has(v.reference)||(this.exportedDirectivesSet.add(v.reference),this.exportedDirectives.push(v))}addPipe(v){this.pipesSet.has(v.reference)||(this.pipesSet.add(v.reference),this.pipes.push(v))}addExportedPipe(v){this.exportedPipesSet.has(v.reference)||(this.exportedPipesSet.add(v.reference),this.exportedPipes.push(v))}addModule(v){this.modulesSet.has(v.reference)||(this.modulesSet.add(v.reference),this.modules.push(v))}addEntryComponent(v){this.entryComponentsSet.has(v.componentType)||(this.entryComponentsSet.add(v.componentType),this.entryComponents.push(v))}};function D(v){return v.reduce(((S,b)=>{let B=Array.isArray(b)?D(b):b;return S.concat(B)}),[])}function T(v){return v.replace(/(\w+:\/\/[\w:-]+)?(\/+)?/,"ng:///")}e.ProviderMeta=class{constructor(v,S){let{useClass:b,useValue:B,useExisting:k,useFactory:M,deps:R,multi:q}=S;this.token=v,this.useClass=b||null,this.useValue=B,this.useExisting=k,this.useFactory=M||null,this.dependencies=R||null,this.multi=!!q}},e.flatten=D,e.templateSourceUrl=function m(v,S,b){let B;return B=b.isInline?S.type.reference instanceof r.StaticSymbol?`${S.type.reference.filePath}.${S.type.reference.name}.html`:`${u(v)}/${u(S.type)}.html`:b.templateUrl,S.type.reference instanceof r.StaticSymbol?B:T(B)},e.sharedStylesheetJitUrl=function C(v,S){let b=v.moduleUrl.split(/\/\\/g);return T(`css/${S}${b[b.length-1]}.ngstyle.js`)},e.ngModuleJitUrl=function o(v){return T(`${u(v.type)}/module.ngfactory.js`)},e.templateJitUrl=function d(v,S){return T(`${u(v)}/${u(S.type)}.ngfactory.js`)}}}),Ag=te({"node_modules/angular-html-parser/lib/compiler/src/parse_util.js"(e){ne(),Object.defineProperty(e,"__esModule",{value:!0});var r=vg(),t=Fg(),s=class{constructor(y,h,g,c){this.file=y,this.offset=h,this.line=g,this.col=c}toString(){return null!=this.offset?`${this.file.url}@${this.line}:${this.col}`:this.file.url}moveBy(y){let h=this.file.content,g=h.length,c=this.offset,f=this.line,F=this.col;for(;c>0&&y<0;)if(c--,y++,h.charCodeAt(c)==r.$LF){f--;let w=h.substr(0,c-1).lastIndexOf(String.fromCharCode(r.$LF));F=w>0?c-w:c}else F--;for(;c<g&&y>0;){let _=h.charCodeAt(c);c++,y--,_==r.$LF?(f++,F=0):F++}return new s(this.file,c,f,F)}getContext(y,h){let g=this.file.content,c=this.offset;if(null!=c){c>g.length-1&&(c=g.length-1);let f=c,F=0,_=0;for(;F<y&&c>0&&(c--,F++,"\n"!=g[c]||++_!=h););for(F=0,_=0;F<y&&f<g.length-1&&(f++,F++,"\n"!=g[f]||++_!=h););return{before:g.substring(c,this.offset),after:g.substring(this.offset,f+1)}}return null}};e.ParseLocation=s;var a=class{constructor(y,h){this.content=y,this.url=h}};e.ParseSourceFile=a;var u,y,n=class{constructor(y,h){let g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.start=y,this.end=h,this.details=g}toString(){return this.start.file.content.substring(this.start.offset,this.end.offset)}};e.ParseSourceSpan=n,e.EMPTY_PARSE_LOCATION=new s(new a("",""),0,0,0),e.EMPTY_SOURCE_SPAN=new n(e.EMPTY_PARSE_LOCATION,e.EMPTY_PARSE_LOCATION),(y=u=e.ParseErrorLevel||(e.ParseErrorLevel={}))[y.WARNING=0]="WARNING",y[y.ERROR=1]="ERROR";e.ParseError=class{constructor(y,h){let g=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.ERROR;this.span=y,this.msg=h,this.level=g}contextualMessage(){let y=this.span.start.getContext(100,3);return y?`${this.msg} ("${y.before}[${u[this.level]} ->]${y.after}")`:this.msg}toString(){let y=this.span.details?`, ${this.span.details}`:"";return`${this.contextualMessage()}: ${this.span.start}${y}`}},e.typeSourceSpan=function l(y,h){let g=t.identifierModuleUrl(h),c=null!=g?`in ${y} ${t.identifierName(h)} in ${g}`:`in ${y} ${t.identifierName(h)}`,f=new a("",c);return new n(new s(f,-1,-1,-1),new s(f,-1,-1,-1))},e.r3JitTypeSourceSpan=function p(y,h,g){let f=new a("",`in ${y} ${h} in ${g}`);return new n(new s(f,-1,-1,-1),new s(f,-1,-1,-1))}}}),Sg=te({"src/language-html/print-preprocess.js"(e,r){ne();var{ParseSourceSpan:t}=Ag(),{htmlTrim:s,getLeadingAndTrailingHtmlWhitespace:a,hasHtmlWhitespace:n,canHaveInterpolation:u,getNodeCssStyleDisplay:i,isDanglingSpaceSensitiveNode:l,isIndentationSensitiveNode:p,isLeadingSpaceSensitiveNode:y,isTrailingSpaceSensitiveNode:h,isWhitespaceSensitiveNode:g,isVueScriptTag:c}=Rt(),f=[function _(o){o.walk((d=>{if("element"===d.type&&d.tagDefinition.ignoreFirstLf&&d.children.length>0&&"text"===d.children[0].type&&"\n"===d.children[0].value[0]){let v=d.children[0];1===v.value.length?d.removeChild(v):v.value=v.value.slice(1)}}))},function w(o){let d=v=>"element"===v.type&&v.prev&&"ieConditionalStartComment"===v.prev.type&&v.prev.sourceSpan.end.offset===v.startSourceSpan.start.offset&&v.firstChild&&"ieConditionalEndComment"===v.firstChild.type&&v.firstChild.sourceSpan.start.offset===v.startSourceSpan.end.offset;o.walk((v=>{if(v.children)for(let S=0;S<v.children.length;S++){let b=v.children[S];if(!d(b))continue;let B=b.prev,k=b.firstChild;v.removeChild(B),S--;let M=new t(B.sourceSpan.start,k.sourceSpan.end),R=new t(M.start,b.sourceSpan.end);b.condition=B.condition,b.sourceSpan=R,b.startSourceSpan=M,b.removeChild(k)}}))},function N(o){return function E(o,d,v){o.walk((S=>{if(S.children)for(let b=0;b<S.children.length;b++){let B=S.children[b];if("text"!==B.type&&!d(B))continue;"text"!==B.type&&(B.type="text",B.value=v(B));let k=B.prev;!k||"text"!==k.type||(k.value+=B.value,k.sourceSpan=new t(k.sourceSpan.start,B.sourceSpan.end),S.removeChild(B),b--)}}))}(o,(d=>"cdata"===d.type),(d=>`<![CDATA[${d.value}]]>`))},function I(o,d){if("html"===d.parser)return;let v=/{{(.+?)}}/s;o.walk((S=>{if(u(S))for(let b of S.children){if("text"!==b.type)continue;let B=b.sourceSpan.start,k=null,M=b.value.split(v);for(let R=0;R<M.length;R++,B=k){let q=M[R];R%2!=0?(k=B.moveBy(q.length+4),S.insertChildBefore(b,{type:"interpolation",sourceSpan:new t(B,k),children:0===q.length?[]:[{type:"text",value:q,sourceSpan:new t(B.moveBy(2),k.moveBy(-2))}]})):(k=B.moveBy(q.length),q.length>0&&S.insertChildBefore(b,{type:"text",value:q,sourceSpan:new t(B,k)}))}S.removeChild(b)}}))},function P(o){o.walk((d=>{if(!d.children)return;if(0===d.children.length||1===d.children.length&&"text"===d.children[0].type&&0===s(d.children[0].value).length)return d.hasDanglingSpaces=d.children.length>0,void(d.children=[]);let v=g(d),S=p(d);if(!v)for(let b=0;b<d.children.length;b++){let B=d.children[b];if("text"!==B.type)continue;let{leadingWhitespace:k,text:M,trailingWhitespace:R}=a(B.value),q=B.prev,J=B.next;M?(B.value=M,B.sourceSpan=new t(B.sourceSpan.start.moveBy(k.length),B.sourceSpan.end.moveBy(-R.length)),k&&(q&&(q.hasTrailingSpaces=!0),B.hasLeadingSpaces=!0),R&&(B.hasTrailingSpaces=!0,J&&(J.hasLeadingSpaces=!0))):(d.removeChild(B),b--,(k||R)&&(q&&(q.hasTrailingSpaces=!0),J&&(J.hasLeadingSpaces=!0)))}d.isWhitespaceSensitive=v,d.isIndentationSensitive=S}))},function T(o,d){o.walk((v=>{v.cssDisplay=i(v,d)}))},function $(o){o.walk((d=>{d.isSelfClosing=!d.children||"element"===d.type&&(d.tagDefinition.isVoid||d.startSourceSpan===d.endSourceSpan)}))},function D(o,d){o.walk((v=>{"element"===v.type&&(v.hasHtmComponentClosingTag=v.endSourceSpan&&/^<\s*\/\s*\/\s*>$/.test(d.originalText.slice(v.endSourceSpan.start.offset,v.endSourceSpan.end.offset)))}))},function m(o,d){o.walk((v=>{let{children:S}=v;if(S){if(0===S.length)return void(v.isDanglingSpaceSensitive=l(v));for(let b of S)b.isLeadingSpaceSensitive=y(b,d),b.isTrailingSpaceSensitive=h(b,d);for(let b=0;b<S.length;b++){let B=S[b];B.isLeadingSpaceSensitive=(0===b||B.prev.isTrailingSpaceSensitive)&&B.isLeadingSpaceSensitive,B.isTrailingSpaceSensitive=(b===S.length-1||B.next.isLeadingSpaceSensitive)&&B.isTrailingSpaceSensitive}}}))},function x(o){let d=v=>"element"===v.type&&0===v.attrs.length&&1===v.children.length&&"text"===v.firstChild.type&&!n(v.children[0].value)&&!v.firstChild.hasLeadingSpaces&&!v.firstChild.hasTrailingSpaces&&v.isLeadingSpaceSensitive&&!v.hasLeadingSpaces&&v.isTrailingSpaceSensitive&&!v.hasTrailingSpaces&&v.prev&&"text"===v.prev.type&&v.next&&"text"===v.next.type;o.walk((v=>{if(v.children)for(let S=0;S<v.children.length;S++){let b=v.children[S];if(!d(b))continue;let B=b.prev,k=b.next;B.value+=`<${b.rawName}>`+b.firstChild.value+`</${b.rawName}>`+k.value,B.sourceSpan=new t(B.sourceSpan.start,k.sourceSpan.end),B.isTrailingSpaceSensitive=k.isTrailingSpaceSensitive,B.hasTrailingSpaces=k.hasTrailingSpaces,v.removeChild(b),S--,v.removeChild(k)}}))},function C(o,d){if("vue"===d.parser){let v=o.children.find((b=>c(b,d)));if(!v)return;let{lang:S}=v.attrMap;("ts"===S||"typescript"===S)&&(d.__should_parse_vue_template_with_ts=!0)}}];r.exports=function F(o,d){for(let v of f)v(o,d);return o}}}),xg=te({"src/language-html/pragma.js"(e,r){ne(),r.exports={hasPragma:function t(a){return/^\s*<!--\s*@(?:format|prettier)\s*-->/.test(a)},insertPragma:function s(a){return"\x3c!-- @format --\x3e\n\n"+a.replace(/^\s*\n/,"")}}}}),au=te({"src/language-html/loc.js"(e,r){ne(),r.exports={locStart:function t(a){return a.sourceSpan.start.offset},locEnd:function s(a){return a.sourceSpan.end.offset}}}}),ur=te({"src/language-html/print/tag.js"(e,r){ne();var t=Zt(),{isNonEmptyArray:s}=Ue(),{builders:{indent:a,join:n,line:u,softline:i,hardline:l},utils:{replaceTextEndOfLine:p}}=qe(),{locStart:y,locEnd:h}=au(),{isTextLikeNode:g,getLastDescendant:c,isPreLikeNode:f,hasPrettierIgnore:F,shouldPreserveContent:_,isVueSfcBlock:w}=Rt();function N(L,Q){return L.lastChild&&o(L.lastChild)?"":[I(L,Q),$(L,Q)]}function x(L,Q){return(L.next?m(L.next):C(L.parent))?"":[D(L,Q),P(L,Q)]}function I(L,Q){return C(L)?D(L.lastChild,Q):""}function P(L,Q){return o(L)?$(L.parent,Q):d(L)?q(L.next):""}function $(L,Q){if(t(!L.isSelfClosing),T(L,Q))return"";switch(L.type){case"ieConditionalComment":return"<!";case"element":if(L.hasHtmComponentClosingTag)return"<//";default:return`</${L.rawName}`}}function D(L,Q){if(T(L,Q))return"";switch(L.type){case"ieConditionalComment":case"ieConditionalEndComment":return"[endif]--\x3e";case"ieConditionalStartComment":return"]>\x3c!--\x3e";case"interpolation":return"}}";case"element":if(L.isSelfClosing)return"/>";default:return">"}}function T(L,Q){return!L.isSelfClosing&&!L.endSourceSpan&&(F(L)||_(L.parent,Q))}function m(L){return L.prev&&"docType"!==L.prev.type&&!g(L.prev)&&L.isLeadingSpaceSensitive&&!L.hasLeadingSpaces}function C(L){return L.lastChild&&L.lastChild.isTrailingSpaceSensitive&&!L.lastChild.hasTrailingSpaces&&!g(c(L.lastChild))&&!f(L)}function o(L){return!L.next&&!L.hasTrailingSpaces&&L.isTrailingSpaceSensitive&&g(c(L))}function d(L){return L.next&&!g(L.next)&&g(L)&&L.isTrailingSpaceSensitive&&!L.hasTrailingSpaces}function S(L){return!L.prev&&L.isLeadingSpaceSensitive&&!L.hasLeadingSpaces}function b(L,Q,V){let j=L.getValue();if(!s(j.attrs))return j.isSelfClosing?" ":"";let Y=j.prev&&"comment"===j.prev.type&&function v(L){let Q=L.trim().match(/^prettier-ignore-attribute(?:\s+(.+))?$/s);return!!Q&&(!Q[1]||Q[1].split(/\s+/))}(j.prev.value),ie="boolean"==typeof Y?()=>Y:Array.isArray(Y)?ue=>Y.includes(ue.rawName):()=>!1,ee=L.map((ue=>{let Fe=ue.getValue();return ie(Fe)?p(Q.originalText.slice(y(Fe),h(Fe))):V()}),"attrs"),ce="element"===j.type&&"script"===j.fullName&&1===j.attrs.length&&"src"===j.attrs[0].fullName&&0===j.children.length,K=Q.singleAttributePerLine&&j.attrs.length>1&&!w(j,Q)?l:u,de=[a([ce?" ":u,n(K,ee)])];return j.firstChild&&S(j.firstChild)||j.isSelfClosing&&C(j.parent)||ce?de.push(j.isSelfClosing?" ":""):de.push(Q.bracketSameLine?j.isSelfClosing?" ":"":j.isSelfClosing?u:i),de}function B(L){return L.firstChild&&S(L.firstChild)?"":J(L)}function M(L,Q){return L.prev&&d(L.prev)?"":[R(L,Q),q(L)]}function R(L,Q){return S(L)?J(L.parent):m(L)?D(L.prev,Q):""}function q(L){switch(L.type){case"ieConditionalComment":case"ieConditionalStartComment":return`\x3c!--[if ${L.condition}`;case"ieConditionalEndComment":return"\x3c!--<!";case"interpolation":return"{{";case"docType":return"<!DOCTYPE";case"element":if(L.condition)return`\x3c!--[if ${L.condition}]>\x3c!--\x3e<${L.rawName}`;default:return`<${L.rawName}`}}function J(L){switch(t(!L.isSelfClosing),L.type){case"ieConditionalComment":return"]>";case"element":if(L.condition)return">\x3c!--<![endif]--\x3e";default:return">"}}r.exports={printClosingTag:function E(L,Q){return[L.isSelfClosing?"":N(L,Q),x(L,Q)]},printClosingTagStart:N,printClosingTagStartMarker:$,printClosingTagEndMarker:D,printClosingTagSuffix:P,printClosingTagEnd:x,needsToBorrowLastChildClosingTagEndMarker:C,needsToBorrowParentClosingTagStartMarker:o,needsToBorrowPrevClosingTagEndMarker:m,printOpeningTag:function k(L,Q,V){let j=L.getValue();return[M(j,Q),b(L,Q,V),j.isSelfClosing?"":B(j)]},printOpeningTagStart:M,printOpeningTagPrefix:R,printOpeningTagStartMarker:q,printOpeningTagEndMarker:J,needsToBorrowNextOpeningTagStartMarker:d,needsToBorrowParentOpeningTagEndMarker:S}}}),bg=te({"node_modules/parse-srcset/src/parse-srcset.js"(e,r){var t,s;ne(),t=e,s=function(){return function(t,s){var a=s&&s.logger||console;function n($){return" "===$||"\t"===$||"\n"===$||"\f"===$||"\r"===$}function u($){var D,T=$.exec(t.substring(N));if(T)return D=T[0],N+=D.length,D}for(var f,F,_,w,E,i=t.length,l=/^[ \t\n\r\u000c]+/,p=/^[, \t\n\r\u000c]+/,y=/^[^ \t\n\r\u000c]+/,h=/[,]+$/,g=/^\d+$/,c=/^-?(?:[0-9]+|[0-9]*\.[0-9]+)(?:[eE][+-]?[0-9]+)?$/,N=0,x=[];;){if(u(p),N>=i)return x;f=u(y),F=[],","===f.slice(-1)?(f=f.replace(h,""),P()):I()}function I(){for(u(l),_="",w="in descriptor";;){if(E=t.charAt(N),"in descriptor"===w)if(n(E))_&&(F.push(_),_="",w="after descriptor");else{if(","===E)return N+=1,_&&F.push(_),void P();if("("===E)_+=E,w="in parens";else{if(""===E)return _&&F.push(_),void P();_+=E}}else if("in parens"===w)if(")"===E)_+=E,w="in descriptor";else{if(""===E)return F.push(_),void P();_+=E}else if("after descriptor"===w&&!n(E)){if(""===E)return void P();w="in descriptor",N-=1}N+=1}}function P(){var D,T,m,C,d,v,S,b,B,$=!1,o={};for(C=0;C<F.length;C++)v=(d=F[C])[d.length-1],S=d.substring(0,d.length-1),b=parseInt(S,10),B=parseFloat(S),g.test(S)&&"w"===v?((D||T)&&($=!0),0===b?$=!0:D=b):c.test(S)&&"x"===v?((D||T||m)&&($=!0),B<0?$=!0:T=B):g.test(S)&&"h"===v?((m||T)&&($=!0),0===b?$=!0:m=b):$=!0;$?a&&a.error&&a.error("Invalid srcset descriptor found in '"+t+"' at '"+d+"'."):(o.url=f,D&&(o.w=D),T&&(o.d=T),m&&(o.h=m),x.push(o))}}},"function"==typeof define&&__webpack_require__.amdO?define([],s):"object"==typeof r&&r.exports?r.exports=s():t.parseSrcset=s()}}),Tg=te({"src/language-html/syntax-attribute.js"(e,r){ne();var t=bg(),{builders:{ifBreak:s,join:a,line:n}}=qe();r.exports={printImgSrcset:function u(l){let p=t(l,{logger:{error(I){throw new Error(I)}}}),y=p.some((I=>{let{w:P}=I;return P})),h=p.some((I=>{let{h:P}=I;return P}));if(y+h+p.some((I=>{let{d:P}=I;return P}))>1)throw new Error("Mixed descriptor in srcset is not supported");let c=y?"w":h?"h":"d",f=y?"w":h?"h":"x",F=I=>Math.max(...I),_=p.map((I=>I.url)),w=F(_.map((I=>I.length))),E=p.map((I=>I[c])).map((I=>I?I.toString():"")),N=E.map((I=>{let P=I.indexOf(".");return-1===P?I.length:P})),x=F(N);return a([",",n],_.map(((I,P)=>{let $=[I],D=E[P];if(D){let T=w-I.length+1,m=x-N[P],C=" ".repeat(T+m);$.push(s(C," "),D+f)}return $})))},printClassNames:function i(l){return l.trim().split(/\s+/).join(" ")}}}}),Bg=te({"src/language-html/syntax-vue.js"(e,r){ne();var{builders:{group:t}}=qe();r.exports={isVueEventBindingExpression:function u(i){let y=i.trim();return/^(?:[\w$]+|\([^)]*\))\s*=>|^function\s*\(/.test(y)||/^[$A-Z_a-z][\w$]*(?:\.[$A-Z_a-z][\w$]*|\['[^']*']|\["[^"]*"]|\[\d+]|\[[$A-Z_a-z][\w$]*])*$/.test(y)},printVueFor:function s(i,l){let{left:p,operator:y,right:h}=function a(i){let l=/(.*?)\s+(in|of)\s+(.*)/s,p=/,([^,\]}]*)(?:,([^,\]}]*))?$/,y=/^\(|\)$/g,h=i.match(l);if(!h)return;let g={};if(g.for=h[3].trim(),!g.for)return;let c=h[1].trim().replace(y,""),f=c.match(p);f?(g.alias=c.replace(p,""),g.iterator1=f[1].trim(),f[2]&&(g.iterator2=f[2].trim())):g.alias=c;let F=[g.alias,g.iterator1,g.iterator2];if(!F.some(((_,w)=>!_&&(0===w||F.slice(w+1).some(Boolean)))))return{left:F.filter(Boolean).join(","),operator:h[2],right:g.for}}(i);return[t(l(`function _(${p}) {}`,{parser:"babel",__isVueForBindingLeft:!0}))," ",y," ",l(h,{parser:"__js_expression"},{stripTrailingHardline:!0})]},printVueBindings:function n(i,l){return l(`function _(${i}) {}`,{parser:"babel",__isVueBindings:!0})}}}}),Lo=te({"src/language-html/get-node-content.js"(e,r){ne();var{needsToBorrowParentClosingTagStartMarker:t,printClosingTagStartMarker:s,needsToBorrowLastChildClosingTagEndMarker:a,printClosingTagEndMarker:n,needsToBorrowParentOpeningTagEndMarker:u,printOpeningTagEndMarker:i}=ur();r.exports=function l(p,y){let h=p.startSourceSpan.end.offset;p.firstChild&&u(p.firstChild)&&(h-=i(p).length);let g=p.endSourceSpan.start.offset;return p.lastChild&&t(p.lastChild)?g+=s(p,y).length:a(p)&&(g-=n(p.lastChild,y).length),y.originalText.slice(h,g)}}}),Ng=te({"src/language-html/embed.js"(e,r){ne();var{builders:{breakParent:t,group:s,hardline:a,indent:n,line:u,fill:i,softline:l},utils:{mapDoc:p,replaceTextEndOfLine:y}}=qe(),h=su(),{printClosingTag:g,printClosingTagSuffix:c,needsToBorrowPrevClosingTagEndMarker:f,printOpeningTagPrefix:F,printOpeningTag:_}=ur(),{printImgSrcset:w,printClassNames:E}=Tg(),{printVueFor:N,printVueBindings:x,isVueEventBindingExpression:I}=Bg(),{isScriptLikeTag:P,isVueNonHtmlBlock:$,inferScriptParser:D,htmlTrimPreserveIndentation:T,dedentString:m,unescapeQuoteEntities:C,isVueSlotAttribute:o,isVueSfcBindingsAttribute:d,getTextValueParts:v}=Rt(),S=Lo();function b(k,M,R){let q=ee=>new RegExp(ee.join("|")).test(k.fullName),J=()=>C(k.value),L=!1,Q=(ee,ce)=>{let W="NGRoot"===ee.type?"NGMicrosyntax"===ee.node.type&&1===ee.node.body.length&&"NGMicrosyntaxExpression"===ee.node.body[0].type?ee.node.body[0].expression:ee.node:"JsExpressionRoot"===ee.type?ee.node:ee;W&&("ObjectExpression"===W.type||"ArrayExpression"===W.type||"__vue_expression"===ce.parser&&("TemplateLiteral"===W.type||"StringLiteral"===W.type))&&(L=!0)},j=function(ee){let ce=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return s([n([l,ee]),ce?l:""])},Y=ee=>L?(ee=>s(ee))(ee):j(ee),ie=(ee,ce)=>M(ee,Object.assign({__onHtmlBindingRoot:Q,__embeddedInHtml:!0},ce));if("srcset"===k.fullName&&("img"===k.parent.fullName||"source"===k.parent.fullName))return j(w(J()));if("class"===k.fullName&&!R.parentParser){let ee=J();if(!ee.includes("{{"))return E(ee)}if("style"===k.fullName&&!R.parentParser){let ee=J();if(!ee.includes("{{"))return j(ie(ee,{parser:"css",__isHTMLStyleAttribute:!0}))}if("vue"===R.parser){if("v-for"===k.fullName)return N(J(),ie);if(o(k)||d(k,R))return x(J(),ie);let ce=["^:","^v-bind:"],W=["^v-"];if(q(["^@","^v-on:"])){let K=J(),de=I(K)?"__js_expression":R.__should_parse_vue_template_with_ts?"__vue_ts_event_binding":"__vue_event_binding";return Y(ie(K,{parser:de}))}if(q(ce))return Y(ie(J(),{parser:"__vue_expression"}));if(q(W))return Y(ie(J(),{parser:"__js_expression"}))}if("angular"===R.parser){let ee=(z,U)=>ie(z,Object.assign(Object.assign({},U),{},{trailingComma:"none"})),ce=["^\\*"],K=["^\\[.+\\]$","^bind(on)?-","^ng-(if|show|hide|class|style)$"],de=["^i18n(-.+)?$"];if(q(["^\\(.+\\)$","^on-"]))return Y(ee(J(),{parser:"__ng_action"}));if(q(K))return Y(ee(J(),{parser:"__ng_binding"}));if(q(de)){let z=J().trim();return j(i(v(k,z)),!z.includes("@@"))}if(q(ce))return Y(ee(J(),{parser:"__ng_directive"}));let ue=/{{(.+?)}}/s,Fe=J();if(ue.test(Fe)){let z=[];for(let[U,Z]of Fe.split(ue).entries())if(U%2==0)z.push(y(Z));else try{z.push(s(["{{",n([u,ee(Z,{parser:"__ng_interpolation",__isInHtmlInterpolation:!0})]),u,"}}"]))}catch{z.push("{{",y(Z),"}}")}return s(z)}}return null}r.exports=function B(k,M,R,q){let J=k.getValue();switch(J.type){case"element":if(P(J)||"interpolation"===J.type)return;if(!J.isSelfClosing&&$(J,q)){let L=D(J,q);if(!L)return;let Q=S(J,q),V=/^\s*$/.test(Q),j="";return V||(j=R(T(Q),{parser:L,__embeddedInHtml:!0},{stripTrailingHardline:!0}),V=""===j),[F(J,q),s(_(k,q,M)),V?"":a,j,V?"":a,g(J,q),c(J,q)]}break;case"text":if(P(J.parent)){let L=D(J.parent,q);if(L){let Q="markdown"===L?m(J.value.replace(/^[^\S\n]*\n/,"")):J.value,V={parser:L,__embeddedInHtml:!0};if("html"===q.parser&&"babel"===L){let j="script",{attrMap:Y}=J.parent;Y&&("module"===Y.type||"text/babel"===Y.type&&"module"===Y["data-type"])&&(j="module"),V.__babelSourceType=j}return[t,F(J,q),R(Q,V,{stripTrailingHardline:!0}),c(J,q)]}}else if("interpolation"===J.parent.type){let L={__isInHtmlInterpolation:!0,__embeddedInHtml:!0};return"angular"===q.parser?(L.parser="__ng_interpolation",L.trailingComma="none"):"vue"===q.parser?L.parser=q.__should_parse_vue_template_with_ts?"__vue_ts_expression":"__vue_expression":L.parser="__js_expression",[n([u,R(J.value,L,{stripTrailingHardline:!0})]),J.parent.next&&f(J.parent.next)?" ":u]}break;case"attribute":{if(!J.value)break;if(/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(q.originalText.slice(J.valueSpan.start.offset,J.valueSpan.end.offset)))return[J.rawName,"=",J.value];if("lwc"===q.parser&&/^{.*}$/s.test(q.originalText.slice(J.valueSpan.start.offset,J.valueSpan.end.offset)))return[J.rawName,"=",J.value];let L=b(J,((Q,V)=>R(Q,Object.assign({__isInHtmlAttribute:!0,__embeddedInHtml:!0},V),{stripTrailingHardline:!0})),q);if(L)return[J.rawName,'="',s(p(L,(Q=>"string"==typeof Q?Q.replace(/"/g,"&quot;"):Q))),'"'];break}case"front-matter":return h(J,R)}}}}),Oo=te({"src/language-html/print/children.js"(e,r){ne();var{builders:{breakParent:t,group:s,ifBreak:a,line:n,softline:u,hardline:i},utils:{replaceTextEndOfLine:l}}=qe(),{locStart:p,locEnd:y}=au(),{forceBreakChildren:h,forceNextEmptyLine:g,isTextLikeNode:c,hasPrettierIgnore:f,preferHardlineAsLeadingSpaces:F}=Rt(),{printOpeningTagPrefix:_,needsToBorrowNextOpeningTagStartMarker:w,printOpeningTagStartMarker:E,needsToBorrowPrevClosingTagEndMarker:N,printClosingTagEndMarker:x,printClosingTagSuffix:I,needsToBorrowParentClosingTagStartMarker:P}=ur();function $(m,C,o){let d=m.getValue();return f(d)?[_(d,C),...l(C.originalText.slice(p(d)+(d.prev&&w(d.prev)?E(d).length:0),y(d)-(d.next&&N(d.next)?x(d,C).length:0))),I(d,C)]:o()}function D(m,C){return c(m)&&c(C)?m.isTrailingSpaceSensitive?m.hasTrailingSpaces?F(C)?i:n:"":F(C)?i:u:w(m)&&(f(C)||C.firstChild||C.isSelfClosing||"element"===C.type&&C.attrs.length>0)||"element"===m.type&&m.isSelfClosing&&N(C)?"":!C.isLeadingSpaceSensitive||F(C)||N(C)&&m.lastChild&&P(m.lastChild)&&m.lastChild.lastChild&&P(m.lastChild.lastChild)?i:C.hasLeadingSpaces?n:u}r.exports={printChildren:function T(m,C,o){let d=m.getValue();if(h(d))return[t,...m.map((S=>{let b=S.getValue(),B=b.prev?D(b.prev,b):"";return[B?[B,g(b.prev)?i:""]:"",$(S,C,o)]}),"children")];let v=d.children.map((()=>Symbol("")));return m.map(((S,b)=>{let B=S.getValue();if(c(B)){if(B.prev&&c(B.prev)){let Q=D(B.prev,B);if(Q)return g(B.prev)?[i,i,$(S,C,o)]:[Q,$(S,C,o)]}return $(S,C,o)}let k=[],M=[],R=[],q=[],J=B.prev?D(B.prev,B):"",L=B.next?D(B,B.next):"";return J&&(g(B.prev)?k.push(i,i):J===i?k.push(i):c(B.prev)?M.push(J):M.push(a("",u,{groupId:v[b-1]}))),L&&(g(B)?c(B.next)&&q.push(i,i):L===i?c(B.next)&&q.push(i):R.push(L)),[...k,s([...M,s([$(S,C,o),...R],{id:v[b]})]),...q]}),"children")}}}}),wg=te({"src/language-html/print/element.js"(e,r){ne();var{builders:{breakParent:t,dedentToRoot:s,group:a,ifBreak:n,indentIfBreak:u,indent:i,line:l,softline:p},utils:{replaceTextEndOfLine:y}}=qe(),h=Lo(),{shouldPreserveContent:g,isScriptLikeTag:c,isVueCustomBlock:f,countParents:F,forceBreakContent:_}=Rt(),{printOpeningTagPrefix:w,printOpeningTag:E,printClosingTagSuffix:N,printClosingTag:x,needsToBorrowPrevClosingTagEndMarker:I,needsToBorrowLastChildClosingTagEndMarker:P}=ur(),{printChildren:$}=Oo();r.exports={printElement:function D(T,m,C){let o=T.getValue();if(g(o,m))return[w(o,m),a(E(T,m,C)),...y(h(o,m)),...x(o,m),N(o,m)];let d=1===o.children.length&&"interpolation"===o.firstChild.type&&o.firstChild.isLeadingSpaceSensitive&&!o.firstChild.hasLeadingSpaces&&o.lastChild.isTrailingSpaceSensitive&&!o.lastChild.hasTrailingSpaces,v=Symbol("element-attr-group-id"),S=M=>a([a(E(T,m,C),{id:v}),M,x(o,m)]);return 0===o.children.length?S(o.hasDanglingSpaces&&o.isDanglingSpaceSensitive?l:""):S([_(o)?t:"",(M=[d?n(p,"",{groupId:v}):o.firstChild.hasLeadingSpaces&&o.firstChild.isLeadingSpaceSensitive?l:"text"===o.firstChild.type&&o.isWhitespaceSensitive&&o.isIndentationSensitive?s(p):p,$(T,m,C)],d?u(M,{groupId:v}):!c(o)&&!f(o,m)||"root"!==o.parent.type||"vue"!==m.parser||m.vueIndentScriptAndStyle?i(M):M),(o.next?I(o.next):P(o.parent))?o.lastChild.hasTrailingSpaces&&o.lastChild.isTrailingSpaceSensitive?" ":"":d?n(p,"",{groupId:v}):o.lastChild.hasTrailingSpaces&&o.lastChild.isTrailingSpaceSensitive?l:("comment"===o.lastChild.type||"text"===o.lastChild.type&&o.isWhitespaceSensitive&&o.isIndentationSensitive)&&new RegExp(`\\n[\\t ]{${m.tabWidth*F(T,(R=>R.parent&&"root"!==R.parent.type))}}$`).test(o.lastChild.value)?"":p]);var M}}}}),_g=te({"src/language-html/printer-html.js"(e,r){ne();var{builders:{fill:t,group:s,hardline:a,literalline:n},utils:{cleanDoc:u,getDocParts:i,isConcat:l,replaceTextEndOfLine:p}}=qe(),y=gg(),{countChars:h,unescapeQuoteEntities:g,getTextValueParts:c}=Rt(),f=Sg(),{insertPragma:F}=xg(),{locStart:_,locEnd:w}=au(),E=Ng(),{printClosingTagSuffix:N,printClosingTagEnd:x,printOpeningTagPrefix:I,printOpeningTagStart:P}=ur(),{printElement:$}=wg(),{printChildren:D}=Oo();r.exports={preprocess:f,print:function T(m,C,o){let d=m.getValue();switch(d.type){case"front-matter":return p(d.raw);case"root":return C.__onHtmlRoot&&C.__onHtmlRoot(d),[s(D(m,C,o)),a];case"element":case"ieConditionalComment":return $(m,C,o);case"ieConditionalStartComment":case"ieConditionalEndComment":return[P(d),x(d)];case"interpolation":return[P(d,C),...m.map(o,"children"),x(d,C)];case"text":{if("interpolation"===d.parent.type){let S=/\n[^\S\n]*$/,b=S.test(d.value),B=b?d.value.replace(S,""):d.value;return[...p(B),b?a:""]}let v=u([I(d,C),...c(d),N(d,C)]);return l(v)||"fill"===v.type?t(i(v)):v}case"docType":return[s([P(d,C)," ",d.value.replace(/^html\b/i,"html").replace(/\s+/g," ")]),x(d,C)];case"comment":return[I(d,C),...p(C.originalText.slice(_(d),w(d)),n),N(d,C)];case"attribute":{if(null===d.value)return d.rawName;let v=g(d.value),B=h(v,"'")<h(v,'"')?"'":'"';return[d.rawName,"=",B,...p('"'===B?v.replace(/"/g,"&quot;"):v.replace(/'/g,"&apos;")),B]}default:throw new Error(`Unexpected node type ${d.type}`)}},insertPragma:F,massageAstNode:y,embed:E}}}),Pg=te({"src/language-html/options.js"(e,r){ne();var t=Mt(),s="HTML";r.exports={bracketSameLine:t.bracketSameLine,htmlWhitespaceSensitivity:{since:"1.15.0",category:s,type:"choice",default:"css",description:"How to handle whitespaces in HTML.",choices:[{value:"css",description:"Respect the default value of CSS display property."},{value:"strict",description:"Whitespaces are considered sensitive."},{value:"ignore",description:"Whitespaces are considered insensitive."}]},singleAttributePerLine:t.singleAttributePerLine,vueIndentScriptAndStyle:{since:"1.19.0",category:s,type:"boolean",default:!1,description:"Indent script and style tags in Vue files."}}}}),Ig=te({"src/language-html/parsers.js"(){ne()}}),On=te({"node_modules/linguist-languages/data/HTML.json"(e,r){r.exports={name:"HTML",type:"markup",tmScope:"text.html.basic",aceMode:"html",codemirrorMode:"htmlmixed",codemirrorMimeType:"text/html",color:"#e34c26",aliases:["xhtml"],extensions:[".html",".hta",".htm",".html.hl",".inc",".xht",".xhtml"],languageId:146}}}),kg=te({"node_modules/linguist-languages/data/Vue.json"(e,r){r.exports={name:"Vue",type:"markup",color:"#41b883",extensions:[".vue"],tmScope:"text.html.vue",aceMode:"html",languageId:391}}}),Lg=te({"src/language-html/index.js"(e,r){ne();var t=_t(),s=_g(),a=Pg(),n=Ig(),u=[t(On(),(()=>({name:"Angular",since:"1.15.0",parsers:["angular"],vscodeLanguageIds:["html"],extensions:[".component.html"],filenames:[]}))),t(On(),(l=>({since:"1.15.0",parsers:["html"],vscodeLanguageIds:["html"],extensions:[...l.extensions,".mjml"]}))),t(On(),(()=>({name:"Lightning Web Components",since:"1.17.0",parsers:["lwc"],vscodeLanguageIds:["html"],extensions:[],filenames:[]}))),t(kg(),(()=>({since:"1.10.0",parsers:["vue"],vscodeLanguageIds:["vue"]})))],i={html:s};r.exports={languages:u,printers:i,options:a,parsers:n}}}),Og=te({"src/language-yaml/pragma.js"(e,r){ne(),r.exports={isPragma:function t(n){return/^\s*@(?:prettier|format)\s*$/.test(n)},hasPragma:function s(n){return/^\s*#[^\S\n]*@(?:prettier|format)\s*?(?:\n|$)/.test(n)},insertPragma:function a(n){return`# @format\n\n${n}`}}}}),jg=te({"src/language-yaml/loc.js"(e,r){ne(),r.exports={locStart:function t(a){return a.position.start.offset},locEnd:function s(a){return a.position.end.offset}}}}),qg=te({"src/language-yaml/embed.js"(e,r){ne(),r.exports=function t(s,a,n,u){if("root"===s.getValue().type&&u.filepath&&/(?:[/\\]|^)\.(?:prettier|stylelint|lintstaged)rc$/.test(u.filepath))return n(u.originalText,Object.assign(Object.assign({},u),{},{parser:"json"}))}}}),$t=te({"src/language-yaml/utils.js"(e,r){ne();var{getLast:t,isNonEmptyArray:s}=Ue();function n(D,T){return D&&"string"==typeof D.type&&(!T||T.includes(D.type))}function h(D){return"prettier-ignore"===D.value.trim()}function F(D){return s(D?.leadingComments)}function _(D){return s(D?.middleComments)}function w(D){return D?.indicatorComment}function E(D){return D?.trailingComment}function N(D){return s(D?.endComments)}function x(D){let m,T=[];for(let C of D.split(/( +)/))" "!==C?" "===m?T.push(C):T.push((T.pop()||"")+C):void 0===m&&T.unshift(""),m=C;return" "===m&&T.push((T.pop()||"")+" "),""===T[0]&&(T.shift(),T.unshift(" "+(T.shift()||""))),T}r.exports={getLast:t,getAncestorCount:function a(D,T){let m=0,C=D.stack.length-1;for(let o=0;o<C;o++){let d=D.stack[o];n(d)&&T(d)&&m++}return m},isNode:n,isEmptyNode:function c(D){return!s(D.children)&&!function f(D){return F(D)||_(D)||w(D)||E(D)||N(D)}(D)},isInlineNode:function $(D){if(!D)return!0;switch(D.type){case"plain":case"quoteDouble":case"quoteSingle":case"alias":case"flowMapping":case"flowSequence":return!0;default:return!1}},mapNode:function u(D,T,m){return T("children"in D?Object.assign(Object.assign({},D),{},{children:D.children.map((C=>u(C,T,D)))}):D,m)},defineShortcut:function i(D,T,m){Object.defineProperty(D,T,{get:m,enumerable:!1})},isNextLineEmpty:function l(D,T){let m=0,C=T.length;for(let o=D.position.end.offset-1;o<C;o++){let d=T[o];if("\n"===d&&m++,1===m&&/\S/.test(d))return!1;if(2===m)return!0}return!1},isLastDescendantNode:function p(D){switch(D.getValue().type){case"tag":case"anchor":case"comment":return!1}let m=D.stack.length;for(let C=1;C<m;C++){let o=D.stack[C],d=D.stack[C-1];if(Array.isArray(d)&&"number"==typeof o&&o!==d.length-1)return!1}return!0},getBlockValueLineContents:function P(D,T){let v,{parentIndent:m,isLastDescendant:C,options:o}=T,d=D.position.start.line===D.position.end.line?"":o.originalText.slice(D.position.start.offset,D.position.end.offset).match(/^[^\n]*\n(.*)$/s)[1];if(null===D.indent){let B=d.match(/^(?<leadingSpace> *)[^\n\r ]/m);v=B?B.groups.leadingSpace.length:Number.POSITIVE_INFINITY}else v=D.indent-1+m;let S=d.split("\n").map((B=>B.slice(v)));return"preserve"===o.proseWrap||"blockLiteral"===D.type?b(S.map((B=>0===B.length?[]:[B]))):b(S.map((B=>0===B.length?[]:x(B))).reduce(((B,k,M)=>0!==M&&S[M-1].length>0&&k.length>0&&!/^\s/.test(k[0])&&!/^\s|\s$/.test(t(B))?[...B.slice(0,-1),[...t(B),...k]]:[...B,k]),[]).map((B=>B.reduce(((k,M)=>k.length>0&&/\s$/.test(t(k))?[...k.slice(0,-1),t(k)+" "+M]:[...k,M]),[]))).map((B=>"never"===o.proseWrap?[B.join(" ")]:B)));function b(B){if("keep"===D.chomping)return 0===t(B).length?B.slice(0,-1):B;let k=0;for(let M=B.length-1;M>=0&&0===B[M].length;M--)k++;return 0===k?B:k>=2&&!C?B.slice(0,-(k-1)):B.slice(0,-k)}},getFlowScalarLineContents:function I(D,T,m){let C=T.split("\n").map(((o,d,v)=>0===d&&d===v.length-1?o:0!==d&&d!==v.length-1?o.trim():0===d?o.trimEnd():o.trimStart()));return"preserve"===m.proseWrap?C.map((o=>0===o.length?[]:[o])):C.map((o=>0===o.length?[]:x(o))).reduce(((o,d,v)=>0!==v&&C[v-1].length>0&&d.length>0&&("quoteDouble"!==D||!t(t(o)).endsWith("\\"))?[...o.slice(0,-1),[...t(o),...d]]:[...o,d]),[]).map((o=>"never"===m.proseWrap?[o.join(" ")]:o))},getLastDescendantNode:function y(D){return s(D.children)?y(t(D.children)):D},hasPrettierIgnore:function g(D){let T=D.getValue();if("documentBody"===T.type){let m=D.getParentNode();return N(m.head)&&h(t(m.head.endComments))}return F(T)&&h(t(T.leadingComments))},hasLeadingComments:F,hasMiddleComments:_,hasIndicatorComment:w,hasTrailingComment:E,hasEndComments:N}}}),Mg=te({"src/language-yaml/print-preprocess.js"(e,r){ne();var{defineShortcut:t,mapNode:s}=$t();function n(u){switch(u.type){case"document":t(u,"head",(()=>u.children[0])),t(u,"body",(()=>u.children[1]));break;case"documentBody":case"sequenceItem":case"flowSequenceItem":case"mappingKey":case"mappingValue":t(u,"content",(()=>u.children[0]));break;case"mappingItem":case"flowMappingItem":t(u,"key",(()=>u.children[0])),t(u,"value",(()=>u.children[1]))}return u}r.exports=function a(u){return s(u,n)}}}),Mr=te({"src/language-yaml/print/misc.js"(e,r){ne();var{builders:{softline:t,align:s}}=qe(),{hasEndComments:a,isNextLineEmpty:n,isNode:u}=$t(),i=new WeakMap;function p(h){return a(h)&&!u(h,["documentHead","documentBody","flowMapping","flowSequence"])}r.exports={alignWithSpaces:function y(h,g){return s(" ".repeat(h),g)},shouldPrintEndComments:p,printNextEmptyLine:function l(h,g){let F,c=h.getValue(),f=h.stack[0];return i.has(f)?F=i.get(f):(F=new Set,i.set(f,F)),F.has(c.position.end.line)||(F.add(c.position.end.line),!n(c,g)||p(h.getParentNode()))?"":t}}}}),Rg=te({"src/language-yaml/print/flow-mapping-sequence.js"(e,r){ne();var{builders:{ifBreak:t,line:s,softline:a,hardline:n,join:u}}=qe(),{isEmptyNode:i,getLast:l,hasEndComments:p}=$t(),{printNextEmptyLine:y,alignWithSpaces:h}=Mr();function g(f,F,_){let w=f.getValue(),E="flowMapping"===w.type,N=E?"{":"[",x=E?"}":"]",I=a;E&&w.children.length>0&&_.bracketSpacing&&(I=s);let P=l(w.children),$=P&&"flowMappingItem"===P.type&&i(P.key)&&i(P.value);return[N,h(_.tabWidth,[I,c(f,F,_),"none"===_.trailingComma?"":t(","),p(w)?[n,u(n,f.map(F,"endComments"))]:""]),$?"":I,x]}function c(f,F,_){let w=f.getValue();return f.map(((N,x)=>[F(),x===w.children.length-1?"":[",",s,w.children[x].position.start.line!==w.children[x+1].position.start.line?y(N,_.originalText):""]]),"children")}r.exports={printFlowMapping:g,printFlowSequence:g}}}),$g=te({"src/language-yaml/print/mapping-item.js"(e,r){ne();var{builders:{conditionalGroup:t,group:s,hardline:a,ifBreak:n,join:u,line:i}}=qe(),{hasLeadingComments:l,hasMiddleComments:p,hasTrailingComment:y,hasEndComments:h,isNode:g,isEmptyNode:c,isInlineNode:f}=$t(),{alignWithSpaces:F}=Mr();function w(x,I){if(!x)return!0;switch(x.type){case"plain":case"quoteSingle":case"quoteDouble":break;case"alias":return!0;default:return!1}if("preserve"===I.proseWrap)return x.position.start.line===x.position.end.line;if(/\\$/m.test(I.originalText.slice(x.position.start.offset,x.position.end.offset)))return!1;switch(I.proseWrap){case"never":return!x.value.includes("\n");case"always":return!/[\n ]/.test(x.value);default:return!1}}r.exports=function _(x,I,P,$,D){let{key:T,value:m}=x,C=c(T),o=c(m);if(C&&o)return": ";let d=$("key"),v=function E(x){return x.key.content&&"alias"===x.key.content.type}(x)?" ":"";if(o)return"flowMappingItem"===x.type&&"flowMapping"===I.type?d:"mappingItem"!==x.type||!w(T.content,D)||y(T.content)||I.tag&&"tag:yaml.org,2002:set"===I.tag.value?["? ",F(2,d)]:[d,v,":"];let S=$("value");if(C)return[": ",F(2,S)];if(l(m)||!f(T.content))return["? ",F(2,d),a,u("",P.map($,"value","leadingComments").map((q=>[q,a]))),": ",F(2,S)];if(function N(x){if(!x)return!0;switch(x.type){case"plain":case"quoteDouble":case"quoteSingle":return x.position.start.line===x.position.end.line;case"alias":return!0;default:return!1}}(T.content)&&!l(T.content)&&!p(T.content)&&!y(T.content)&&!h(T)&&!l(m.content)&&!p(m.content)&&!h(m)&&w(m.content,D))return[d,v,": ",S];let b=Symbol("mappingKey"),B=s([n("? "),s(F(2,d),{id:b})]),k=[a,": ",F(2,S)],M=[v,":"];l(m.content)||h(m)&&m.content&&!g(m.content,["mapping","sequence"])||"mapping"===I.type&&y(T.content)&&f(m.content)||g(m.content,["mapping","sequence"])&&null===m.content.tag&&null===m.content.anchor?M.push(a):m.content&&M.push(i),M.push(S);let R=F(D.tabWidth,M);return!w(T.content,D)||l(T.content)||p(T.content)||h(T)?t([[B,n(k,R,{groupId:b})]]):t([[d,R]])}}}),Vg=te({"src/language-yaml/print/block.js"(e,r){ne();var{builders:{dedent:t,dedentToRoot:s,fill:a,hardline:n,join:u,line:i,literalline:l,markAsRoot:p},utils:{getDocParts:y}}=qe(),{getAncestorCount:h,getBlockValueLineContents:g,hasIndicatorComment:c,isLastDescendantNode:f,isNode:F}=$t(),{alignWithSpaces:_}=Mr();r.exports=function w(E,N,x){let I=E.getValue(),P=h(E,(C=>F(C,["sequence","mapping"]))),$=f(E),D=["blockFolded"===I.type?">":"|"];null!==I.indent&&D.push(I.indent.toString()),"clip"!==I.chomping&&D.push("keep"===I.chomping?"+":"-"),c(I)&&D.push(" ",N("indicatorComment"));let T=g(I,{parentIndent:P,isLastDescendant:$,options:x}),m=[];for(let[C,o]of T.entries())0===C&&m.push(n),m.push(a(y(u(i,o)))),C!==T.length-1?m.push(0===o.length?n:p(l)):"keep"===I.chomping&&$&&m.push(s(0===o.length?n:l));return null===I.indent?D.push(t(_(x.tabWidth,m))):D.push(s(_(I.indent-1+P,m))),D}}}),Wg=te({"src/language-yaml/printer-yaml.js"(e,r){ne();var{builders:{breakParent:t,fill:s,group:a,hardline:n,join:u,line:i,lineSuffix:l,literalline:p},utils:{getDocParts:y,replaceTextEndOfLine:h}}=qe(),{isPreviousLineEmpty:g}=Ue(),{insertPragma:c,isPragma:f}=Og(),{locStart:F}=jg(),_=qg(),{getFlowScalarLineContents:w,getLastDescendantNode:E,hasLeadingComments:N,hasMiddleComments:x,hasTrailingComment:I,hasEndComments:P,hasPrettierIgnore:$,isLastDescendantNode:D,isNode:T,isInlineNode:m}=$t(),C=Mg(),{alignWithSpaces:o,printNextEmptyLine:d,shouldPrintEndComments:v}=Mr(),{printFlowMapping:S,printFlowSequence:b}=Rg(),B=$g(),k=Vg();function J(j,Y){return I(j)||Y&&(Y.head.children.length>0||P(Y.head))}function Q(j,Y,ie){let ee=w(j,Y,ie);return u(n,ee.map((ce=>s(y(u(i,ce))))))}r.exports={preprocess:C,embed:_,print:function M(j,Y,ie){let ee=j.getValue(),ce=[];"mappingValue"!==ee.type&&N(ee)&&ce.push([u(n,j.map(ie,"leadingComments")),n]);let{tag:W,anchor:K}=ee;W&&ce.push(ie("tag")),W&&K&&ce.push(" "),K&&ce.push(ie("anchor"));let de="";T(ee,["mapping","sequence","comment","directive","mappingItem","sequenceItem"])&&!D(j)&&(de=d(j,Y.originalText)),(W||K)&&(T(ee,["sequence","mapping"])&&!x(ee)?ce.push(n):ce.push(" ")),x(ee)&&ce.push([1===ee.middleComments.length?"":n,u(n,j.map(ie,"middleComments")),n]);let ue=j.getParentNode();return $(j)?ce.push(h(Y.originalText.slice(ee.position.start.offset,ee.position.end.offset).trimEnd(),p)):ce.push(a(function R(j,Y,ie,ee,ce){switch(j.type){case"root":{let{children:W}=j,K=[];ie.each(((ue,Fe)=>{let z=W[Fe],U=W[Fe+1];0!==Fe&&K.push(n),K.push(ce()),J(z,U)?(K.push(n,"..."),I(z)&&K.push(" ",ce("trailingComment"))):U&&!I(U.head)&&K.push(n,"---")}),"children");let de=E(j);return(!T(de,["blockLiteral","blockFolded"])||"keep"!==de.chomping)&&K.push(n),K}case"document":{let K=[];return"head"===function L(j,Y,ie,ee){return ie.children[0]===j&&/---(?:\s|$)/.test(ee.originalText.slice(F(j),F(j)+4))||j.head.children.length>0||P(j.head)||I(j.head)?"head":!J(j,Y)&&(!!Y&&"root")}(j,Y.children[ie.getName()+1],Y,ee)&&((j.head.children.length>0||j.head.endComments.length>0)&&K.push(ce("head")),I(j.head)?K.push(["---"," ",ce(["head","trailingComment"])]):K.push("---")),function q(j){return j.body.children.length>0||P(j.body)}(j)&&K.push(ce("body")),u(n,K)}case"documentHead":return u(n,[...ie.map(ce,"children"),...ie.map(ce,"endComments")]);case"documentBody":{let{children:W,endComments:K}=j,de="";if(W.length>0&&K.length>0){let ue=E(j);T(ue,["blockFolded","blockLiteral"])?"keep"!==ue.chomping&&(de=[n,n]):de=n}return[u(n,ie.map(ce,"children")),de,u(n,ie.map(ce,"endComments"))]}case"directive":return["%",u(" ",[j.name,...j.parameters])];case"comment":return["#",j.value];case"alias":return["*",j.value];case"tag":return ee.originalText.slice(j.position.start.offset,j.position.end.offset);case"anchor":return["&",j.value];case"plain":return Q(j.type,ee.originalText.slice(j.position.start.offset,j.position.end.offset),ee);case"quoteDouble":case"quoteSingle":{let W="'",K='"',de=ee.originalText.slice(j.position.start.offset+1,j.position.end.offset-1);if("quoteSingle"===j.type&&de.includes("\\")||"quoteDouble"===j.type&&/\\[^"]/.test(de)){let Fe="quoteDouble"===j.type?K:W;return[Fe,Q(j.type,de,ee),Fe]}if(de.includes(K))return[W,Q(j.type,"quoteDouble"===j.type?de.replace(/\\"/g,K).replace(/'/g,W.repeat(2)):de,ee),W];if(de.includes(W))return[K,Q(j.type,"quoteSingle"===j.type?de.replace(/''/g,W):de,ee),K];let ue=ee.singleQuote?W:K;return[ue,Q(j.type,de,ee),ue]}case"blockFolded":case"blockLiteral":return k(ie,ce,ee);case"mapping":case"sequence":return u(n,ie.map(ce,"children"));case"sequenceItem":return["- ",o(2,j.content?ce("content"):"")];case"mappingKey":case"mappingValue":return j.content?ce("content"):"";case"mappingItem":case"flowMappingItem":return B(j,Y,ie,ce,ee);case"flowMapping":return S(ie,ce,ee);case"flowSequence":return b(ie,ce,ee);case"flowSequenceItem":return ce("content");default:throw new Error(`Unexpected node type ${j.type}`)}}(ee,ue,j,Y,ie))),I(ee)&&!T(ee,["document","documentHead"])&&ce.push(l(["mappingValue"!==ee.type||ee.content?" ":"","mappingKey"===ue.type&&"mapping"===j.getParentNode(2).type&&m(ee)?"":t,ie("trailingComment")])),v(ee)&&ce.push(o("sequenceItem"===ee.type?2:0,[n,u(n,j.map((Fe=>[g(Y.originalText,Fe.getValue(),F)?n:"",ie()]),"endComments"))])),ce.push(de),ce},massageAstNode:function V(j,Y){if(T(Y))switch(delete Y.position,Y.type){case"comment":if(f(Y.value))return null;break;case"quoteDouble":case"quoteSingle":Y.type="quote"}},insertPragma:c}}}),Hg=te({"src/language-yaml/options.js"(e,r){ne();var t=Mt();r.exports={bracketSpacing:t.bracketSpacing,singleQuote:t.singleQuote,proseWrap:t.proseWrap}}}),Gg=te({"src/language-yaml/parsers.js"(){ne()}}),Ug=te({"node_modules/linguist-languages/data/YAML.json"(e,r){r.exports={name:"YAML",type:"data",color:"#cb171e",tmScope:"source.yaml",aliases:["yml"],extensions:[".yml",".mir",".reek",".rviz",".sublime-syntax",".syntax",".yaml",".yaml-tmlanguage",".yaml.sed",".yml.mysql"],filenames:[".clang-format",".clang-tidy",".gemrc","CITATION.cff","glide.lock","yarn.lock"],aceMode:"yaml",codemirrorMode:"yaml",codemirrorMimeType:"text/x-yaml",languageId:407}}}),Jg=te({"src/language-yaml/index.js"(e,r){ne();var t=_t(),s=Wg(),a=Hg(),n=Gg(),u=[t(Ug(),(i=>({since:"1.14.0",parsers:["yaml"],vscodeLanguageIds:["yaml","ansible","home-assistant"],filenames:[...i.filenames.filter((l=>"yarn.lock"!==l)),".prettierrc",".stylelintrc",".lintstagedrc"]})))];r.exports={languages:u,printers:{yaml:s},options:a,parsers:n}}}),zg=te({"src/languages.js"(e,r){ne(),r.exports=[Bd(),Ud(),eg(),ag(),dg(),Lg(),Jg()]}});ne();var{version:Xg}=Ia(),Ot=Gm(),{getSupportInfo:Kg}=Xn(),Yg=Um(),Qg=zg(),Zg=qe();function Nt(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return function(){for(var t=arguments.length,s=new Array(t),a=0;a<t;a++)s[a]=arguments[a];let n=s[r]||{},u=n.plugins||[];return s[r]=Object.assign(Object.assign({},n),{},{plugins:[...Qg,...Array.isArray(u)?u:Object.values(u)]}),e(...s)}}var jn=Nt(Ot.formatWithCursor);jo.exports={formatWithCursor:jn,format:(e,r)=>jn(e,r).formatted,check(e,r){let{formatted:t}=jn(e,r);return t===e},doc:Zg,getSupportInfo:Nt(Kg,0),version:Xg,util:Yg,__debug:{parse:Nt(Ot.parse),formatAST:Nt(Ot.formatAST),formatDoc:Nt(Ot.formatDoc),printToDoc:Nt(Ot.printToDoc),printDocToString:Nt(Ot.printDocToString)}}}));return e0()}))}}),import_parser_html=(0,_chunk_NNAAFZ4U_mjs__WEBPACK_IMPORTED_MODULE_1__.v)(require_parser_html()),import_standalone=(0,_chunk_NNAAFZ4U_mjs__WEBPACK_IMPORTED_MODULE_1__.v)(require_standalone());var formatter=memoizerific__WEBPACK_IMPORTED_MODULE_0___default()(2)(((type,source)=>!1===type?source:"dedent"===type||!0===type?function dedent(templ){for(var values=[],_i=1;_i<arguments.length;_i++)values[_i-1]=arguments[_i];var strings=Array.from("string"==typeof templ?[templ]:templ);strings[strings.length-1]=strings[strings.length-1].replace(/\r?\n([\t ]*)$/,"");var indentLengths=strings.reduce((function(arr,str){var matches=str.match(/\n([\t ]+|(?!\s).)/g);return matches?arr.concat(matches.map((function(match){var _a,_b;return null!==(_b=null===(_a=match.match(/[\t ]/g))||void 0===_a?void 0:_a.length)&&void 0!==_b?_b:0}))):arr}),[]);if(indentLengths.length){var pattern_1=new RegExp("\n[\t ]{"+Math.min.apply(Math,indentLengths)+"}","g");strings=strings.map((function(str){return str.replace(pattern_1,"\n")}))}strings[0]=strings[0].replace(/^\r?\n/,"");var string=strings[0];return values.forEach((function(value,i){var endentations=string.match(/(?:^|\n)( *)$/),endentation=endentations?endentations[1]:"",indentedValue=value;"string"==typeof value&&value.includes("\n")&&(indentedValue=String(value).split("\n").map((function(str,i2){return 0===i2?str:""+endentation+str})).join("\n")),string+=indentedValue+strings[i+1]})),string}(source):import_standalone.default.format(source,{parser:type,plugins:[import_parser_html.default],htmlWhitespaceSensitivity:"ignore"}).trim()))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,